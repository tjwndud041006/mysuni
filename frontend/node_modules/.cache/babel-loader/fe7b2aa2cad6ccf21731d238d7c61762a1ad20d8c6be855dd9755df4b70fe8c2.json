{"ast":null,"code":"const setChunk = function (term, chunk) {\n  const env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env;\n  if (env.DEBUG_CHUNKS) {\n    let str = (term.normal + \"'\").padEnd(8);\n    console.log(`  | '${str}  →  \\x1b[34m${chunk.padEnd(12)}\\x1b[0m \\x1b[2m -fallback- \\x1b[0m`); // eslint-disable-line\n  }\n  term.chunk = chunk;\n};\n\n// ensure everything has a chunk\nconst fallback = function (document) {\n  for (let n = 0; n < document.length; n += 1) {\n    for (let t = 0; t < document[n].length; t += 1) {\n      let term = document[n][t];\n      if (term.chunk === undefined) {\n        // conjunctions stand alone\n        if (term.tags.has('Conjunction')) {\n          setChunk(term, 'Pivot');\n        } else if (term.tags.has('Preposition')) {\n          setChunk(term, 'Pivot');\n        } else if (term.tags.has('Adverb')) {\n          setChunk(term, 'Verb');\n        }\n        // just take the chunk on the right?\n        // else if (document[n][t + 1] && document[n][t + 1].chunk) {\n        //   setChunk(term, document[n][t + 1].chunk)\n        // }\n        // // or take the chunk on the left\n        // else if (document[n][t - 1] && document[n][t - 1].chunk) {\n        //   setChunk(term, document[n][t - 1].chunk)\n        else {\n          //  ¯\\_(ツ)_/¯\n          term.chunk = 'Noun';\n        }\n      }\n    }\n  }\n};\nexport default fallback;","map":{"version":3,"names":["setChunk","term","chunk","env","process","self","DEBUG_CHUNKS","str","normal","padEnd","console","log","fallback","document","n","length","t","undefined","tags","has"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/3-three/chunker/compute/04-fallback.js"],"sourcesContent":["const setChunk = function (term, chunk) {\n  const env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env\n  if (env.DEBUG_CHUNKS) {\n    let str = (term.normal + \"'\").padEnd(8)\n    console.log(`  | '${str}  →  \\x1b[34m${chunk.padEnd(12)}\\x1b[0m \\x1b[2m -fallback- \\x1b[0m`) // eslint-disable-line\n  }\n  term.chunk = chunk\n}\n\n// ensure everything has a chunk\nconst fallback = function (document) {\n  for (let n = 0; n < document.length; n += 1) {\n    for (let t = 0; t < document[n].length; t += 1) {\n      let term = document[n][t]\n      if (term.chunk === undefined) {\n        // conjunctions stand alone\n        if (term.tags.has('Conjunction')) {\n          setChunk(term, 'Pivot')\n        } else if (term.tags.has('Preposition')) {\n          setChunk(term, 'Pivot')\n        } else if (term.tags.has('Adverb')) {\n          setChunk(term, 'Verb')\n        }\n        // just take the chunk on the right?\n        // else if (document[n][t + 1] && document[n][t + 1].chunk) {\n        //   setChunk(term, document[n][t + 1].chunk)\n        // }\n        // // or take the chunk on the left\n        // else if (document[n][t - 1] && document[n][t - 1].chunk) {\n        //   setChunk(term, document[n][t - 1].chunk)\n        else {\n          //  ¯\\_(ツ)_/¯\n          term.chunk = 'Noun'\n        }\n      }\n    }\n  }\n}\nexport default fallback\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,SAAAA,CAAUC,IAAI,EAAEC,KAAK,EAAE;EACtC,MAAMC,GAAG,GAAG,OAAOC,OAAO,KAAK,WAAW,IAAI,CAACA,OAAO,CAACD,GAAG,GAAGE,IAAI,CAACF,GAAG,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACD,GAAG;EACzF,IAAIA,GAAG,CAACG,YAAY,EAAE;IACpB,IAAIC,GAAG,GAAG,CAACN,IAAI,CAACO,MAAM,GAAG,GAAG,EAAEC,MAAM,CAAC,CAAC,CAAC;IACvCC,OAAO,CAACC,GAAG,CAAC,QAAQJ,GAAG,gBAAgBL,KAAK,CAACO,MAAM,CAAC,EAAE,CAAC,oCAAoC,CAAC,EAAC;EAC/F;EACAR,IAAI,CAACC,KAAK,GAAGA,KAAK;AACpB,CAAC;;AAED;AACA,MAAMU,QAAQ,GAAG,SAAAA,CAAUC,QAAQ,EAAE;EACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IAC3C,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACC,CAAC,CAAC,CAACC,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAE;MAC9C,IAAIf,IAAI,GAAGY,QAAQ,CAACC,CAAC,CAAC,CAACE,CAAC,CAAC;MACzB,IAAIf,IAAI,CAACC,KAAK,KAAKe,SAAS,EAAE;QAC5B;QACA,IAAIhB,IAAI,CAACiB,IAAI,CAACC,GAAG,CAAC,aAAa,CAAC,EAAE;UAChCnB,QAAQ,CAACC,IAAI,EAAE,OAAO,CAAC;QACzB,CAAC,MAAM,IAAIA,IAAI,CAACiB,IAAI,CAACC,GAAG,CAAC,aAAa,CAAC,EAAE;UACvCnB,QAAQ,CAACC,IAAI,EAAE,OAAO,CAAC;QACzB,CAAC,MAAM,IAAIA,IAAI,CAACiB,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAE;UAClCnB,QAAQ,CAACC,IAAI,EAAE,MAAM,CAAC;QACxB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAAA,KACK;UACH;UACAA,IAAI,CAACC,KAAK,GAAG,MAAM;QACrB;MACF;IACF;EACF;AACF,CAAC;AACD,eAAeU,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}