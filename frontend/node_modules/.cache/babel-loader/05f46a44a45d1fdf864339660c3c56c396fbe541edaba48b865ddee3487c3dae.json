{"ast":null,"code":"import { find, strip } from './fns.js';\nconst api = function (View) {\n  class Parentheses extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups);\n      this.viewType = 'Possessives';\n    }\n    strip() {\n      return strip(this);\n    }\n  }\n  View.prototype.parentheses = function (n) {\n    let m = find(this);\n    m = m.getNth(n);\n    return new Parentheses(m.document, m.pointer);\n  };\n};\nexport default api;","map":{"version":3,"names":["find","strip","api","View","Parentheses","constructor","document","pointer","groups","viewType","prototype","parentheses","n","m","getNth"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/3-three/misc/parentheses/index.js"],"sourcesContent":["import { find, strip } from './fns.js'\n\nconst api = function (View) {\n  class Parentheses extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Possessives'\n    }\n    strip() {\n      return strip(this)\n    }\n  }\n\n  View.prototype.parentheses = function (n) {\n    let m = find(this)\n    m = m.getNth(n)\n    return new Parentheses(m.document, m.pointer)\n  }\n}\nexport default api\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,KAAK,QAAQ,UAAU;AAEtC,MAAMC,GAAG,GAAG,SAAAA,CAAUC,IAAI,EAAE;EAC1B,MAAMC,WAAW,SAASD,IAAI,CAAC;IAC7BE,WAAWA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAE;MACrC,KAAK,CAACF,QAAQ,EAAEC,OAAO,EAAEC,MAAM,CAAC;MAChC,IAAI,CAACC,QAAQ,GAAG,aAAa;IAC/B;IACAR,KAAKA,CAAA,EAAG;MACN,OAAOA,KAAK,CAAC,IAAI,CAAC;IACpB;EACF;EAEAE,IAAI,CAACO,SAAS,CAACC,WAAW,GAAG,UAAUC,CAAC,EAAE;IACxC,IAAIC,CAAC,GAAGb,IAAI,CAAC,IAAI,CAAC;IAClBa,CAAC,GAAGA,CAAC,CAACC,MAAM,CAACF,CAAC,CAAC;IACf,OAAO,IAAIR,WAAW,CAACS,CAAC,CAACP,QAAQ,EAAEO,CAAC,CAACN,OAAO,CAAC;EAC/C,CAAC;AACH,CAAC;AACD,eAAeL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}