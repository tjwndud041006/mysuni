{"ast":null,"code":"import normalize from '../compute/normal/index.js';\n\n// turn a string input into a 'document' json format\nconst parse = function (input, world) {\n  const {\n    methods,\n    model\n  } = world;\n  const {\n    splitSentences,\n    splitTerms,\n    splitWhitespace\n  } = methods.one.tokenize;\n  input = input || '';\n  // split into sentences\n  let sentences = splitSentences(input, world);\n  // split into word objects\n  input = sentences.map(txt => {\n    let terms = splitTerms(txt, model);\n    // split into [pre-text-post]\n    terms = terms.map(t => splitWhitespace(t, model));\n    // add normalized term format, always\n    terms.forEach(t => {\n      normalize(t, world);\n    });\n    return terms;\n  });\n  return input;\n};\nexport default parse;","map":{"version":3,"names":["normalize","parse","input","world","methods","model","splitSentences","splitTerms","splitWhitespace","one","tokenize","sentences","map","txt","terms","t","forEach"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/tokenize/methods/parse.js"],"sourcesContent":["import normalize from '../compute/normal/index.js'\n\n// turn a string input into a 'document' json format\nconst parse = function (input, world) {\n  const { methods, model } = world\n  const { splitSentences, splitTerms, splitWhitespace } = methods.one.tokenize\n  input = input || ''\n  // split into sentences\n  let sentences = splitSentences(input, world)\n  // split into word objects\n  input = sentences.map((txt) => {\n    let terms = splitTerms(txt, model)\n    // split into [pre-text-post]\n    terms = terms.map(t => splitWhitespace(t, model))\n    // add normalized term format, always\n    terms.forEach((t) => {\n      normalize(t, world)\n    })\n    return terms\n  })\n  return input\n}\nexport default parse"],"mappings":"AAAA,OAAOA,SAAS,MAAM,4BAA4B;;AAElD;AACA,MAAMC,KAAK,GAAG,SAAAA,CAAUC,KAAK,EAAEC,KAAK,EAAE;EACpC,MAAM;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGF,KAAK;EAChC,MAAM;IAAEG,cAAc;IAAEC,UAAU;IAAEC;EAAgB,CAAC,GAAGJ,OAAO,CAACK,GAAG,CAACC,QAAQ;EAC5ER,KAAK,GAAGA,KAAK,IAAI,EAAE;EACnB;EACA,IAAIS,SAAS,GAAGL,cAAc,CAACJ,KAAK,EAAEC,KAAK,CAAC;EAC5C;EACAD,KAAK,GAAGS,SAAS,CAACC,GAAG,CAAEC,GAAG,IAAK;IAC7B,IAAIC,KAAK,GAAGP,UAAU,CAACM,GAAG,EAAER,KAAK,CAAC;IAClC;IACAS,KAAK,GAAGA,KAAK,CAACF,GAAG,CAACG,CAAC,IAAIP,eAAe,CAACO,CAAC,EAAEV,KAAK,CAAC,CAAC;IACjD;IACAS,KAAK,CAACE,OAAO,CAAED,CAAC,IAAK;MACnBf,SAAS,CAACe,CAAC,EAAEZ,KAAK,CAAC;IACrB,CAAC,CAAC;IACF,OAAOW,KAAK;EACd,CAAC,CAAC;EACF,OAAOZ,KAAK;AACd,CAAC;AACD,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}