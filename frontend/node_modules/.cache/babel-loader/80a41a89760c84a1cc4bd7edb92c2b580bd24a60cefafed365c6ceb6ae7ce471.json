{"ast":null,"code":"const commonPrefix = function (w1, w2) {\n  let len = Math.min(w1.length, w2.length);\n  while (len > 0) {\n    const prefix = w1.slice(0, len);\n    if (prefix === w2.slice(0, len)) {\n      return prefix;\n    }\n    len -= 1;\n  }\n  return '';\n};\n\n/* Sort elements and remove duplicates from array (modified in place) */\nconst unique = function (a) {\n  a.sort();\n  for (let i = 1; i < a.length; i++) {\n    if (a[i - 1] === a[i]) {\n      a.splice(i, 1);\n    }\n  }\n};\nexport default {\n  commonPrefix,\n  unique\n};","map":{"version":3,"names":["commonPrefix","w1","w2","len","Math","min","length","prefix","slice","unique","a","sort","i","splice"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/efrt/src/pack/fns.js"],"sourcesContent":["const commonPrefix = function (w1, w2) {\n  let len = Math.min(w1.length, w2.length)\n  while (len > 0) {\n    const prefix = w1.slice(0, len)\n    if (prefix === w2.slice(0, len)) {\n      return prefix\n    }\n    len -= 1\n  }\n  return ''\n}\n\n/* Sort elements and remove duplicates from array (modified in place) */\nconst unique = function (a) {\n  a.sort()\n  for (let i = 1; i < a.length; i++) {\n    if (a[i - 1] === a[i]) {\n      a.splice(i, 1)\n    }\n  }\n}\n\nexport default {\n  commonPrefix,\n  unique\n}\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,SAAAA,CAAUC,EAAE,EAAEC,EAAE,EAAE;EACrC,IAAIC,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACJ,EAAE,CAACK,MAAM,EAAEJ,EAAE,CAACI,MAAM,CAAC;EACxC,OAAOH,GAAG,GAAG,CAAC,EAAE;IACd,MAAMI,MAAM,GAAGN,EAAE,CAACO,KAAK,CAAC,CAAC,EAAEL,GAAG,CAAC;IAC/B,IAAII,MAAM,KAAKL,EAAE,CAACM,KAAK,CAAC,CAAC,EAAEL,GAAG,CAAC,EAAE;MAC/B,OAAOI,MAAM;IACf;IACAJ,GAAG,IAAI,CAAC;EACV;EACA,OAAO,EAAE;AACX,CAAC;;AAED;AACA,MAAMM,MAAM,GAAG,SAAAA,CAAUC,CAAC,EAAE;EAC1BA,CAAC,CAACC,IAAI,CAAC,CAAC;EACR,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,CAACJ,MAAM,EAAEM,CAAC,EAAE,EAAE;IACjC,IAAIF,CAAC,CAACE,CAAC,GAAG,CAAC,CAAC,KAAKF,CAAC,CAACE,CAAC,CAAC,EAAE;MACrBF,CAAC,CAACG,MAAM,CAACD,CAAC,EAAE,CAAC,CAAC;IAChB;EACF;AACF,CAAC;AAED,eAAe;EACbZ,YAAY;EACZS;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}