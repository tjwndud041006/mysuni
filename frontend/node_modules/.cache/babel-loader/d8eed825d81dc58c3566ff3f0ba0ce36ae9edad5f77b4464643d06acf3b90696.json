{"ast":null,"code":"const MAX_LEN = 250; // ¯\\_(ツ)_/¯\n\n// support unicode variants?\n// https://stackoverflow.com/questions/13535172/list-of-all-unicodes-open-close-brackets\nconst hasOpen = /\\(/g;\nconst hasClosed = /\\)/g;\nconst mergeParens = function (splits) {\n  let arr = [];\n  for (let i = 0; i < splits.length; i += 1) {\n    let split = splits[i];\n    let m = split.match(hasOpen);\n    if (m !== null && m.length === 1) {\n      // look at next sentence, for closing parenthesis\n      if (splits[i + 1] && splits[i + 1].length < MAX_LEN) {\n        let m2 = splits[i + 1].match(hasClosed);\n        if (m2 !== null && m.length === 1 && !hasOpen.test(splits[i + 1])) {\n          // merge in 2nd sentence\n          splits[i] += splits[i + 1];\n          arr.push(splits[i]);\n          splits[i + 1] = '';\n          i += 1;\n          continue;\n        }\n      }\n    }\n    arr.push(splits[i]);\n  }\n  return arr;\n};\nexport default mergeParens;","map":{"version":3,"names":["MAX_LEN","hasOpen","hasClosed","mergeParens","splits","arr","i","length","split","m","match","m2","test","push"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/tokenize/methods/01-sentences/05-parens-merge.js"],"sourcesContent":["const MAX_LEN = 250// ¯\\_(ツ)_/¯\n\n// support unicode variants?\n// https://stackoverflow.com/questions/13535172/list-of-all-unicodes-open-close-brackets\nconst hasOpen = /\\(/g\nconst hasClosed = /\\)/g\nconst mergeParens = function (splits) {\n  let arr = []\n  for (let i = 0; i < splits.length; i += 1) {\n    let split = splits[i]\n    let m = split.match(hasOpen)\n    if (m !== null && m.length === 1) {\n      // look at next sentence, for closing parenthesis\n      if (splits[i + 1] && splits[i + 1].length < MAX_LEN) {\n        let m2 = splits[i + 1].match(hasClosed)\n        if (m2 !== null && m.length === 1 && !hasOpen.test(splits[i + 1])) {\n          // merge in 2nd sentence\n          splits[i] += splits[i + 1]\n          arr.push(splits[i])\n          splits[i + 1] = ''\n          i += 1\n          continue\n        }\n      }\n    }\n    arr.push(splits[i])\n  }\n  return arr\n}\nexport default mergeParens"],"mappings":"AAAA,MAAMA,OAAO,GAAG,GAAG;;AAEnB;AACA;AACA,MAAMC,OAAO,GAAG,KAAK;AACrB,MAAMC,SAAS,GAAG,KAAK;AACvB,MAAMC,WAAW,GAAG,SAAAA,CAAUC,MAAM,EAAE;EACpC,IAAIC,GAAG,GAAG,EAAE;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACzC,IAAIE,KAAK,GAAGJ,MAAM,CAACE,CAAC,CAAC;IACrB,IAAIG,CAAC,GAAGD,KAAK,CAACE,KAAK,CAACT,OAAO,CAAC;IAC5B,IAAIQ,CAAC,KAAK,IAAI,IAAIA,CAAC,CAACF,MAAM,KAAK,CAAC,EAAE;MAChC;MACA,IAAIH,MAAM,CAACE,CAAC,GAAG,CAAC,CAAC,IAAIF,MAAM,CAACE,CAAC,GAAG,CAAC,CAAC,CAACC,MAAM,GAAGP,OAAO,EAAE;QACnD,IAAIW,EAAE,GAAGP,MAAM,CAACE,CAAC,GAAG,CAAC,CAAC,CAACI,KAAK,CAACR,SAAS,CAAC;QACvC,IAAIS,EAAE,KAAK,IAAI,IAAIF,CAAC,CAACF,MAAM,KAAK,CAAC,IAAI,CAACN,OAAO,CAACW,IAAI,CAACR,MAAM,CAACE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;UACjE;UACAF,MAAM,CAACE,CAAC,CAAC,IAAIF,MAAM,CAACE,CAAC,GAAG,CAAC,CAAC;UAC1BD,GAAG,CAACQ,IAAI,CAACT,MAAM,CAACE,CAAC,CAAC,CAAC;UACnBF,MAAM,CAACE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;UAClBA,CAAC,IAAI,CAAC;UACN;QACF;MACF;IACF;IACAD,GAAG,CAACQ,IAAI,CAACT,MAAM,CAACE,CAAC,CAAC,CAAC;EACrB;EACA,OAAOD,GAAG;AACZ,CAAC;AACD,eAAeF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}