{"ast":null,"code":"import api from './api/index.js';\nimport compress from './api/buildTrie/compress.js';\nimport build from './api/buildTrie/index.js';\n\n/** pre-compile a list of matches to lookup */\nconst lib = {\n  /** turn an array or object into a compressed trie*/\n  buildTrie: function (input) {\n    const trie = build(input, this.world());\n    return compress(trie);\n  }\n};\n// add alias\nlib.compile = lib.buildTrie;\nexport default {\n  api,\n  lib\n};","map":{"version":3,"names":["api","compress","build","lib","buildTrie","input","trie","world","compile"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/lookup/plugin.js"],"sourcesContent":["import api from './api/index.js'\nimport compress from './api/buildTrie/compress.js'\nimport build from './api/buildTrie/index.js'\n\n/** pre-compile a list of matches to lookup */\nconst lib = {\n  /** turn an array or object into a compressed trie*/\n  buildTrie: function (input) {\n    const trie = build(input, this.world())\n    return compress(trie)\n  }\n}\n// add alias\nlib.compile = lib.buildTrie\n\nexport default {\n  api,\n  lib\n}\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,gBAAgB;AAChC,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,KAAK,MAAM,0BAA0B;;AAE5C;AACA,MAAMC,GAAG,GAAG;EACV;EACAC,SAAS,EAAE,SAAAA,CAAUC,KAAK,EAAE;IAC1B,MAAMC,IAAI,GAAGJ,KAAK,CAACG,KAAK,EAAE,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;IACvC,OAAON,QAAQ,CAACK,IAAI,CAAC;EACvB;AACF,CAAC;AACD;AACAH,GAAG,CAACK,OAAO,GAAGL,GAAG,CAACC,SAAS;AAE3B,eAAe;EACbJ,GAAG;EACHG;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}