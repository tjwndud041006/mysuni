{"ast":null,"code":"const isTitleCase = str => /^\\p{Lu}[\\p{Ll}'’]/u.test(str);\nconst isOrg = function (term, i, yelling) {\n  if (!term) {\n    return false;\n  }\n  if (term.tags.has('FirstName') || term.tags.has('Place')) {\n    return false;\n  }\n  if (term.tags.has('ProperNoun') || term.tags.has('Organization') || term.tags.has('Acronym')) {\n    return true;\n  }\n  // allow anything titlecased to be an org\n  if (!yelling && isTitleCase(term.text)) {\n    // only tag a titlecased first-word, if it checks-out\n    if (i === 0) {\n      return term.tags.has('Singular');\n    }\n    return true;\n  }\n  return false;\n};\nconst tagOrgs = function (terms, i, world, yelling) {\n  const orgWords = world.model.two.orgWords;\n  const setTag = world.methods.one.setTag;\n  let term = terms[i];\n  let str = term.machine || term.normal;\n  if (orgWords[str] === true && isOrg(terms[i - 1], i - 1, yelling)) {\n    setTag([terms[i]], 'Organization', world, null, '3-[org-word]');\n    // loop backwards, tag organization-like things\n    for (let t = i; t >= 0; t -= 1) {\n      if (isOrg(terms[t], t, yelling)) {\n        setTag([terms[t]], 'Organization', world, null, '3-[org-word]');\n      } else {\n        break;\n      }\n    }\n  }\n  return null;\n};\nexport default tagOrgs;","map":{"version":3,"names":["isTitleCase","str","test","isOrg","term","i","yelling","tags","has","text","tagOrgs","terms","world","orgWords","model","two","setTag","methods","one","machine","normal","t"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/compute/tagger/3rd-pass/03-orgWords.js"],"sourcesContent":["const isTitleCase = (str) => /^\\p{Lu}[\\p{Ll}'’]/u.test(str)\n\nconst isOrg = function (term, i, yelling) {\n  if (!term) {\n    return false\n  }\n  if (term.tags.has('FirstName') || term.tags.has('Place')) {\n    return false\n  }\n  if (term.tags.has('ProperNoun') || term.tags.has('Organization') || term.tags.has('Acronym')) {\n    return true\n  }\n  // allow anything titlecased to be an org\n  if (!yelling && isTitleCase(term.text)) {\n    // only tag a titlecased first-word, if it checks-out\n    if (i === 0) {\n      return term.tags.has('Singular')\n    }\n    return true\n  }\n  return false\n}\n\nconst tagOrgs = function (terms, i, world, yelling) {\n  const orgWords = world.model.two.orgWords\n  const setTag = world.methods.one.setTag\n  let term = terms[i]\n  let str = term.machine || term.normal\n  if (orgWords[str] === true && isOrg(terms[i - 1], i - 1, yelling)) {\n    setTag([terms[i]], 'Organization', world, null, '3-[org-word]')\n    // loop backwards, tag organization-like things\n    for (let t = i; t >= 0; t -= 1) {\n      if (isOrg(terms[t], t, yelling)) {\n        setTag([terms[t]], 'Organization', world, null, '3-[org-word]')\n      } else {\n        break\n      }\n    }\n  }\n  return null\n}\nexport default tagOrgs"],"mappings":"AAAA,MAAMA,WAAW,GAAIC,GAAG,IAAK,oBAAoB,CAACC,IAAI,CAACD,GAAG,CAAC;AAE3D,MAAME,KAAK,GAAG,SAAAA,CAAUC,IAAI,EAAEC,CAAC,EAAEC,OAAO,EAAE;EACxC,IAAI,CAACF,IAAI,EAAE;IACT,OAAO,KAAK;EACd;EACA,IAAIA,IAAI,CAACG,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC,IAAIJ,IAAI,CAACG,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE;IACxD,OAAO,KAAK;EACd;EACA,IAAIJ,IAAI,CAACG,IAAI,CAACC,GAAG,CAAC,YAAY,CAAC,IAAIJ,IAAI,CAACG,IAAI,CAACC,GAAG,CAAC,cAAc,CAAC,IAAIJ,IAAI,CAACG,IAAI,CAACC,GAAG,CAAC,SAAS,CAAC,EAAE;IAC5F,OAAO,IAAI;EACb;EACA;EACA,IAAI,CAACF,OAAO,IAAIN,WAAW,CAACI,IAAI,CAACK,IAAI,CAAC,EAAE;IACtC;IACA,IAAIJ,CAAC,KAAK,CAAC,EAAE;MACX,OAAOD,IAAI,CAACG,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC;IAClC;IACA,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC;AAED,MAAME,OAAO,GAAG,SAAAA,CAAUC,KAAK,EAAEN,CAAC,EAAEO,KAAK,EAAEN,OAAO,EAAE;EAClD,MAAMO,QAAQ,GAAGD,KAAK,CAACE,KAAK,CAACC,GAAG,CAACF,QAAQ;EACzC,MAAMG,MAAM,GAAGJ,KAAK,CAACK,OAAO,CAACC,GAAG,CAACF,MAAM;EACvC,IAAIZ,IAAI,GAAGO,KAAK,CAACN,CAAC,CAAC;EACnB,IAAIJ,GAAG,GAAGG,IAAI,CAACe,OAAO,IAAIf,IAAI,CAACgB,MAAM;EACrC,IAAIP,QAAQ,CAACZ,GAAG,CAAC,KAAK,IAAI,IAAIE,KAAK,CAACQ,KAAK,CAACN,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEC,OAAO,CAAC,EAAE;IACjEU,MAAM,CAAC,CAACL,KAAK,CAACN,CAAC,CAAC,CAAC,EAAE,cAAc,EAAEO,KAAK,EAAE,IAAI,EAAE,cAAc,CAAC;IAC/D;IACA,KAAK,IAAIS,CAAC,GAAGhB,CAAC,EAAEgB,CAAC,IAAI,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;MAC9B,IAAIlB,KAAK,CAACQ,KAAK,CAACU,CAAC,CAAC,EAAEA,CAAC,EAAEf,OAAO,CAAC,EAAE;QAC/BU,MAAM,CAAC,CAACL,KAAK,CAACU,CAAC,CAAC,CAAC,EAAE,cAAc,EAAET,KAAK,EAAE,IAAI,EAAE,cAAc,CAAC;MACjE,CAAC,MAAM;QACL;MACF;IACF;EACF;EACA,OAAO,IAAI;AACb,CAAC;AACD,eAAeF,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}