{"ast":null,"code":"// is this tag consistent with the tags they already have?\nconst canBe = function (terms, tag, model) {\n  let tagSet = model.one.tagSet;\n  if (!tagSet.hasOwnProperty(tag)) {\n    return true;\n  }\n  let not = tagSet[tag].not || [];\n  for (let i = 0; i < terms.length; i += 1) {\n    let term = terms[i];\n    for (let k = 0; k < not.length; k += 1) {\n      if (term.tags.has(not[k]) === true) {\n        return false; //found a tag conflict - bail!\n      }\n    }\n  }\n  return true;\n};\nexport default canBe;","map":{"version":3,"names":["canBe","terms","tag","model","tagSet","one","hasOwnProperty","not","i","length","term","k","tags","has"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/sweep/methods/tagger/canBe.js"],"sourcesContent":["// is this tag consistent with the tags they already have?\nconst canBe = function (terms, tag, model) {\n  let tagSet = model.one.tagSet\n  if (!tagSet.hasOwnProperty(tag)) {\n    return true\n  }\n  let not = tagSet[tag].not || []\n  for (let i = 0; i < terms.length; i += 1) {\n    let term = terms[i]\n    for (let k = 0; k < not.length; k += 1) {\n      if (term.tags.has(not[k]) === true) {\n        return false //found a tag conflict - bail!\n      }\n    }\n  }\n  return true\n}\nexport default canBe\n"],"mappings":"AAAA;AACA,MAAMA,KAAK,GAAG,SAAAA,CAAUC,KAAK,EAAEC,GAAG,EAAEC,KAAK,EAAE;EACzC,IAAIC,MAAM,GAAGD,KAAK,CAACE,GAAG,CAACD,MAAM;EAC7B,IAAI,CAACA,MAAM,CAACE,cAAc,CAACJ,GAAG,CAAC,EAAE;IAC/B,OAAO,IAAI;EACb;EACA,IAAIK,GAAG,GAAGH,MAAM,CAACF,GAAG,CAAC,CAACK,GAAG,IAAI,EAAE;EAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,KAAK,CAACQ,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACxC,IAAIE,IAAI,GAAGT,KAAK,CAACO,CAAC,CAAC;IACnB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,CAACE,MAAM,EAAEE,CAAC,IAAI,CAAC,EAAE;MACtC,IAAID,IAAI,CAACE,IAAI,CAACC,GAAG,CAACN,GAAG,CAACI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;QAClC,OAAO,KAAK,EAAC;MACf;IACF;EACF;EACA,OAAO,IAAI;AACb,CAAC;AACD,eAAeX,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}