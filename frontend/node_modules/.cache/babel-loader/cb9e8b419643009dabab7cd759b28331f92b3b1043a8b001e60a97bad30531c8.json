{"ast":null,"code":"import { greedyTo } from './logic/greedy.js';\nimport { getGroup } from '../_lib.js';\n\n//support 'unspecific greedy' .* properly\n// its logic is 'greedy until', where it's looking for the next token\n// '.+ foo' means we check for 'foo', indefinetly\nconst doAstrix = function (state) {\n  let {\n    regs\n  } = state;\n  let reg = regs[state.r];\n  let skipto = greedyTo(state, regs[state.r + 1]);\n  //maybe we couldn't find it\n  if (skipto === null || skipto === 0) {\n    return null;\n  }\n  // ensure it's long enough\n  if (reg.min !== undefined && skipto - state.t < reg.min) {\n    return null;\n  }\n  // reduce it back, if it's too long\n  if (reg.max !== undefined && skipto - state.t > reg.max) {\n    state.t = state.t + reg.max;\n    return true;\n  }\n  // set the group result\n  if (state.hasGroup === true) {\n    const g = getGroup(state, state.t);\n    g.length = skipto - state.t;\n  }\n  state.t = skipto;\n  // log(`✓ |greedy|`)\n  return true;\n};\nexport default doAstrix;","map":{"version":3,"names":["greedyTo","getGroup","doAstrix","state","regs","reg","r","skipto","min","undefined","t","max","hasGroup","g","length"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/match/methods/match/steps/astrix.js"],"sourcesContent":["import { greedyTo } from './logic/greedy.js'\nimport { getGroup } from '../_lib.js'\n\n//support 'unspecific greedy' .* properly\n// its logic is 'greedy until', where it's looking for the next token\n// '.+ foo' means we check for 'foo', indefinetly\nconst doAstrix = function (state) {\n  let { regs } = state\n  let reg = regs[state.r]\n\n  let skipto = greedyTo(state, regs[state.r + 1])\n  //maybe we couldn't find it\n  if (skipto === null || skipto === 0) {\n    return null\n  }\n  // ensure it's long enough\n  if (reg.min !== undefined && skipto - state.t < reg.min) {\n    return null\n  }\n  // reduce it back, if it's too long\n  if (reg.max !== undefined && skipto - state.t > reg.max) {\n    state.t = state.t + reg.max\n    return true\n  }\n  // set the group result\n  if (state.hasGroup === true) {\n    const g = getGroup(state, state.t)\n    g.length = skipto - state.t\n  }\n  state.t = skipto\n  // log(`✓ |greedy|`)\n  return true\n}\nexport default doAstrix"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,QAAQ,QAAQ,YAAY;;AAErC;AACA;AACA;AACA,MAAMC,QAAQ,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAChC,IAAI;IAAEC;EAAK,CAAC,GAAGD,KAAK;EACpB,IAAIE,GAAG,GAAGD,IAAI,CAACD,KAAK,CAACG,CAAC,CAAC;EAEvB,IAAIC,MAAM,GAAGP,QAAQ,CAACG,KAAK,EAAEC,IAAI,CAACD,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/C;EACA,IAAIC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,CAAC,EAAE;IACnC,OAAO,IAAI;EACb;EACA;EACA,IAAIF,GAAG,CAACG,GAAG,KAAKC,SAAS,IAAIF,MAAM,GAAGJ,KAAK,CAACO,CAAC,GAAGL,GAAG,CAACG,GAAG,EAAE;IACvD,OAAO,IAAI;EACb;EACA;EACA,IAAIH,GAAG,CAACM,GAAG,KAAKF,SAAS,IAAIF,MAAM,GAAGJ,KAAK,CAACO,CAAC,GAAGL,GAAG,CAACM,GAAG,EAAE;IACvDR,KAAK,CAACO,CAAC,GAAGP,KAAK,CAACO,CAAC,GAAGL,GAAG,CAACM,GAAG;IAC3B,OAAO,IAAI;EACb;EACA;EACA,IAAIR,KAAK,CAACS,QAAQ,KAAK,IAAI,EAAE;IAC3B,MAAMC,CAAC,GAAGZ,QAAQ,CAACE,KAAK,EAAEA,KAAK,CAACO,CAAC,CAAC;IAClCG,CAAC,CAACC,MAAM,GAAGP,MAAM,GAAGJ,KAAK,CAACO,CAAC;EAC7B;EACAP,KAAK,CAACO,CAAC,GAAGH,MAAM;EAChB;EACA,OAAO,IAAI;AACb,CAAC;AACD,eAAeL,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}