{"ast":null,"code":"/* eslint-disable no-console */\nimport cli from './_color.js';\nconst split = (txt, offset, index) => {\n  let buff = index * 9; //there are 9 new chars addded to each highlight\n  let start = offset.start + buff;\n  let end = start + offset.length;\n  let pre = txt.substring(0, start);\n  let mid = txt.substring(start, end);\n  let post = txt.substring(end, txt.length);\n  return [pre, mid, post];\n};\nconst spliceIn = function (txt, offset, index) {\n  let parts = split(txt, offset, index);\n  return `${parts[0]}${cli.blue(parts[1])}${parts[2]}`;\n};\nconst showHighlight = function (doc) {\n  if (!doc.found) {\n    return;\n  }\n  let bySentence = {};\n  doc.fullPointer.forEach(ptr => {\n    bySentence[ptr[0]] = bySentence[ptr[0]] || [];\n    bySentence[ptr[0]].push(ptr);\n  });\n  Object.keys(bySentence).forEach(k => {\n    let full = doc.update([[Number(k)]]);\n    let txt = full.text();\n    let matches = doc.update(bySentence[k]);\n    let json = matches.json({\n      offset: true\n    });\n    json.forEach((obj, i) => {\n      txt = spliceIn(txt, obj.offset, i);\n    });\n    console.log(txt);\n  });\n  console.log('\\n');\n};\nexport default showHighlight;","map":{"version":3,"names":["cli","split","txt","offset","index","buff","start","end","length","pre","substring","mid","post","spliceIn","parts","blue","showHighlight","doc","found","bySentence","fullPointer","forEach","ptr","push","Object","keys","k","full","update","Number","text","matches","json","obj","i","console","log"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/output/methods/debug/highlight.js"],"sourcesContent":["/* eslint-disable no-console */\nimport cli from './_color.js'\n\nconst split = (txt, offset, index) => {\n  let buff = index * 9 //there are 9 new chars addded to each highlight\n  let start = offset.start + buff\n  let end = start + offset.length\n  let pre = txt.substring(0, start)\n  let mid = txt.substring(start, end)\n  let post = txt.substring(end, txt.length)\n  return [pre, mid, post]\n}\n\nconst spliceIn = function (txt, offset, index) {\n  let parts = split(txt, offset, index)\n  return `${parts[0]}${cli.blue(parts[1])}${parts[2]}`\n}\n\nconst showHighlight = function (doc) {\n  if (!doc.found) {\n    return\n  }\n  let bySentence = {}\n  doc.fullPointer.forEach(ptr => {\n    bySentence[ptr[0]] = bySentence[ptr[0]] || []\n    bySentence[ptr[0]].push(ptr)\n  })\n  Object.keys(bySentence).forEach(k => {\n    let full = doc.update([[Number(k)]])\n    let txt = full.text()\n    let matches = doc.update(bySentence[k])\n    let json = matches.json({ offset: true })\n    json.forEach((obj, i) => {\n      txt = spliceIn(txt, obj.offset, i)\n    })\n    console.log(txt)\n  })\n  console.log('\\n')\n}\nexport default showHighlight\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,aAAa;AAE7B,MAAMC,KAAK,GAAGA,CAACC,GAAG,EAAEC,MAAM,EAAEC,KAAK,KAAK;EACpC,IAAIC,IAAI,GAAGD,KAAK,GAAG,CAAC,EAAC;EACrB,IAAIE,KAAK,GAAGH,MAAM,CAACG,KAAK,GAAGD,IAAI;EAC/B,IAAIE,GAAG,GAAGD,KAAK,GAAGH,MAAM,CAACK,MAAM;EAC/B,IAAIC,GAAG,GAAGP,GAAG,CAACQ,SAAS,CAAC,CAAC,EAAEJ,KAAK,CAAC;EACjC,IAAIK,GAAG,GAAGT,GAAG,CAACQ,SAAS,CAACJ,KAAK,EAAEC,GAAG,CAAC;EACnC,IAAIK,IAAI,GAAGV,GAAG,CAACQ,SAAS,CAACH,GAAG,EAAEL,GAAG,CAACM,MAAM,CAAC;EACzC,OAAO,CAACC,GAAG,EAAEE,GAAG,EAAEC,IAAI,CAAC;AACzB,CAAC;AAED,MAAMC,QAAQ,GAAG,SAAAA,CAAUX,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAE;EAC7C,IAAIU,KAAK,GAAGb,KAAK,CAACC,GAAG,EAAEC,MAAM,EAAEC,KAAK,CAAC;EACrC,OAAO,GAAGU,KAAK,CAAC,CAAC,CAAC,GAAGd,GAAG,CAACe,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,EAAE;AACtD,CAAC;AAED,MAAME,aAAa,GAAG,SAAAA,CAAUC,GAAG,EAAE;EACnC,IAAI,CAACA,GAAG,CAACC,KAAK,EAAE;IACd;EACF;EACA,IAAIC,UAAU,GAAG,CAAC,CAAC;EACnBF,GAAG,CAACG,WAAW,CAACC,OAAO,CAACC,GAAG,IAAI;IAC7BH,UAAU,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGH,UAAU,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;IAC7CH,UAAU,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAACD,GAAG,CAAC;EAC9B,CAAC,CAAC;EACFE,MAAM,CAACC,IAAI,CAACN,UAAU,CAAC,CAACE,OAAO,CAACK,CAAC,IAAI;IACnC,IAAIC,IAAI,GAAGV,GAAG,CAACW,MAAM,CAAC,CAAC,CAACC,MAAM,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,IAAIxB,GAAG,GAAGyB,IAAI,CAACG,IAAI,CAAC,CAAC;IACrB,IAAIC,OAAO,GAAGd,GAAG,CAACW,MAAM,CAACT,UAAU,CAACO,CAAC,CAAC,CAAC;IACvC,IAAIM,IAAI,GAAGD,OAAO,CAACC,IAAI,CAAC;MAAE7B,MAAM,EAAE;IAAK,CAAC,CAAC;IACzC6B,IAAI,CAACX,OAAO,CAAC,CAACY,GAAG,EAAEC,CAAC,KAAK;MACvBhC,GAAG,GAAGW,QAAQ,CAACX,GAAG,EAAE+B,GAAG,CAAC9B,MAAM,EAAE+B,CAAC,CAAC;IACpC,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAClC,GAAG,CAAC;EAClB,CAAC,CAAC;EACFiC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;AACnB,CAAC;AACD,eAAepB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}