{"ast":null,"code":"/*\nCopyright (c) 2011, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n'use strict';\n\nconst IndexFile = require('./index_file');\nconst DataFile = require('./data_file');\nfunction pushResults(data, results, offsets, callback) {\n  const wordnet = this;\n  if (offsets.length === 0) {\n    callback(results);\n  } else {\n    data.get(offsets.pop(), function (record) {\n      results.push(record);\n      wordnet.pushResults(data, results, offsets, callback);\n    });\n  }\n}\nfunction lookupFromFiles(files, results, word, callback) {\n  const wordnet = this;\n  if (files.length === 0) {\n    callback(results);\n  } else {\n    const file = files.pop();\n    file.index.lookup(word, function (record) {\n      if (record) {\n        wordnet.pushResults(file.data, results, record.synsetOffset, function () {\n          wordnet.lookupFromFiles(files, results, word, callback);\n        });\n      } else {\n        wordnet.lookupFromFiles(files, results, word, callback);\n      }\n    });\n  }\n}\nfunction lookup(word, callback) {\n  word = word.toLowerCase().replace(/\\s+/g, '_');\n  this.lookupFromFiles([{\n    index: this.nounIndex,\n    data: this.nounData\n  }, {\n    index: this.verbIndex,\n    data: this.verbData\n  }, {\n    index: this.adjIndex,\n    data: this.adjData\n  }, {\n    index: this.advIndex,\n    data: this.advData\n  }], [], word, callback);\n}\nfunction get(synsetOffset, pos, callback) {\n  const dataFile = this.getDataFile(pos);\n  dataFile.get(synsetOffset, function (result) {\n    callback(result);\n  });\n}\nfunction getDataFile(pos) {\n  switch (pos) {\n    case 'n':\n      return this.nounData;\n    case 'v':\n      return this.verbData;\n    case 'a':\n    case 's':\n      return this.adjData;\n    case 'r':\n      return this.advData;\n  }\n}\nfunction loadSynonyms(synonyms, results, ptrs, callback) {\n  const wordnet = this;\n  if (ptrs.length > 0) {\n    const ptr = ptrs.pop();\n    this.get(ptr.synsetOffset, ptr.pos, function (result) {\n      synonyms.push(result);\n      wordnet.loadSynonyms(synonyms, results, ptrs, callback);\n    });\n  } else {\n    wordnet.loadResultSynonyms(synonyms, results, callback);\n  }\n}\nfunction loadResultSynonyms(synonyms, results, callback) {\n  const wordnet = this;\n  if (results.length > 0) {\n    const result = results.pop();\n    wordnet.loadSynonyms(synonyms, results, result.ptrs, callback);\n  } else {\n    callback(synonyms);\n  }\n}\nfunction lookupSynonyms(word, callback) {\n  const wordnet = this;\n  wordnet.lookup(word, function (results) {\n    wordnet.loadResultSynonyms([], results, callback);\n  });\n}\nfunction getSynonyms() {\n  const wordnet = this;\n  const callback = arguments[2] ? arguments[2] : arguments[1];\n  const pos = arguments[0].pos ? arguments[0].pos : arguments[1];\n  const synsetOffset = arguments[0].synsetOffset ? arguments[0].synsetOffset : arguments[0];\n  this.get(synsetOffset, pos, function (result) {\n    wordnet.loadSynonyms([], [], result.ptrs, callback);\n  });\n}\nfunction WordNet(dataDir) {\n  let WNdb = null;\n  if (!dataDir) {\n    try {\n      WNdb = require('wordnet-db');\n    } catch (e) {\n      console.error(\"Please 'npm install wordnet-db' before using WordNet module or specify a dict directory.\");\n      throw e;\n    }\n    dataDir = WNdb.path;\n  }\n  this.nounIndex = new IndexFile(dataDir, 'noun');\n  this.verbIndex = new IndexFile(dataDir, 'verb');\n  this.adjIndex = new IndexFile(dataDir, 'adj');\n  this.advIndex = new IndexFile(dataDir, 'adv');\n  this.nounData = new DataFile(dataDir, 'noun');\n  this.verbData = new DataFile(dataDir, 'verb');\n  this.adjData = new DataFile(dataDir, 'adj');\n  this.advData = new DataFile(dataDir, 'adv');\n  this.get = get;\n  this.lookup = lookup;\n  this.lookupFromFiles = lookupFromFiles;\n  this.pushResults = pushResults;\n  this.loadResultSynonyms = loadResultSynonyms;\n  this.loadSynonyms = loadSynonyms;\n  this.lookupSynonyms = lookupSynonyms;\n  this.getSynonyms = getSynonyms;\n  this.getDataFile = getDataFile;\n}\nmodule.exports = WordNet;","map":{"version":3,"names":["IndexFile","require","DataFile","pushResults","data","results","offsets","callback","wordnet","length","get","pop","record","push","lookupFromFiles","files","word","file","index","lookup","synsetOffset","toLowerCase","replace","nounIndex","nounData","verbIndex","verbData","adjIndex","adjData","advIndex","advData","pos","dataFile","getDataFile","result","loadSynonyms","synonyms","ptrs","ptr","loadResultSynonyms","lookupSynonyms","getSynonyms","arguments","WordNet","dataDir","WNdb","e","console","error","path","module","exports"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/natural/lib/natural/wordnet/wordnet.js"],"sourcesContent":["/*\nCopyright (c) 2011, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n'use strict'\n\nconst IndexFile = require('./index_file')\nconst DataFile = require('./data_file')\n\nfunction pushResults (data, results, offsets, callback) {\n  const wordnet = this\n\n  if (offsets.length === 0) {\n    callback(results)\n  } else {\n    data.get(offsets.pop(), function (record) {\n      results.push(record)\n      wordnet.pushResults(data, results, offsets, callback)\n    })\n  }\n}\n\nfunction lookupFromFiles (files, results, word, callback) {\n  const wordnet = this\n\n  if (files.length === 0) { callback(results) } else {\n    const file = files.pop()\n\n    file.index.lookup(word, function (record) {\n      if (record) {\n        wordnet.pushResults(file.data, results, record.synsetOffset, function () {\n          wordnet.lookupFromFiles(files, results, word, callback)\n        })\n      } else {\n        wordnet.lookupFromFiles(files, results, word, callback)\n      }\n    })\n  }\n}\n\nfunction lookup (word, callback) {\n  word = word.toLowerCase().replace(/\\s+/g, '_')\n\n  this.lookupFromFiles([\n    { index: this.nounIndex, data: this.nounData },\n    { index: this.verbIndex, data: this.verbData },\n    { index: this.adjIndex, data: this.adjData },\n    { index: this.advIndex, data: this.advData }\n  ], [], word, callback)\n}\n\nfunction get (synsetOffset, pos, callback) {\n  const dataFile = this.getDataFile(pos)\n\n  dataFile.get(synsetOffset, function (result) {\n    callback(result)\n  })\n}\n\nfunction getDataFile (pos) {\n  switch (pos) {\n    case 'n':\n      return this.nounData\n    case 'v':\n      return this.verbData\n    case 'a': case 's':\n      return this.adjData\n    case 'r':\n      return this.advData\n  }\n}\n\nfunction loadSynonyms (synonyms, results, ptrs, callback) {\n  const wordnet = this\n\n  if (ptrs.length > 0) {\n    const ptr = ptrs.pop()\n\n    this.get(ptr.synsetOffset, ptr.pos, function (result) {\n      synonyms.push(result)\n      wordnet.loadSynonyms(synonyms, results, ptrs, callback)\n    })\n  } else {\n    wordnet.loadResultSynonyms(synonyms, results, callback)\n  }\n}\n\nfunction loadResultSynonyms (synonyms, results, callback) {\n  const wordnet = this\n\n  if (results.length > 0) {\n    const result = results.pop()\n    wordnet.loadSynonyms(synonyms, results, result.ptrs, callback)\n  } else { callback(synonyms) }\n}\n\nfunction lookupSynonyms (word, callback) {\n  const wordnet = this\n\n  wordnet.lookup(word, function (results) {\n    wordnet.loadResultSynonyms([], results, callback)\n  })\n}\n\nfunction getSynonyms () {\n  const wordnet = this\n  const callback = arguments[2] ? arguments[2] : arguments[1]\n  const pos = arguments[0].pos ? arguments[0].pos : arguments[1]\n  const synsetOffset = arguments[0].synsetOffset ? arguments[0].synsetOffset : arguments[0]\n\n  this.get(synsetOffset, pos, function (result) {\n    wordnet.loadSynonyms([], [], result.ptrs, callback)\n  })\n}\n\nfunction WordNet (dataDir) {\n  let WNdb = null\n  if (!dataDir) {\n    try {\n      WNdb = require('wordnet-db')\n    } catch (e) {\n      console.error(\"Please 'npm install wordnet-db' before using WordNet module or specify a dict directory.\")\n      throw e\n    }\n    dataDir = WNdb.path\n  }\n\n  this.nounIndex = new IndexFile(dataDir, 'noun')\n  this.verbIndex = new IndexFile(dataDir, 'verb')\n  this.adjIndex = new IndexFile(dataDir, 'adj')\n  this.advIndex = new IndexFile(dataDir, 'adv')\n\n  this.nounData = new DataFile(dataDir, 'noun')\n  this.verbData = new DataFile(dataDir, 'verb')\n  this.adjData = new DataFile(dataDir, 'adj')\n  this.advData = new DataFile(dataDir, 'adv')\n\n  this.get = get\n  this.lookup = lookup\n  this.lookupFromFiles = lookupFromFiles\n  this.pushResults = pushResults\n  this.loadResultSynonyms = loadResultSynonyms\n  this.loadSynonyms = loadSynonyms\n  this.lookupSynonyms = lookupSynonyms\n  this.getSynonyms = getSynonyms\n  this.getDataFile = getDataFile\n}\n\nmodule.exports = WordNet\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}