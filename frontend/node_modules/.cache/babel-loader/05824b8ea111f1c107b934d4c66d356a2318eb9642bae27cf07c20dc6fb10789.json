{"ast":null,"code":"const getWords = function (net) {\n  return Object.keys(net.hooks).filter(w => !w.startsWith('#') && !w.startsWith('%'));\n};\nconst maybeMatch = function (doc, net) {\n  // must have *atleast* one of these words\n  let words = getWords(net);\n  if (words.length === 0) {\n    return doc;\n  }\n  if (!doc._cache) {\n    doc.cache();\n  }\n  let cache = doc._cache;\n  // return sentences that have one of our needed words\n  return doc.filter((_m, i) => {\n    return words.some(str => cache[i].has(str));\n  });\n};\nexport default maybeMatch;","map":{"version":3,"names":["getWords","net","Object","keys","hooks","filter","w","startsWith","maybeMatch","doc","words","length","_cache","cache","_m","i","some","str","has"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/lazy/maybeMatch.js"],"sourcesContent":["const getWords = function (net) {\n  return Object.keys(net.hooks).filter(w => !w.startsWith('#') && !w.startsWith('%'))\n}\n\nconst maybeMatch = function (doc, net) {\n  // must have *atleast* one of these words\n  let words = getWords(net)\n  if (words.length === 0) {\n    return doc\n  }\n  if (!doc._cache) {\n    doc.cache()\n  }\n  let cache = doc._cache\n  // return sentences that have one of our needed words\n  return doc.filter((_m, i) => {\n    return words.some(str => cache[i].has(str))\n  })\n}\nexport default maybeMatch"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,SAAAA,CAAUC,GAAG,EAAE;EAC9B,OAAOC,MAAM,CAACC,IAAI,CAACF,GAAG,CAACG,KAAK,CAAC,CAACC,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAACC,UAAU,CAAC,GAAG,CAAC,IAAI,CAACD,CAAC,CAACC,UAAU,CAAC,GAAG,CAAC,CAAC;AACrF,CAAC;AAED,MAAMC,UAAU,GAAG,SAAAA,CAAUC,GAAG,EAAER,GAAG,EAAE;EACrC;EACA,IAAIS,KAAK,GAAGV,QAAQ,CAACC,GAAG,CAAC;EACzB,IAAIS,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACtB,OAAOF,GAAG;EACZ;EACA,IAAI,CAACA,GAAG,CAACG,MAAM,EAAE;IACfH,GAAG,CAACI,KAAK,CAAC,CAAC;EACb;EACA,IAAIA,KAAK,GAAGJ,GAAG,CAACG,MAAM;EACtB;EACA,OAAOH,GAAG,CAACJ,MAAM,CAAC,CAACS,EAAE,EAAEC,CAAC,KAAK;IAC3B,OAAOL,KAAK,CAACM,IAAI,CAACC,GAAG,IAAIJ,KAAK,CAACE,CAAC,CAAC,CAACG,GAAG,CAACD,GAAG,CAAC,CAAC;EAC7C,CAAC,CAAC;AACJ,CAAC;AACD,eAAeT,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}