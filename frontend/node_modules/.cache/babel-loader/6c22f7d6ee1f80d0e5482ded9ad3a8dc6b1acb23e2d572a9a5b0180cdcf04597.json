{"ast":null,"code":"const byHyphen = function (terms, i, model, world) {\n  const setTag = world.methods.one.setTag;\n  // two words w/ a dash\n  if (terms[i].post === '-' && terms[i + 1]) {\n    setTag([terms[i], terms[i + 1]], 'Hyphenated', world, null, `1-punct-hyphen''`);\n\n    // bone-headed, man-made, good-tempered, coursely-ground\n    // if (terms[i + 1].tags.has('PastTense')) {\n    //   let tags = terms[i].tags\n    //   if (tags.has('Noun') || tags.has('Adverb')) {\n    //     setTag([terms[i], terms[i + 1]], 'Adjective', world, null, `2-punct-dash''`)\n    //   }\n\n    // }\n  }\n};\nexport default byHyphen;","map":{"version":3,"names":["byHyphen","terms","i","model","world","setTag","methods","one","post"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/compute/tagger/1st-pass/02-hyphens.js"],"sourcesContent":["const byHyphen = function (terms, i, model, world) {\n  const setTag = world.methods.one.setTag\n  // two words w/ a dash\n  if (terms[i].post === '-' && terms[i + 1]) {\n    setTag([terms[i], terms[i + 1]], 'Hyphenated', world, null, `1-punct-hyphen''`)\n\n    // bone-headed, man-made, good-tempered, coursely-ground\n    // if (terms[i + 1].tags.has('PastTense')) {\n    //   let tags = terms[i].tags\n    //   if (tags.has('Noun') || tags.has('Adverb')) {\n    //     setTag([terms[i], terms[i + 1]], 'Adjective', world, null, `2-punct-dash''`)\n    //   }\n\n    // }\n  }\n}\nexport default byHyphen\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,SAAAA,CAAUC,KAAK,EAAEC,CAAC,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACjD,MAAMC,MAAM,GAAGD,KAAK,CAACE,OAAO,CAACC,GAAG,CAACF,MAAM;EACvC;EACA,IAAIJ,KAAK,CAACC,CAAC,CAAC,CAACM,IAAI,KAAK,GAAG,IAAIP,KAAK,CAACC,CAAC,GAAG,CAAC,CAAC,EAAE;IACzCG,MAAM,CAAC,CAACJ,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,YAAY,EAAEE,KAAK,EAAE,IAAI,EAAE,kBAAkB,CAAC;;IAE/E;IACA;IACA;IACA;IACA;IACA;;IAEA;EACF;AACF,CAAC;AACD,eAAeJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}