{"ast":null,"code":"import { doesOverlap, indexN } from './_lib.js';\n\n// [a,a,a,a,-,-,]\n// [-,-,b,b,b,-,]\n// [-,-,x,x,-,-,]\nconst intersection = function (a, b) {\n  // find the latest-start\n  let start = a[1] < b[1] ? b[1] : a[1];\n  // find the earliest-end\n  let end = a[2] > b[2] ? b[2] : a[2];\n  // does it form a valid pointer?\n  if (start < end) {\n    return [a[0], start, end];\n  }\n  return null;\n};\nconst getIntersection = function (a, b) {\n  let byN = indexN(b);\n  let res = [];\n  a.forEach(ptr => {\n    let hmm = byN[ptr[0]] || [];\n    hmm = hmm.filter(p => doesOverlap(ptr, p));\n    // no sentence-pairs, so no intersection\n    if (hmm.length === 0) {\n      return;\n    }\n    hmm.forEach(h => {\n      let overlap = intersection(ptr, h);\n      if (overlap) {\n        res.push(overlap);\n      }\n    });\n  });\n  return res;\n};\nexport default getIntersection;\n\n// console.log(getIntersection([[0, 1, 3]], [[0, 2, 4]]))","map":{"version":3,"names":["doesOverlap","indexN","intersection","a","b","start","end","getIntersection","byN","res","forEach","ptr","hmm","filter","p","length","h","overlap","push"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/pointers/api/lib/intersection.js"],"sourcesContent":["import { doesOverlap, indexN } from './_lib.js'\n\n// [a,a,a,a,-,-,]\n// [-,-,b,b,b,-,]\n// [-,-,x,x,-,-,]\nconst intersection = function (a, b) {\n  // find the latest-start\n  let start = a[1] < b[1] ? b[1] : a[1]\n  // find the earliest-end\n  let end = a[2] > b[2] ? b[2] : a[2]\n  // does it form a valid pointer?\n  if (start < end) {\n    return [a[0], start, end]\n  }\n  return null\n}\n\nconst getIntersection = function (a, b) {\n  let byN = indexN(b)\n  let res = []\n  a.forEach(ptr => {\n    let hmm = byN[ptr[0]] || []\n    hmm = hmm.filter(p => doesOverlap(ptr, p))\n    // no sentence-pairs, so no intersection\n    if (hmm.length === 0) {\n      return\n    }\n    hmm.forEach(h => {\n      let overlap = intersection(ptr, h)\n      if (overlap) {\n        res.push(overlap)\n      }\n    })\n  })\n  return res\n}\nexport default getIntersection\n\n// console.log(getIntersection([[0, 1, 3]], [[0, 2, 4]]))\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,WAAW;;AAE/C;AACA;AACA;AACA,MAAMC,YAAY,GAAG,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAE;EACnC;EACA,IAAIC,KAAK,GAAGF,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC;EACrC;EACA,IAAIG,GAAG,GAAGH,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC;EACnC;EACA,IAAIE,KAAK,GAAGC,GAAG,EAAE;IACf,OAAO,CAACH,CAAC,CAAC,CAAC,CAAC,EAAEE,KAAK,EAAEC,GAAG,CAAC;EAC3B;EACA,OAAO,IAAI;AACb,CAAC;AAED,MAAMC,eAAe,GAAG,SAAAA,CAAUJ,CAAC,EAAEC,CAAC,EAAE;EACtC,IAAII,GAAG,GAAGP,MAAM,CAACG,CAAC,CAAC;EACnB,IAAIK,GAAG,GAAG,EAAE;EACZN,CAAC,CAACO,OAAO,CAACC,GAAG,IAAI;IACf,IAAIC,GAAG,GAAGJ,GAAG,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;IAC3BC,GAAG,GAAGA,GAAG,CAACC,MAAM,CAACC,CAAC,IAAId,WAAW,CAACW,GAAG,EAAEG,CAAC,CAAC,CAAC;IAC1C;IACA,IAAIF,GAAG,CAACG,MAAM,KAAK,CAAC,EAAE;MACpB;IACF;IACAH,GAAG,CAACF,OAAO,CAACM,CAAC,IAAI;MACf,IAAIC,OAAO,GAAGf,YAAY,CAACS,GAAG,EAAEK,CAAC,CAAC;MAClC,IAAIC,OAAO,EAAE;QACXR,GAAG,CAACS,IAAI,CAACD,OAAO,CAAC;MACnB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOR,GAAG;AACZ,CAAC;AACD,eAAeF,eAAe;;AAE9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}