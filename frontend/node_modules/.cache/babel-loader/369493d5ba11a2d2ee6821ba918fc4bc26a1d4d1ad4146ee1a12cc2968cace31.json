{"ast":null,"code":"// import irregularVerbs from './conjugations.js'\n// harvest list of irregulars for any juicy word-data\nconst expandIrregulars = function (model) {\n  const {\n    irregularPlurals\n  } = model.two;\n  const {\n    lexicon\n  } = model.one;\n  Object.entries(irregularPlurals).forEach(a => {\n    lexicon[a[0]] = lexicon[a[0]] || 'Singular';\n    lexicon[a[1]] = lexicon[a[1]] || 'Plural';\n  });\n  return model;\n};\nexport default expandIrregulars;","map":{"version":3,"names":["expandIrregulars","model","irregularPlurals","two","lexicon","one","Object","entries","forEach","a"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/model/_expand/irregulars.js"],"sourcesContent":["// import irregularVerbs from './conjugations.js'\n// harvest list of irregulars for any juicy word-data\nconst expandIrregulars = function (model) {\n  const { irregularPlurals } = model.two\n  const { lexicon } = model.one\n  Object.entries(irregularPlurals).forEach(a => {\n    lexicon[a[0]] = lexicon[a[0]] || 'Singular'\n    lexicon[a[1]] = lexicon[a[1]] || 'Plural'\n  })\n  return model\n}\nexport default expandIrregulars\n"],"mappings":"AAAA;AACA;AACA,MAAMA,gBAAgB,GAAG,SAAAA,CAAUC,KAAK,EAAE;EACxC,MAAM;IAAEC;EAAiB,CAAC,GAAGD,KAAK,CAACE,GAAG;EACtC,MAAM;IAAEC;EAAQ,CAAC,GAAGH,KAAK,CAACI,GAAG;EAC7BC,MAAM,CAACC,OAAO,CAACL,gBAAgB,CAAC,CAACM,OAAO,CAACC,CAAC,IAAI;IAC5CL,OAAO,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGL,OAAO,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU;IAC3CL,OAAO,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGL,OAAO,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ;EAC3C,CAAC,CAAC;EACF,OAAOR,KAAK;AACd,CAAC;AACD,eAAeD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}