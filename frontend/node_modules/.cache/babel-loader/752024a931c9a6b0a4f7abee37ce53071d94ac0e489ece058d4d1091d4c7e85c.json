{"ast":null,"code":"// borrow a reference from another pronoun\n// 'mike is tall, [he] climbs and [he] swims'\nconst findChained = function (want, s) {\n  let m = s.match(want);\n  if (m.found) {\n    let ref = m.pronouns().refersTo();\n    if (ref.found) {\n      return ref;\n    }\n  }\n  return s.none();\n};\nconst prevSentence = function (m) {\n  if (!m.found) {\n    return m;\n  }\n  let [n] = m.fullPointer[0];\n  if (n && n > 0) {\n    return m.update([[n - 1]]);\n  }\n  return m.none();\n};\nexport { prevSentence, findChained };","map":{"version":3,"names":["findChained","want","s","m","match","found","ref","pronouns","refersTo","none","prevSentence","n","fullPointer","update"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/3-three/coreference/compute/lib.js"],"sourcesContent":["\n// borrow a reference from another pronoun\n// 'mike is tall, [he] climbs and [he] swims'\nconst findChained = function (want, s) {\n  let m = s.match(want)\n  if (m.found) {\n    let ref = m.pronouns().refersTo()\n    if (ref.found) {\n      return ref\n    }\n  }\n  return s.none()\n}\n\nconst prevSentence = function (m) {\n  if (!m.found) {\n    return m\n  }\n  let [n] = m.fullPointer[0]\n  if (n && n > 0) {\n    return m.update([[n - 1]])\n  }\n  return m.none()\n}\nexport { prevSentence, findChained }"],"mappings":"AACA;AACA;AACA,MAAMA,WAAW,GAAG,SAAAA,CAAUC,IAAI,EAAEC,CAAC,EAAE;EACrC,IAAIC,CAAC,GAAGD,CAAC,CAACE,KAAK,CAACH,IAAI,CAAC;EACrB,IAAIE,CAAC,CAACE,KAAK,EAAE;IACX,IAAIC,GAAG,GAAGH,CAAC,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACjC,IAAIF,GAAG,CAACD,KAAK,EAAE;MACb,OAAOC,GAAG;IACZ;EACF;EACA,OAAOJ,CAAC,CAACO,IAAI,CAAC,CAAC;AACjB,CAAC;AAED,MAAMC,YAAY,GAAG,SAAAA,CAAUP,CAAC,EAAE;EAChC,IAAI,CAACA,CAAC,CAACE,KAAK,EAAE;IACZ,OAAOF,CAAC;EACV;EACA,IAAI,CAACQ,CAAC,CAAC,GAAGR,CAAC,CAACS,WAAW,CAAC,CAAC,CAAC;EAC1B,IAAID,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAE;IACd,OAAOR,CAAC,CAACU,MAAM,CAAC,CAAC,CAACF,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5B;EACA,OAAOR,CAAC,CAACM,IAAI,CAAC,CAAC;AACjB,CAAC;AACD,SAASC,YAAY,EAAEV,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}