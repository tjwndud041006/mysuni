{"ast":null,"code":"export default [\n// all fell apart\n{\n  match: '[(all|both)] #Determiner #Noun',\n  group: 0,\n  tag: 'Noun',\n  reason: 'all-noun'\n},\n//sometimes not-adverbs\n{\n  match: '#Copula [(just|alone)]$',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'not-adverb'\n},\n//jack is guarded\n{\n  match: '#Singular is #Adverb? [#PastTense$]',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'is-filled'\n},\n// smoked poutine is\n{\n  match: '[#PastTense] #Singular is',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'smoked-poutine'\n},\n// baked onions are\n{\n  match: '[#PastTense] #Plural are',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'baked-onions'\n},\n// well made\n{\n  match: 'well [#PastTense]',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'well-made'\n},\n// is f*ed up\n{\n  match: '#Copula [fucked up?]',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'swears-adjective'\n},\n//jack seems guarded\n{\n  match: '#Singular (seems|appears) #Adverb? [#PastTense$]',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'seems-filled'\n},\n// jury is out - preposition ➔ adjective\n{\n  match: '#Copula #Adjective? [(out|in|through)]$',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'still-out'\n},\n// shut the door\n{\n  match: '^[#Adjective] (the|your) #Noun',\n  group: 0,\n  notIf: '(all|even)',\n  tag: 'Infinitive',\n  reason: 'shut-the'\n},\n// the said card\n{\n  match: 'the [said] #Noun',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'the-said-card'\n},\n// faith-based, much-appreciated, soft-boiled\n{\n  match: '[#Hyphenated (#Hyphenated && #PastTense)] (#Noun|#Conjunction)',\n  group: 0,\n  tag: 'Adjective',\n  notIf: '#Adverb',\n  reason: 'faith-based'\n},\n//self-driving\n{\n  match: '[#Hyphenated (#Hyphenated && #Gerund)] (#Noun|#Conjunction)',\n  group: 0,\n  tag: 'Adjective',\n  notIf: '#Adverb',\n  reason: 'self-driving'\n},\n//dammed-up\n{\n  match: '[#PastTense (#Hyphenated && #PhrasalVerb)] (#Noun|#Conjunction)',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'dammed-up'\n},\n//two-fold\n{\n  match: '(#Hyphenated && #Value) fold',\n  tag: 'Adjective',\n  reason: 'two-fold'\n},\n//must-win\n{\n  match: 'must (#Hyphenated && #Infinitive)',\n  tag: 'Adjective',\n  reason: 'must-win'\n},\n// vacuum-sealed\n{\n  match: `(#Hyphenated && #Infinitive) #Hyphenated`,\n  tag: 'Adjective',\n  notIf: '#PhrasalVerb',\n  reason: 'vacuum-sealed'\n}, {\n  match: 'too much',\n  tag: 'Adverb Adjective',\n  reason: 'bit-4'\n}, {\n  match: 'a bit much',\n  tag: 'Determiner Adverb Adjective',\n  reason: 'bit-3'\n},\n// adjective-prefixes - 'un skilled'\n{\n  match: '[(un|contra|extra|inter|intra|macro|micro|mid|mis|mono|multi|pre|sub|tri|ex)] #Adjective',\n  group: 0,\n  tag: ['Adjective', 'Prefix'],\n  reason: 'un-skilled'\n}];","map":{"version":3,"names":["match","group","tag","reason","notIf"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/postTagger/model/adjective/adjective.js"],"sourcesContent":["export default [\n  // all fell apart\n  { match: '[(all|both)] #Determiner #Noun', group: 0, tag: 'Noun', reason: 'all-noun' },\n  //sometimes not-adverbs\n  { match: '#Copula [(just|alone)]$', group: 0, tag: 'Adjective', reason: 'not-adverb' },\n  //jack is guarded\n  { match: '#Singular is #Adverb? [#PastTense$]', group: 0, tag: 'Adjective', reason: 'is-filled' },\n  // smoked poutine is\n  { match: '[#PastTense] #Singular is', group: 0, tag: 'Adjective', reason: 'smoked-poutine' },\n  // baked onions are\n  { match: '[#PastTense] #Plural are', group: 0, tag: 'Adjective', reason: 'baked-onions' },\n  // well made\n  { match: 'well [#PastTense]', group: 0, tag: 'Adjective', reason: 'well-made' },\n  // is f*ed up\n  { match: '#Copula [fucked up?]', group: 0, tag: 'Adjective', reason: 'swears-adjective' },\n  //jack seems guarded\n  { match: '#Singular (seems|appears) #Adverb? [#PastTense$]', group: 0, tag: 'Adjective', reason: 'seems-filled' },\n  // jury is out - preposition ➔ adjective\n  { match: '#Copula #Adjective? [(out|in|through)]$', group: 0, tag: 'Adjective', reason: 'still-out' },\n  // shut the door\n  { match: '^[#Adjective] (the|your) #Noun', group: 0, notIf: '(all|even)', tag: 'Infinitive', reason: 'shut-the' },\n  // the said card\n  { match: 'the [said] #Noun', group: 0, tag: 'Adjective', reason: 'the-said-card' },\n  // faith-based, much-appreciated, soft-boiled\n  { match: '[#Hyphenated (#Hyphenated && #PastTense)] (#Noun|#Conjunction)', group: 0, tag: 'Adjective', notIf: '#Adverb', reason: 'faith-based' },\n  //self-driving\n  { match: '[#Hyphenated (#Hyphenated && #Gerund)] (#Noun|#Conjunction)', group: 0, tag: 'Adjective', notIf: '#Adverb', reason: 'self-driving' },\n  //dammed-up\n  { match: '[#PastTense (#Hyphenated && #PhrasalVerb)] (#Noun|#Conjunction)', group: 0, tag: 'Adjective', reason: 'dammed-up' },\n  //two-fold\n  { match: '(#Hyphenated && #Value) fold', tag: 'Adjective', reason: 'two-fold' },\n  //must-win\n  { match: 'must (#Hyphenated && #Infinitive)', tag: 'Adjective', reason: 'must-win' },\n  // vacuum-sealed\n  { match: `(#Hyphenated && #Infinitive) #Hyphenated`, tag: 'Adjective', notIf: '#PhrasalVerb', reason: 'vacuum-sealed' },\n\n  { match: 'too much', tag: 'Adverb Adjective', reason: 'bit-4' },\n  { match: 'a bit much', tag: 'Determiner Adverb Adjective', reason: 'bit-3' },\n\n  // adjective-prefixes - 'un skilled'\n  { match: '[(un|contra|extra|inter|intra|macro|micro|mid|mis|mono|multi|pre|sub|tri|ex)] #Adjective', group: 0, tag: ['Adjective', 'Prefix'], reason: 'un-skilled' },\n\n]\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}