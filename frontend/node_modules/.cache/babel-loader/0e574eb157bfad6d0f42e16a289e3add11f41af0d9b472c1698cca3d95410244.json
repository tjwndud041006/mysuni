{"ast":null,"code":"// simply chunk Nouns as <Noun>\nconst byNeighbour = function (document) {\n  for (let n = 0; n < document.length; n += 1) {\n    for (let t = 0; t < document[n].length; t += 1) {\n      let term = document[n][t];\n      if (term.chunk) {\n        continue;\n      }\n      // based on next-term\n      let onRight = document[n][t + 1];\n      // based on last-term\n      let onLeft = document[n][t - 1];\n\n      //'is cool' vs 'the cool dog'\n      if (term.tags.has('Adjective')) {\n        // 'is cool'\n        if (onLeft && onLeft.tags.has('Copula')) {\n          term.chunk = 'Adjective';\n          continue;\n        }\n        // 'the cool'\n        if (onLeft && onLeft.tags.has('Determiner')) {\n          term.chunk = 'Noun';\n          continue;\n        }\n        // 'cool dog'\n        if (onRight && onRight.tags.has('Noun')) {\n          term.chunk = 'Noun';\n          continue;\n        }\n        continue;\n      }\n      // 'really swimming' vs 'really cool'\n      if (term.tags.has('Adverb') || term.tags.has('Negative')) {\n        if (onLeft && onLeft.tags.has('Adjective')) {\n          term.chunk = 'Adjective';\n          continue;\n        }\n        if (onLeft && onLeft.tags.has('Verb')) {\n          term.chunk = 'Verb';\n          continue;\n        }\n        if (onRight && onRight.tags.has('Adjective')) {\n          term.chunk = 'Adjective';\n          continue;\n        }\n        if (onRight && onRight.tags.has('Verb')) {\n          term.chunk = 'Verb';\n          continue;\n        }\n      }\n    }\n  }\n};\nexport default byNeighbour;","map":{"version":3,"names":["byNeighbour","document","n","length","t","term","chunk","onRight","onLeft","tags","has"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/3-three/chunker/compute/02-neighbours.js"],"sourcesContent":["// simply chunk Nouns as <Noun>\nconst byNeighbour = function (document) {\n  for (let n = 0; n < document.length; n += 1) {\n    for (let t = 0; t < document[n].length; t += 1) {\n      let term = document[n][t]\n      if (term.chunk) {\n        continue\n      }\n      // based on next-term\n      let onRight = document[n][t + 1]\n      // based on last-term\n      let onLeft = document[n][t - 1]\n\n      //'is cool' vs 'the cool dog'\n      if (term.tags.has('Adjective')) {\n        // 'is cool'\n        if (onLeft && onLeft.tags.has('Copula')) {\n          term.chunk = 'Adjective'\n          continue\n        }\n        // 'the cool'\n        if (onLeft && onLeft.tags.has('Determiner')) {\n          term.chunk = 'Noun'\n          continue\n        }\n        // 'cool dog'\n        if (onRight && onRight.tags.has('Noun')) {\n          term.chunk = 'Noun'\n          continue\n        }\n        continue\n      }\n      // 'really swimming' vs 'really cool'\n      if (term.tags.has('Adverb') || term.tags.has('Negative')) {\n        if (onLeft && onLeft.tags.has('Adjective')) {\n          term.chunk = 'Adjective'\n          continue\n        }\n        if (onLeft && onLeft.tags.has('Verb')) {\n          term.chunk = 'Verb'\n          continue\n        }\n\n        if (onRight && onRight.tags.has('Adjective')) {\n          term.chunk = 'Adjective'\n          continue\n        }\n        if (onRight && onRight.tags.has('Verb')) {\n          term.chunk = 'Verb'\n          continue\n        }\n      }\n    }\n  }\n}\nexport default byNeighbour\n"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG,SAAAA,CAAUC,QAAQ,EAAE;EACtC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IAC3C,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACC,CAAC,CAAC,CAACC,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAE;MAC9C,IAAIC,IAAI,GAAGJ,QAAQ,CAACC,CAAC,CAAC,CAACE,CAAC,CAAC;MACzB,IAAIC,IAAI,CAACC,KAAK,EAAE;QACd;MACF;MACA;MACA,IAAIC,OAAO,GAAGN,QAAQ,CAACC,CAAC,CAAC,CAACE,CAAC,GAAG,CAAC,CAAC;MAChC;MACA,IAAII,MAAM,GAAGP,QAAQ,CAACC,CAAC,CAAC,CAACE,CAAC,GAAG,CAAC,CAAC;;MAE/B;MACA,IAAIC,IAAI,CAACI,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC,EAAE;QAC9B;QACA,IAAIF,MAAM,IAAIA,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAE;UACvCL,IAAI,CAACC,KAAK,GAAG,WAAW;UACxB;QACF;QACA;QACA,IAAIE,MAAM,IAAIA,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,YAAY,CAAC,EAAE;UAC3CL,IAAI,CAACC,KAAK,GAAG,MAAM;UACnB;QACF;QACA;QACA,IAAIC,OAAO,IAAIA,OAAO,CAACE,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,EAAE;UACvCL,IAAI,CAACC,KAAK,GAAG,MAAM;UACnB;QACF;QACA;MACF;MACA;MACA,IAAID,IAAI,CAACI,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC,IAAIL,IAAI,CAACI,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,EAAE;QACxD,IAAIF,MAAM,IAAIA,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC,EAAE;UAC1CL,IAAI,CAACC,KAAK,GAAG,WAAW;UACxB;QACF;QACA,IAAIE,MAAM,IAAIA,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,EAAE;UACrCL,IAAI,CAACC,KAAK,GAAG,MAAM;UACnB;QACF;QAEA,IAAIC,OAAO,IAAIA,OAAO,CAACE,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC,EAAE;UAC5CL,IAAI,CAACC,KAAK,GAAG,WAAW;UACxB;QACF;QACA,IAAIC,OAAO,IAAIA,OAAO,CAACE,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,EAAE;UACvCL,IAAI,CAACC,KAAK,GAAG,MAAM;UACnB;QACF;MACF;IACF;EACF;AACF,CAAC;AACD,eAAeN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}