{"ast":null,"code":"import toText from '../../numbers/format/toText/index.js';\nimport textOrdinal from '../../numbers/format/toOrdinal/textOrdinal.js';\nconst toOrdinal = function (obj) {\n  // don't divide by zero!\n  if (!obj.numerator || !obj.denominator) {\n    return '';\n  }\n  // create [two] [fifths]\n  let start = toText({\n    num: obj.numerator\n  });\n  let end = textOrdinal({\n    num: obj.denominator\n  });\n  // 'one secondth' -> 'one half'\n  if (obj.denominator === 2) {\n    end = 'half';\n  }\n  if (start && end) {\n    if (obj.numerator !== 1) {\n      end += 's';\n    }\n    return `${start} ${end}`;\n  }\n  return '';\n};\nexport default toOrdinal;","map":{"version":3,"names":["toText","textOrdinal","toOrdinal","obj","numerator","denominator","start","num","end"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/3-three/numbers/fractions/convert/toOrdinal.js"],"sourcesContent":["import toText from '../../numbers/format/toText/index.js'\nimport textOrdinal from '../../numbers/format/toOrdinal/textOrdinal.js'\n\nconst toOrdinal = function (obj) {\n  // don't divide by zero!\n  if (!obj.numerator || !obj.denominator) {\n    return ''\n  }\n  // create [two] [fifths]\n  let start = toText({ num: obj.numerator })\n  let end = textOrdinal({ num: obj.denominator })\n  // 'one secondth' -> 'one half'\n  if (obj.denominator === 2) {\n    end = 'half'\n  }\n  if (start && end) {\n    if (obj.numerator !== 1) {\n      end += 's'\n    }\n    return `${start} ${end}`\n  }\n  return ''\n}\nexport default toOrdinal\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,sCAAsC;AACzD,OAAOC,WAAW,MAAM,+CAA+C;AAEvE,MAAMC,SAAS,GAAG,SAAAA,CAAUC,GAAG,EAAE;EAC/B;EACA,IAAI,CAACA,GAAG,CAACC,SAAS,IAAI,CAACD,GAAG,CAACE,WAAW,EAAE;IACtC,OAAO,EAAE;EACX;EACA;EACA,IAAIC,KAAK,GAAGN,MAAM,CAAC;IAAEO,GAAG,EAAEJ,GAAG,CAACC;EAAU,CAAC,CAAC;EAC1C,IAAII,GAAG,GAAGP,WAAW,CAAC;IAAEM,GAAG,EAAEJ,GAAG,CAACE;EAAY,CAAC,CAAC;EAC/C;EACA,IAAIF,GAAG,CAACE,WAAW,KAAK,CAAC,EAAE;IACzBG,GAAG,GAAG,MAAM;EACd;EACA,IAAIF,KAAK,IAAIE,GAAG,EAAE;IAChB,IAAIL,GAAG,CAACC,SAAS,KAAK,CAAC,EAAE;MACvBI,GAAG,IAAI,GAAG;IACZ;IACA,OAAO,GAAGF,KAAK,IAAIE,GAAG,EAAE;EAC1B;EACA,OAAO,EAAE;AACX,CAAC;AACD,eAAeN,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}