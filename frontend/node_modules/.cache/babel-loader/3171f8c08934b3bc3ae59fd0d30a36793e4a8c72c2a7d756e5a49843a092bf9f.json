{"ast":null,"code":"const notPlural = '(#Pronoun|#Place|#Value|#Person|#Uncountable|#Month|#WeekDay|#Holiday|#Possessive)';\nconst isPlural = function (m, root) {\n  // const { looksPlural } = m.world.methods.two\n  if (m.has('#Plural')) {\n    return true;\n  }\n  // two singular nouns are plural noun phrase\n  if (m.has('#Noun and #Noun')) {\n    return true;\n  }\n  if (m.has('(we|they)')) {\n    return true;\n  }\n  // these can't be plural\n  if (root.has(notPlural) === true) {\n    return false;\n  }\n  if (m.has('#Singular')) {\n    return false;\n  }\n  // word-reg fallback\n  let str = root.text('normal');\n  // ends with a brutal s fallback\n  return str.length > 3 && str.endsWith('s') && !str.endsWith('ss');\n};\nexport default isPlural;","map":{"version":3,"names":["notPlural","isPlural","m","root","has","str","text","length","endsWith"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/3-three/nouns/api/isPlural.js"],"sourcesContent":["const notPlural = '(#Pronoun|#Place|#Value|#Person|#Uncountable|#Month|#WeekDay|#Holiday|#Possessive)'\n\nconst isPlural = function (m, root) {\n  // const { looksPlural } = m.world.methods.two\n  if (m.has('#Plural')) {\n    return true\n  }\n  // two singular nouns are plural noun phrase\n  if (m.has('#Noun and #Noun')) {\n    return true\n  }\n  if (m.has('(we|they)')) {\n    return true\n  }\n  // these can't be plural\n  if (root.has(notPlural) === true) {\n    return false\n  }\n  if (m.has('#Singular')) {\n    return false\n  }\n  // word-reg fallback\n  let str = root.text('normal')\n  // ends with a brutal s fallback\n  return str.length > 3 && str.endsWith('s') && !str.endsWith('ss')\n}\nexport default isPlural\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,oFAAoF;AAEtG,MAAMC,QAAQ,GAAG,SAAAA,CAAUC,CAAC,EAAEC,IAAI,EAAE;EAClC;EACA,IAAID,CAAC,CAACE,GAAG,CAAC,SAAS,CAAC,EAAE;IACpB,OAAO,IAAI;EACb;EACA;EACA,IAAIF,CAAC,CAACE,GAAG,CAAC,iBAAiB,CAAC,EAAE;IAC5B,OAAO,IAAI;EACb;EACA,IAAIF,CAAC,CAACE,GAAG,CAAC,WAAW,CAAC,EAAE;IACtB,OAAO,IAAI;EACb;EACA;EACA,IAAID,IAAI,CAACC,GAAG,CAACJ,SAAS,CAAC,KAAK,IAAI,EAAE;IAChC,OAAO,KAAK;EACd;EACA,IAAIE,CAAC,CAACE,GAAG,CAAC,WAAW,CAAC,EAAE;IACtB,OAAO,KAAK;EACd;EACA;EACA,IAAIC,GAAG,GAAGF,IAAI,CAACG,IAAI,CAAC,QAAQ,CAAC;EAC7B;EACA,OAAOD,GAAG,CAACE,MAAM,GAAG,CAAC,IAAIF,GAAG,CAACG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACH,GAAG,CAACG,QAAQ,CAAC,IAAI,CAAC;AACnE,CAAC;AACD,eAAeP,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}