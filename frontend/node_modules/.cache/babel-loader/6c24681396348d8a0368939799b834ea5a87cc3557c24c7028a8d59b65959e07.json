{"ast":null,"code":"export default [\n// ==== FirstNames ====\n//is foo Smith\n{\n  match: '#Copula [(#Noun|#PresentTense)] #LastName',\n  group: 0,\n  tag: 'FirstName',\n  reason: 'copula-noun-lastname'\n},\n//pope francis\n{\n  match: '(sister|pope|brother|father|aunt|uncle|grandpa|grandfather|grandma) #ProperNoun',\n  tag: 'Person',\n  reason: 'lady-titlecase',\n  safe: true\n},\n// ==== Nickname ====\n// Dwayne 'the rock' Johnson\n{\n  match: '#FirstName [#Determiner #Noun] #LastName',\n  group: 0,\n  tag: 'Person',\n  reason: 'first-noun-last'\n}, {\n  match: '#ProperNoun (b|c|d|e|f|g|h|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z) #ProperNoun',\n  tag: 'Person',\n  reason: 'titlecase-acronym-titlecase',\n  safe: true\n}, {\n  match: '#Acronym #LastName',\n  tag: 'Person',\n  reason: 'acronym-lastname',\n  safe: true\n}, {\n  match: '#Person (jr|sr|md)',\n  tag: 'Person',\n  reason: 'person-honorific'\n},\n//remove single 'mr'\n{\n  match: '#Honorific #Acronym',\n  tag: 'Person',\n  reason: 'Honorific-TitleCase'\n}, {\n  match: '#Person #Person the? #RomanNumeral',\n  tag: 'Person',\n  reason: 'roman-numeral'\n}, {\n  match: '#FirstName [/^[^aiurck]$/]',\n  group: 0,\n  tag: ['Acronym', 'Person'],\n  reason: 'john-e'\n},\n//j.k Rowling\n{\n  match: '#Noun van der? #Noun',\n  tag: 'Person',\n  reason: 'van der noun',\n  safe: true\n},\n//king of spain\n{\n  match: '(king|queen|prince|saint|lady) of #Noun',\n  tag: 'Person',\n  reason: 'king-of-noun',\n  safe: true\n},\n//lady Florence\n{\n  match: '(prince|lady) #Place',\n  tag: 'Person',\n  reason: 'lady-place'\n},\n//saint Foo\n{\n  match: '(king|queen|prince|saint) #ProperNoun',\n  tag: 'Person',\n  notIf: '#Place',\n  reason: 'saint-foo'\n},\n// al sharpton\n{\n  match: 'al (#Person|#ProperNoun)',\n  tag: 'Person',\n  reason: 'al-borlen',\n  safe: true\n},\n//ferdinand de almar\n{\n  match: '#FirstName de #Noun',\n  tag: 'Person',\n  reason: 'bill-de-noun'\n},\n//Osama bin Laden\n{\n  match: '#FirstName (bin|al) #Noun',\n  tag: 'Person',\n  reason: 'bill-al-noun'\n},\n//John L. Foo\n{\n  match: '#FirstName #Acronym #ProperNoun',\n  tag: 'Person',\n  reason: 'bill-acronym-title'\n},\n//Andrew Lloyd Webber\n{\n  match: '#FirstName #FirstName #ProperNoun',\n  tag: 'Person',\n  reason: 'bill-firstname-title'\n},\n//Mr Foo\n{\n  match: '#Honorific #FirstName? #ProperNoun',\n  tag: 'Person',\n  reason: 'dr-john-Title'\n},\n//peter the great\n{\n  match: '#FirstName the #Adjective',\n  tag: 'Person',\n  reason: 'name-the-great'\n},\n// dick van dyke\n{\n  match: '#ProperNoun (van|al|bin) #ProperNoun',\n  tag: 'Person',\n  reason: 'title-van-title',\n  safe: true\n},\n//jose de Sucre\n{\n  match: '#ProperNoun (de|du) la? #ProperNoun',\n  tag: 'Person',\n  notIf: '#Place',\n  reason: 'title-de-title'\n},\n//Jani K. Smith\n{\n  match: '#Singular #Acronym #LastName',\n  tag: '#FirstName #Person .',\n  reason: 'title-acro-noun',\n  safe: true\n},\n//Foo Ford\n{\n  match: '[#ProperNoun] #Person',\n  group: 0,\n  tag: 'Person',\n  reason: 'proper-person',\n  safe: true\n},\n// john keith jones\n{\n  match: '#Person [#ProperNoun #ProperNoun]',\n  group: 0,\n  tag: 'Person',\n  notIf: '#Possessive',\n  reason: 'three-name-person',\n  safe: true\n},\n//John Foo\n{\n  match: '#FirstName #Acronym? [#ProperNoun]',\n  group: 0,\n  tag: 'LastName',\n  notIf: '#Possessive',\n  reason: 'firstname-titlecase'\n},\n// john stewart\n{\n  match: '#FirstName [#FirstName]',\n  group: 0,\n  tag: 'LastName',\n  reason: 'firstname-firstname'\n},\n//Joe K. Sombrero\n{\n  match: '#FirstName #Acronym #Noun',\n  tag: 'Person',\n  reason: 'n-acro-noun',\n  safe: true\n},\n//Anthony de Marco\n{\n  match: '#FirstName [(de|di|du|van|von)] #Person',\n  group: 0,\n  tag: 'LastName',\n  reason: 'de-firstname'\n},\n// baker jenna smith\n// { match: '[#Actor+] #Person', group: 0, tag: 'Person', reason: 'baker-sam-smith' },\n// sergeant major Harold\n{\n  match: '[(lieutenant|corporal|sergeant|captain|qeen|king|admiral|major|colonel|marshal|president|queen|king)+] #ProperNoun',\n  group: 0,\n  tag: 'Honorific',\n  reason: 'seargeant-john'\n},\n// ==== Honorics ====\n{\n  match: '[(private|general|major|rear|prime|field|count|miss)] #Honorific? #Person',\n  group: 0,\n  tag: ['Honorific', 'Person'],\n  reason: 'ambg-honorifics'\n},\n// dr john foobar\n{\n  match: '#Honorific #FirstName [#Singular]',\n  group: 0,\n  tag: 'LastName',\n  notIf: '#Possessive',\n  reason: 'dr-john-foo',\n  safe: true\n},\n//his-excellency\n{\n  match: '[(his|her) (majesty|honour|worship|excellency|honorable)] #Person',\n  group: 0,\n  tag: 'Honorific',\n  reason: 'his-excellency'\n},\n// Lieutenant colonel\n{\n  match: '#Honorific #Actor',\n  tag: 'Honorific',\n  reason: 'Lieutenant colonel'\n},\n// first lady, second admiral\n{\n  match: '(first|second|third|1st|2nd|3rd) #Actor',\n  tag: 'Honorific',\n  reason: 'first lady'\n},\n// Louis IV\n{\n  match: '#Person #RomanNumeral',\n  tag: 'Person',\n  reason: 'louis-IV'\n}];","map":{"version":3,"names":["match","group","tag","reason","safe","notIf"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/postTagger/model/person/person-phrase.js"],"sourcesContent":["export default [\n  // ==== FirstNames ====\n  //is foo Smith\n  { match: '#Copula [(#Noun|#PresentTense)] #LastName', group: 0, tag: 'FirstName', reason: 'copula-noun-lastname' },\n  //pope francis\n  {\n    match: '(sister|pope|brother|father|aunt|uncle|grandpa|grandfather|grandma) #ProperNoun',\n    tag: 'Person',\n    reason: 'lady-titlecase',\n    safe: true,\n  },\n\n  // ==== Nickname ====\n  // Dwayne 'the rock' Johnson\n  { match: '#FirstName [#Determiner #Noun] #LastName', group: 0, tag: 'Person', reason: 'first-noun-last' },\n  {\n    match: '#ProperNoun (b|c|d|e|f|g|h|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z) #ProperNoun',\n    tag: 'Person',\n    reason: 'titlecase-acronym-titlecase',\n    safe: true,\n  },\n  { match: '#Acronym #LastName', tag: 'Person', reason: 'acronym-lastname', safe: true },\n  { match: '#Person (jr|sr|md)', tag: 'Person', reason: 'person-honorific' },\n  //remove single 'mr'\n  { match: '#Honorific #Acronym', tag: 'Person', reason: 'Honorific-TitleCase' },\n  { match: '#Person #Person the? #RomanNumeral', tag: 'Person', reason: 'roman-numeral' },\n  { match: '#FirstName [/^[^aiurck]$/]', group: 0, tag: ['Acronym', 'Person'], reason: 'john-e' },\n  //j.k Rowling\n  { match: '#Noun van der? #Noun', tag: 'Person', reason: 'van der noun', safe: true },\n  //king of spain\n  { match: '(king|queen|prince|saint|lady) of #Noun', tag: 'Person', reason: 'king-of-noun', safe: true },\n  //lady Florence\n  { match: '(prince|lady) #Place', tag: 'Person', reason: 'lady-place' },\n  //saint Foo\n  { match: '(king|queen|prince|saint) #ProperNoun', tag: 'Person', notIf: '#Place', reason: 'saint-foo' },\n\n  // al sharpton\n  { match: 'al (#Person|#ProperNoun)', tag: 'Person', reason: 'al-borlen', safe: true },\n  //ferdinand de almar\n  { match: '#FirstName de #Noun', tag: 'Person', reason: 'bill-de-noun' },\n  //Osama bin Laden\n  { match: '#FirstName (bin|al) #Noun', tag: 'Person', reason: 'bill-al-noun' },\n  //John L. Foo\n  { match: '#FirstName #Acronym #ProperNoun', tag: 'Person', reason: 'bill-acronym-title' },\n  //Andrew Lloyd Webber\n  { match: '#FirstName #FirstName #ProperNoun', tag: 'Person', reason: 'bill-firstname-title' },\n  //Mr Foo\n  { match: '#Honorific #FirstName? #ProperNoun', tag: 'Person', reason: 'dr-john-Title' },\n  //peter the great\n  { match: '#FirstName the #Adjective', tag: 'Person', reason: 'name-the-great' },\n\n  // dick van dyke\n  { match: '#ProperNoun (van|al|bin) #ProperNoun', tag: 'Person', reason: 'title-van-title', safe: true },\n  //jose de Sucre\n  { match: '#ProperNoun (de|du) la? #ProperNoun', tag: 'Person', notIf: '#Place', reason: 'title-de-title' },\n  //Jani K. Smith\n  { match: '#Singular #Acronym #LastName', tag: '#FirstName #Person .', reason: 'title-acro-noun', safe: true },\n  //Foo Ford\n  { match: '[#ProperNoun] #Person', group: 0, tag: 'Person', reason: 'proper-person', safe: true },\n  // john keith jones\n  {\n    match: '#Person [#ProperNoun #ProperNoun]',\n    group: 0,\n    tag: 'Person',\n    notIf: '#Possessive',\n    reason: 'three-name-person',\n    safe: true,\n  },\n  //John Foo\n  {\n    match: '#FirstName #Acronym? [#ProperNoun]',\n    group: 0,\n    tag: 'LastName',\n    notIf: '#Possessive',\n    reason: 'firstname-titlecase',\n  },\n  // john stewart\n  { match: '#FirstName [#FirstName]', group: 0, tag: 'LastName', reason: 'firstname-firstname' },\n  //Joe K. Sombrero\n  { match: '#FirstName #Acronym #Noun', tag: 'Person', reason: 'n-acro-noun', safe: true },\n  //Anthony de Marco\n  { match: '#FirstName [(de|di|du|van|von)] #Person', group: 0, tag: 'LastName', reason: 'de-firstname' },\n\n  // baker jenna smith\n  // { match: '[#Actor+] #Person', group: 0, tag: 'Person', reason: 'baker-sam-smith' },\n  // sergeant major Harold\n  {\n    match:\n      '[(lieutenant|corporal|sergeant|captain|qeen|king|admiral|major|colonel|marshal|president|queen|king)+] #ProperNoun',\n    group: 0,\n    tag: 'Honorific',\n    reason: 'seargeant-john',\n  },\n  // ==== Honorics ====\n  {\n    match: '[(private|general|major|rear|prime|field|count|miss)] #Honorific? #Person',\n    group: 0,\n    tag: ['Honorific', 'Person'],\n    reason: 'ambg-honorifics',\n  },\n  // dr john foobar\n  {\n    match: '#Honorific #FirstName [#Singular]',\n    group: 0,\n    tag: 'LastName',\n    notIf: '#Possessive',\n    reason: 'dr-john-foo',\n    safe: true,\n  },\n  //his-excellency\n  {\n    match: '[(his|her) (majesty|honour|worship|excellency|honorable)] #Person',\n    group: 0,\n    tag: 'Honorific',\n    reason: 'his-excellency',\n  },\n  // Lieutenant colonel\n  { match: '#Honorific #Actor', tag: 'Honorific', reason: 'Lieutenant colonel' },\n  // first lady, second admiral\n  { match: '(first|second|third|1st|2nd|3rd) #Actor', tag: 'Honorific', reason: 'first lady' },\n  // Louis IV\n  { match: '#Person #RomanNumeral', tag: 'Person', reason: 'louis-IV' },\n]\n"],"mappings":"AAAA,eAAe;AACb;AACA;AACA;EAAEA,KAAK,EAAE,2CAA2C;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE,WAAW;EAAEC,MAAM,EAAE;AAAuB,CAAC;AAClH;AACA;EACEH,KAAK,EAAE,iFAAiF;EACxFE,GAAG,EAAE,QAAQ;EACbC,MAAM,EAAE,gBAAgB;EACxBC,IAAI,EAAE;AACR,CAAC;AAED;AACA;AACA;EAAEJ,KAAK,EAAE,0CAA0C;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAkB,CAAC,EACzG;EACEH,KAAK,EAAE,2EAA2E;EAClFE,GAAG,EAAE,QAAQ;EACbC,MAAM,EAAE,6BAA6B;EACrCC,IAAI,EAAE;AACR,CAAC,EACD;EAAEJ,KAAK,EAAE,oBAAoB;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE,kBAAkB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACtF;EAAEJ,KAAK,EAAE,oBAAoB;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAmB,CAAC;AAC1E;AACA;EAAEH,KAAK,EAAE,qBAAqB;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAsB,CAAC,EAC9E;EAAEH,KAAK,EAAE,oCAAoC;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAgB,CAAC,EACvF;EAAEH,KAAK,EAAE,4BAA4B;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;EAAEC,MAAM,EAAE;AAAS,CAAC;AAC/F;AACA;EAAEH,KAAK,EAAE,sBAAsB;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAK,CAAC;AACpF;AACA;EAAEJ,KAAK,EAAE,yCAAyC;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAK,CAAC;AACvG;AACA;EAAEJ,KAAK,EAAE,sBAAsB;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAa,CAAC;AACtE;AACA;EAAEH,KAAK,EAAE,uCAAuC;EAAEE,GAAG,EAAE,QAAQ;EAAEG,KAAK,EAAE,QAAQ;EAAEF,MAAM,EAAE;AAAY,CAAC;AAEvG;AACA;EAAEH,KAAK,EAAE,0BAA0B;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE,WAAW;EAAEC,IAAI,EAAE;AAAK,CAAC;AACrF;AACA;EAAEJ,KAAK,EAAE,qBAAqB;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAe,CAAC;AACvE;AACA;EAAEH,KAAK,EAAE,2BAA2B;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAe,CAAC;AAC7E;AACA;EAAEH,KAAK,EAAE,iCAAiC;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAqB,CAAC;AACzF;AACA;EAAEH,KAAK,EAAE,mCAAmC;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAuB,CAAC;AAC7F;AACA;EAAEH,KAAK,EAAE,oCAAoC;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAgB,CAAC;AACvF;AACA;EAAEH,KAAK,EAAE,2BAA2B;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAiB,CAAC;AAE/E;AACA;EAAEH,KAAK,EAAE,sCAAsC;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE,iBAAiB;EAAEC,IAAI,EAAE;AAAK,CAAC;AACvG;AACA;EAAEJ,KAAK,EAAE,qCAAqC;EAAEE,GAAG,EAAE,QAAQ;EAAEG,KAAK,EAAE,QAAQ;EAAEF,MAAM,EAAE;AAAiB,CAAC;AAC1G;AACA;EAAEH,KAAK,EAAE,8BAA8B;EAAEE,GAAG,EAAE,sBAAsB;EAAEC,MAAM,EAAE,iBAAiB;EAAEC,IAAI,EAAE;AAAK,CAAC;AAC7G;AACA;EAAEJ,KAAK,EAAE,uBAAuB;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE,eAAe;EAAEC,IAAI,EAAE;AAAK,CAAC;AAChG;AACA;EACEJ,KAAK,EAAE,mCAAmC;EAC1CC,KAAK,EAAE,CAAC;EACRC,GAAG,EAAE,QAAQ;EACbG,KAAK,EAAE,aAAa;EACpBF,MAAM,EAAE,mBAAmB;EAC3BC,IAAI,EAAE;AACR,CAAC;AACD;AACA;EACEJ,KAAK,EAAE,oCAAoC;EAC3CC,KAAK,EAAE,CAAC;EACRC,GAAG,EAAE,UAAU;EACfG,KAAK,EAAE,aAAa;EACpBF,MAAM,EAAE;AACV,CAAC;AACD;AACA;EAAEH,KAAK,EAAE,yBAAyB;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAsB,CAAC;AAC9F;AACA;EAAEH,KAAK,EAAE,2BAA2B;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAK,CAAC;AACxF;AACA;EAAEJ,KAAK,EAAE,yCAAyC;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAe,CAAC;AAEvG;AACA;AACA;AACA;EACEH,KAAK,EACH,oHAAoH;EACtHC,KAAK,EAAE,CAAC;EACRC,GAAG,EAAE,WAAW;EAChBC,MAAM,EAAE;AACV,CAAC;AACD;AACA;EACEH,KAAK,EAAE,2EAA2E;EAClFC,KAAK,EAAE,CAAC;EACRC,GAAG,EAAE,CAAC,WAAW,EAAE,QAAQ,CAAC;EAC5BC,MAAM,EAAE;AACV,CAAC;AACD;AACA;EACEH,KAAK,EAAE,mCAAmC;EAC1CC,KAAK,EAAE,CAAC;EACRC,GAAG,EAAE,UAAU;EACfG,KAAK,EAAE,aAAa;EACpBF,MAAM,EAAE,aAAa;EACrBC,IAAI,EAAE;AACR,CAAC;AACD;AACA;EACEJ,KAAK,EAAE,mEAAmE;EAC1EC,KAAK,EAAE,CAAC;EACRC,GAAG,EAAE,WAAW;EAChBC,MAAM,EAAE;AACV,CAAC;AACD;AACA;EAAEH,KAAK,EAAE,mBAAmB;EAAEE,GAAG,EAAE,WAAW;EAAEC,MAAM,EAAE;AAAqB,CAAC;AAC9E;AACA;EAAEH,KAAK,EAAE,yCAAyC;EAAEE,GAAG,EAAE,WAAW;EAAEC,MAAM,EAAE;AAAa,CAAC;AAC5F;AACA;EAAEH,KAAK,EAAE,uBAAuB;EAAEE,GAAG,EAAE,QAAQ;EAAEC,MAAM,EAAE;AAAW,CAAC,CACtE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}