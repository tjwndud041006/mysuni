{"ast":null,"code":"let net = null;\n\n// runs all match/tag patterns in model.two.matches\nconst postTagger = function (view) {\n  const {\n    world\n  } = view;\n  const {\n    model,\n    methods\n  } = world;\n  net = net || methods.one.buildNet(model.two.matches, world);\n  // perform these matches on a comma-seperated document\n  let document = methods.two.quickSplit(view.document);\n  let ptrs = document.map(terms => {\n    let t = terms[0];\n    return [t.index[0], t.index[1], t.index[1] + terms.length];\n  });\n  let m = view.update(ptrs);\n  m.cache();\n  m.sweep(net);\n  view.uncache();\n  view.unfreeze();\n  return view;\n};\n\n// helper function for compute('tagger')\nconst tagger = view => view.compute(['freeze', 'lexicon', 'preTagger', 'postTagger', 'unfreeze']);\nexport default {\n  postTagger,\n  tagger\n};","map":{"version":3,"names":["net","postTagger","view","world","model","methods","one","buildNet","two","matches","document","quickSplit","ptrs","map","terms","t","index","length","m","update","cache","sweep","uncache","unfreeze","tagger","compute"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/postTagger/compute/index.js"],"sourcesContent":["let net = null\n\n// runs all match/tag patterns in model.two.matches\nconst postTagger = function (view) {\n  const { world } = view\n  const { model, methods } = world\n  net = net || methods.one.buildNet(model.two.matches, world)\n  // perform these matches on a comma-seperated document\n  let document = methods.two.quickSplit(view.document)\n  let ptrs = document.map(terms => {\n    let t = terms[0]\n    return [t.index[0], t.index[1], t.index[1] + terms.length]\n  })\n  let m = view.update(ptrs)\n  m.cache()\n  m.sweep(net)\n  view.uncache()\n  view.unfreeze()\n  return view\n}\n\n// helper function for compute('tagger')\nconst tagger = view => view.compute(['freeze', 'lexicon', 'preTagger', 'postTagger', 'unfreeze'])\n\nexport default { postTagger, tagger }\n"],"mappings":"AAAA,IAAIA,GAAG,GAAG,IAAI;;AAEd;AACA,MAAMC,UAAU,GAAG,SAAAA,CAAUC,IAAI,EAAE;EACjC,MAAM;IAAEC;EAAM,CAAC,GAAGD,IAAI;EACtB,MAAM;IAAEE,KAAK;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EAChCH,GAAG,GAAGA,GAAG,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACH,KAAK,CAACI,GAAG,CAACC,OAAO,EAAEN,KAAK,CAAC;EAC3D;EACA,IAAIO,QAAQ,GAAGL,OAAO,CAACG,GAAG,CAACG,UAAU,CAACT,IAAI,CAACQ,QAAQ,CAAC;EACpD,IAAIE,IAAI,GAAGF,QAAQ,CAACG,GAAG,CAACC,KAAK,IAAI;IAC/B,IAAIC,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC;IAChB,OAAO,CAACC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,EAAED,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,EAAED,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC5D,CAAC,CAAC;EACF,IAAIC,CAAC,GAAGhB,IAAI,CAACiB,MAAM,CAACP,IAAI,CAAC;EACzBM,CAAC,CAACE,KAAK,CAAC,CAAC;EACTF,CAAC,CAACG,KAAK,CAACrB,GAAG,CAAC;EACZE,IAAI,CAACoB,OAAO,CAAC,CAAC;EACdpB,IAAI,CAACqB,QAAQ,CAAC,CAAC;EACf,OAAOrB,IAAI;AACb,CAAC;;AAED;AACA,MAAMsB,MAAM,GAAGtB,IAAI,IAAIA,IAAI,CAACuB,OAAO,CAAC,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;AAEjG,eAAe;EAAExB,UAAU;EAAEuB;AAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}