{"ast":null,"code":"const findFractions = function (doc, n) {\n  // five eighths\n  let m = doc.match('#Fraction+');\n  // remove 'two and five eights'\n  m = m.filter(r => {\n    return !r.lookBehind('#Value and$').found;\n  });\n  // thirty seconds\n  m = m.notIf('#Value seconds');\n  if (typeof n === 'number') {\n    m = m.eq(n);\n  }\n  return m;\n};\nexport default findFractions;","map":{"version":3,"names":["findFractions","doc","n","m","match","filter","r","lookBehind","found","notIf","eq"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/3-three/numbers/fractions/find.js"],"sourcesContent":["const findFractions = function (doc, n) {\n  // five eighths\n  let m = doc.match('#Fraction+')\n  // remove 'two and five eights'\n  m = m.filter(r => {\n    return !r.lookBehind('#Value and$').found\n  })\n  // thirty seconds\n  m = m.notIf('#Value seconds')\n\n  if (typeof n === 'number') {\n    m = m.eq(n)\n  }\n  return m\n}\nexport default findFractions\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,SAAAA,CAAUC,GAAG,EAAEC,CAAC,EAAE;EACtC;EACA,IAAIC,CAAC,GAAGF,GAAG,CAACG,KAAK,CAAC,YAAY,CAAC;EAC/B;EACAD,CAAC,GAAGA,CAAC,CAACE,MAAM,CAACC,CAAC,IAAI;IAChB,OAAO,CAACA,CAAC,CAACC,UAAU,CAAC,aAAa,CAAC,CAACC,KAAK;EAC3C,CAAC,CAAC;EACF;EACAL,CAAC,GAAGA,CAAC,CAACM,KAAK,CAAC,gBAAgB,CAAC;EAE7B,IAAI,OAAOP,CAAC,KAAK,QAAQ,EAAE;IACzBC,CAAC,GAAGA,CAAC,CAACO,EAAE,CAACR,CAAC,CAAC;EACb;EACA,OAAOC,CAAC;AACV,CAAC;AACD,eAAeH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}