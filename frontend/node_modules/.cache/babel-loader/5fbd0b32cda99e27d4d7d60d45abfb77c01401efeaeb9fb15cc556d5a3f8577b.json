{"ast":null,"code":"import fastTag from '../_fastTag.js';\nimport looksPlural from '../../../methods/looksPlural.js';\nimport getTense from '../../../methods/transform/verbs/getTense/index.js';\n// tags that are neither plural or singular\nconst uncountable = ['Acronym', 'Abbreviation', 'ProperNoun', 'Uncountable', 'Possessive', 'Pronoun', 'Activity', 'Honorific', 'Month'];\n// try to guess if each noun is a plural/singular\nconst setPluralSingular = function (term) {\n  if (!term.tags.has('Noun') || term.tags.has('Plural') || term.tags.has('Singular')) {\n    return;\n  }\n  if (uncountable.find(tag => term.tags.has(tag))) {\n    return;\n  }\n  if (looksPlural(term.normal)) {\n    fastTag(term, 'Plural', '3-plural-guess');\n  } else {\n    fastTag(term, 'Singular', '3-singular-guess');\n  }\n};\n\n// try to guess the tense of a naked verb\nconst setTense = function (term) {\n  let tags = term.tags;\n  if (tags.has('Verb') && tags.size === 1) {\n    let guess = getTense(term.normal);\n    if (guess) {\n      fastTag(term, guess, '3-verb-tense-guess');\n    }\n  }\n};\n\n//add deduced parent tags to our terms\nconst fillTags = function (terms, i, model) {\n  let term = terms[i];\n  //there is probably just one tag, but we'll allow more\n  let tags = Array.from(term.tags);\n  for (let k = 0; k < tags.length; k += 1) {\n    if (model.one.tagSet[tags[k]]) {\n      let toAdd = model.one.tagSet[tags[k]].parents;\n      fastTag(term, toAdd, ` -inferred by #${tags[k]}`);\n    }\n  }\n  // turn 'Noun' into Plural/Singular\n  setPluralSingular(term);\n  // turn 'Verb' into Present/PastTense\n  setTense(term, model);\n};\nexport default fillTags;","map":{"version":3,"names":["fastTag","looksPlural","getTense","uncountable","setPluralSingular","term","tags","has","find","tag","normal","setTense","size","guess","fillTags","terms","i","model","Array","from","k","length","one","tagSet","toAdd","parents"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/compute/tagger/3rd-pass/_fillTags.js"],"sourcesContent":["import fastTag from '../_fastTag.js'\nimport looksPlural from '../../../methods/looksPlural.js'\nimport getTense from '../../../methods/transform/verbs/getTense/index.js'\n// tags that are neither plural or singular\nconst uncountable = [\n  'Acronym',\n  'Abbreviation',\n  'ProperNoun',\n  'Uncountable',\n  'Possessive',\n  'Pronoun',\n  'Activity',\n  'Honorific',\n  'Month',\n]\n// try to guess if each noun is a plural/singular\nconst setPluralSingular = function (term) {\n  if (!term.tags.has('Noun') || term.tags.has('Plural') || term.tags.has('Singular')) {\n    return\n  }\n  if (uncountable.find(tag => term.tags.has(tag))) {\n    return\n  }\n  if (looksPlural(term.normal)) {\n    fastTag(term, 'Plural', '3-plural-guess')\n  } else {\n    fastTag(term, 'Singular', '3-singular-guess')\n  }\n}\n\n// try to guess the tense of a naked verb\nconst setTense = function (term) {\n  let tags = term.tags\n  if (tags.has('Verb') && tags.size === 1) {\n    let guess = getTense(term.normal)\n    if (guess) {\n      fastTag(term, guess, '3-verb-tense-guess')\n    }\n  }\n}\n\n//add deduced parent tags to our terms\nconst fillTags = function (terms, i, model) {\n  let term = terms[i]\n  //there is probably just one tag, but we'll allow more\n  let tags = Array.from(term.tags)\n  for (let k = 0; k < tags.length; k += 1) {\n    if (model.one.tagSet[tags[k]]) {\n      let toAdd = model.one.tagSet[tags[k]].parents\n      fastTag(term, toAdd, ` -inferred by #${tags[k]}`)\n    }\n  }\n  // turn 'Noun' into Plural/Singular\n  setPluralSingular(term)\n  // turn 'Verb' into Present/PastTense\n  setTense(term, model)\n}\nexport default fillTags\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,gBAAgB;AACpC,OAAOC,WAAW,MAAM,iCAAiC;AACzD,OAAOC,QAAQ,MAAM,oDAAoD;AACzE;AACA,MAAMC,WAAW,GAAG,CAClB,SAAS,EACT,cAAc,EACd,YAAY,EACZ,aAAa,EACb,YAAY,EACZ,SAAS,EACT,UAAU,EACV,WAAW,EACX,OAAO,CACR;AACD;AACA,MAAMC,iBAAiB,GAAG,SAAAA,CAAUC,IAAI,EAAE;EACxC,IAAI,CAACA,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,IAAIF,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC,IAAIF,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,EAAE;IAClF;EACF;EACA,IAAIJ,WAAW,CAACK,IAAI,CAACC,GAAG,IAAIJ,IAAI,CAACC,IAAI,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC,EAAE;IAC/C;EACF;EACA,IAAIR,WAAW,CAACI,IAAI,CAACK,MAAM,CAAC,EAAE;IAC5BV,OAAO,CAACK,IAAI,EAAE,QAAQ,EAAE,gBAAgB,CAAC;EAC3C,CAAC,MAAM;IACLL,OAAO,CAACK,IAAI,EAAE,UAAU,EAAE,kBAAkB,CAAC;EAC/C;AACF,CAAC;;AAED;AACA,MAAMM,QAAQ,GAAG,SAAAA,CAAUN,IAAI,EAAE;EAC/B,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;EACpB,IAAIA,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,IAAID,IAAI,CAACM,IAAI,KAAK,CAAC,EAAE;IACvC,IAAIC,KAAK,GAAGX,QAAQ,CAACG,IAAI,CAACK,MAAM,CAAC;IACjC,IAAIG,KAAK,EAAE;MACTb,OAAO,CAACK,IAAI,EAAEQ,KAAK,EAAE,oBAAoB,CAAC;IAC5C;EACF;AACF,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAG,SAAAA,CAAUC,KAAK,EAAEC,CAAC,EAAEC,KAAK,EAAE;EAC1C,IAAIZ,IAAI,GAAGU,KAAK,CAACC,CAAC,CAAC;EACnB;EACA,IAAIV,IAAI,GAAGY,KAAK,CAACC,IAAI,CAACd,IAAI,CAACC,IAAI,CAAC;EAChC,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,IAAI,CAACe,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACvC,IAAIH,KAAK,CAACK,GAAG,CAACC,MAAM,CAACjB,IAAI,CAACc,CAAC,CAAC,CAAC,EAAE;MAC7B,IAAII,KAAK,GAAGP,KAAK,CAACK,GAAG,CAACC,MAAM,CAACjB,IAAI,CAACc,CAAC,CAAC,CAAC,CAACK,OAAO;MAC7CzB,OAAO,CAACK,IAAI,EAAEmB,KAAK,EAAE,kBAAkBlB,IAAI,CAACc,CAAC,CAAC,EAAE,CAAC;IACnD;EACF;EACA;EACAhB,iBAAiB,CAACC,IAAI,CAAC;EACvB;EACAM,QAAQ,CAACN,IAAI,EAAEY,KAAK,CAAC;AACvB,CAAC;AACD,eAAeH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}