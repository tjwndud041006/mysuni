{"ast":null,"code":"import { fixPointers, isView, isNet, parseRegs } from './_lib.js';\nconst match = function (regs, group, opts) {\n  const one = this.methods.one;\n  // support param as view object\n  if (isView(regs)) {\n    return this.intersection(regs);\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    return this.sweep(regs, {\n      tagger: false\n    }).view.settle();\n  }\n  regs = parseRegs(regs, opts, this.world);\n  let todo = {\n    regs,\n    group\n  };\n  let res = one.match(this.docs, todo, this._cache);\n  let {\n    ptrs,\n    byGroup\n  } = fixPointers(res, this.fullPointer);\n  let view = this.toView(ptrs);\n  view._groups = byGroup;\n  return view;\n};\nconst matchOne = function (regs, group, opts) {\n  const one = this.methods.one;\n  // support at view as a param\n  if (isView(regs)) {\n    return this.intersection(regs).eq(0);\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    return this.sweep(regs, {\n      tagger: false,\n      matchOne: true\n    }).view;\n  }\n  regs = parseRegs(regs, opts, this.world);\n  let todo = {\n    regs,\n    group,\n    justOne: true\n  };\n  let res = one.match(this.docs, todo, this._cache);\n  let {\n    ptrs,\n    byGroup\n  } = fixPointers(res, this.fullPointer);\n  let view = this.toView(ptrs);\n  view._groups = byGroup;\n  return view;\n};\nconst has = function (regs, group, opts) {\n  const one = this.methods.one;\n  // support view as input\n  if (isView(regs)) {\n    let ptrs = this.intersection(regs).fullPointer;\n    return ptrs.length > 0;\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    return this.sweep(regs, {\n      tagger: false\n    }).view.found;\n  }\n  regs = parseRegs(regs, opts, this.world);\n  let todo = {\n    regs,\n    group,\n    justOne: true\n  };\n  let ptrs = one.match(this.docs, todo, this._cache).ptrs;\n  return ptrs.length > 0;\n};\n\n// 'if'\nconst ifFn = function (regs, group, opts) {\n  const one = this.methods.one;\n  // support view as input\n  if (isView(regs)) {\n    return this.filter(m => m.intersection(regs).found);\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    let m = this.sweep(regs, {\n      tagger: false\n    }).view.settle();\n    return this.if(m); //recurse with result\n  }\n  regs = parseRegs(regs, opts, this.world);\n  let todo = {\n    regs,\n    group,\n    justOne: true\n  };\n  let ptrs = this.fullPointer;\n  let cache = this._cache || [];\n  ptrs = ptrs.filter((ptr, i) => {\n    let m = this.update([ptr]);\n    let res = one.match(m.docs, todo, cache[i]).ptrs;\n    return res.length > 0;\n  });\n  let view = this.update(ptrs);\n  // try and reconstruct the cache\n  if (this._cache) {\n    view._cache = ptrs.map(ptr => cache[ptr[0]]);\n  }\n  return view;\n};\nconst ifNo = function (regs, group, opts) {\n  const {\n    methods\n  } = this;\n  const one = methods.one;\n  // support a view object as input\n  if (isView(regs)) {\n    return this.filter(m => !m.intersection(regs).found);\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    let m = this.sweep(regs, {\n      tagger: false\n    }).view.settle();\n    return this.ifNo(m);\n  }\n  // otherwise parse the match string\n  regs = parseRegs(regs, opts, this.world);\n  let cache = this._cache || [];\n  let view = this.filter((m, i) => {\n    let todo = {\n      regs,\n      group,\n      justOne: true\n    };\n    let ptrs = one.match(m.docs, todo, cache[i]).ptrs;\n    return ptrs.length === 0;\n  });\n  // try to reconstruct the cache\n  if (this._cache) {\n    view._cache = view.ptrs.map(ptr => cache[ptr[0]]);\n  }\n  return view;\n};\nexport default {\n  matchOne,\n  match,\n  has,\n  if: ifFn,\n  ifNo\n};","map":{"version":3,"names":["fixPointers","isView","isNet","parseRegs","match","regs","group","opts","one","methods","intersection","sweep","tagger","view","settle","world","todo","res","docs","_cache","ptrs","byGroup","fullPointer","toView","_groups","matchOne","eq","justOne","has","length","found","ifFn","filter","m","if","cache","ptr","i","update","map","ifNo"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/match/api/match.js"],"sourcesContent":["import { fixPointers, isView, isNet, parseRegs } from './_lib.js'\n\nconst match = function (regs, group, opts) {\n  const one = this.methods.one\n  // support param as view object\n  if (isView(regs)) {\n    return this.intersection(regs)\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    return this.sweep(regs, { tagger: false }).view.settle()\n  }\n  regs = parseRegs(regs, opts, this.world)\n  let todo = { regs, group }\n  let res = one.match(this.docs, todo, this._cache)\n  let { ptrs, byGroup } = fixPointers(res, this.fullPointer)\n  let view = this.toView(ptrs)\n  view._groups = byGroup\n  return view\n}\n\nconst matchOne = function (regs, group, opts) {\n  const one = this.methods.one\n  // support at view as a param\n  if (isView(regs)) {\n    return this.intersection(regs).eq(0)\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    return this.sweep(regs, { tagger: false, matchOne: true }).view\n  }\n  regs = parseRegs(regs, opts, this.world)\n  let todo = { regs, group, justOne: true }\n  let res = one.match(this.docs, todo, this._cache)\n  let { ptrs, byGroup } = fixPointers(res, this.fullPointer)\n  let view = this.toView(ptrs)\n  view._groups = byGroup\n  return view\n}\n\nconst has = function (regs, group, opts) {\n  const one = this.methods.one\n  // support view as input\n  if (isView(regs)) {\n    let ptrs = this.intersection(regs).fullPointer\n    return ptrs.length > 0\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    return this.sweep(regs, { tagger: false }).view.found\n  }\n  regs = parseRegs(regs, opts, this.world)\n  let todo = { regs, group, justOne: true }\n  let ptrs = one.match(this.docs, todo, this._cache).ptrs\n  return ptrs.length > 0\n}\n\n// 'if'\nconst ifFn = function (regs, group, opts) {\n  const one = this.methods.one\n  // support view as input\n  if (isView(regs)) {\n    return this.filter(m => m.intersection(regs).found)\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    let m = this.sweep(regs, { tagger: false }).view.settle()\n    return this.if(m) //recurse with result\n  }\n  regs = parseRegs(regs, opts, this.world)\n  let todo = { regs, group, justOne: true }\n  let ptrs = this.fullPointer\n  let cache = this._cache || []\n  ptrs = ptrs.filter((ptr, i) => {\n    let m = this.update([ptr])\n    let res = one.match(m.docs, todo, cache[i]).ptrs\n    return res.length > 0\n  })\n  let view = this.update(ptrs)\n  // try and reconstruct the cache\n  if (this._cache) {\n    view._cache = ptrs.map(ptr => cache[ptr[0]])\n  }\n  return view\n}\n\nconst ifNo = function (regs, group, opts) {\n  const { methods } = this\n  const one = methods.one\n  // support a view object as input\n  if (isView(regs)) {\n    return this.filter(m => !m.intersection(regs).found)\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    let m = this.sweep(regs, { tagger: false }).view.settle()\n    return this.ifNo(m)\n  }\n  // otherwise parse the match string\n  regs = parseRegs(regs, opts, this.world)\n  let cache = this._cache || []\n  let view = this.filter((m, i) => {\n    let todo = { regs, group, justOne: true }\n    let ptrs = one.match(m.docs, todo, cache[i]).ptrs\n    return ptrs.length === 0\n  })\n  // try to reconstruct the cache\n  if (this._cache) {\n    view._cache = view.ptrs.map(ptr => cache[ptr[0]])\n  }\n  return view\n}\n\nexport default { matchOne, match, has, if: ifFn, ifNo }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}