{"ast":null,"code":"const byWord = {\n  this: 'Noun',\n  then: 'Pivot'\n};\n\n// simply chunk Nouns as <Noun>\nconst easyMode = function (document) {\n  for (let n = 0; n < document.length; n += 1) {\n    for (let t = 0; t < document[n].length; t += 1) {\n      let term = document[n][t];\n      if (byWord.hasOwnProperty(term.normal) === true) {\n        term.chunk = byWord[term.normal];\n        continue;\n      }\n      if (term.tags.has('Verb')) {\n        term.chunk = 'Verb';\n        continue;\n      }\n      if (term.tags.has('Noun') || term.tags.has('Determiner')) {\n        term.chunk = 'Noun';\n        continue;\n      }\n      // 100 cats\n      if (term.tags.has('Value')) {\n        term.chunk = 'Noun';\n        continue;\n      }\n      //\n      if (term.tags.has('QuestionWord')) {\n        term.chunk = 'Pivot';\n        continue;\n      }\n    }\n  }\n};\nexport default easyMode;","map":{"version":3,"names":["byWord","this","then","easyMode","document","n","length","t","term","hasOwnProperty","normal","chunk","tags","has"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/3-three/chunker/compute/01-easy.js"],"sourcesContent":["const byWord = {\n  this: 'Noun',\n  then: 'Pivot'\n}\n\n// simply chunk Nouns as <Noun>\nconst easyMode = function (document) {\n  for (let n = 0; n < document.length; n += 1) {\n    for (let t = 0; t < document[n].length; t += 1) {\n      let term = document[n][t]\n\n      if (byWord.hasOwnProperty(term.normal) === true) {\n        term.chunk = byWord[term.normal]\n        continue\n      }\n      if (term.tags.has('Verb')) {\n        term.chunk = 'Verb'\n        continue\n      }\n      if (term.tags.has('Noun') || term.tags.has('Determiner')) {\n        term.chunk = 'Noun'\n        continue\n      }\n      // 100 cats\n      if (term.tags.has('Value')) {\n        term.chunk = 'Noun'\n        continue\n      }\n      //\n      if (term.tags.has('QuestionWord')) {\n        term.chunk = 'Pivot'\n        continue\n      }\n\n    }\n  }\n}\nexport default easyMode\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG;EACbC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE;AACR,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAG,SAAAA,CAAUC,QAAQ,EAAE;EACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IAC3C,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACC,CAAC,CAAC,CAACC,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAE;MAC9C,IAAIC,IAAI,GAAGJ,QAAQ,CAACC,CAAC,CAAC,CAACE,CAAC,CAAC;MAEzB,IAAIP,MAAM,CAACS,cAAc,CAACD,IAAI,CAACE,MAAM,CAAC,KAAK,IAAI,EAAE;QAC/CF,IAAI,CAACG,KAAK,GAAGX,MAAM,CAACQ,IAAI,CAACE,MAAM,CAAC;QAChC;MACF;MACA,IAAIF,IAAI,CAACI,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,EAAE;QACzBL,IAAI,CAACG,KAAK,GAAG,MAAM;QACnB;MACF;MACA,IAAIH,IAAI,CAACI,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,IAAIL,IAAI,CAACI,IAAI,CAACC,GAAG,CAAC,YAAY,CAAC,EAAE;QACxDL,IAAI,CAACG,KAAK,GAAG,MAAM;QACnB;MACF;MACA;MACA,IAAIH,IAAI,CAACI,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE;QAC1BL,IAAI,CAACG,KAAK,GAAG,MAAM;QACnB;MACF;MACA;MACA,IAAIH,IAAI,CAACI,IAAI,CAACC,GAAG,CAAC,cAAc,CAAC,EAAE;QACjCL,IAAI,CAACG,KAAK,GAAG,OAAO;QACpB;MACF;IAEF;EACF;AACF,CAAC;AACD,eAAeR,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}