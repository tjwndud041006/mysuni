{"ast":null,"code":"export default [\n// simple mappings\n{\n  word: '@',\n  out: ['at']\n}, {\n  word: 'arent',\n  out: ['are', 'not']\n}, {\n  word: 'alot',\n  out: ['a', 'lot']\n}, {\n  word: 'brb',\n  out: ['be', 'right', 'back']\n}, {\n  word: 'cannot',\n  out: ['can', 'not']\n}, {\n  word: 'dun',\n  out: ['do', 'not']\n}, {\n  word: \"can't\",\n  out: ['can', 'not']\n}, {\n  word: \"shan't\",\n  out: ['should', 'not']\n}, {\n  word: \"won't\",\n  out: ['will', 'not']\n}, {\n  word: \"that's\",\n  out: ['that', 'is']\n}, {\n  word: \"what's\",\n  out: ['what', 'is']\n}, {\n  word: \"let's\",\n  out: ['let', 'us']\n},\n// { word: \"there's\", out: ['there', 'is'] },\n{\n  word: 'dunno',\n  out: ['do', 'not', 'know']\n}, {\n  word: 'gonna',\n  out: ['going', 'to']\n}, {\n  word: 'gotta',\n  out: ['have', 'got', 'to']\n},\n//hmm\n{\n  word: 'gimme',\n  out: ['give', 'me']\n}, {\n  word: 'outta',\n  out: ['out', 'of']\n}, {\n  word: 'tryna',\n  out: ['trying', 'to']\n}, {\n  word: 'gtg',\n  out: ['got', 'to', 'go']\n}, {\n  word: 'im',\n  out: ['i', 'am']\n}, {\n  word: 'imma',\n  out: ['I', 'will']\n}, {\n  word: 'imo',\n  out: ['in', 'my', 'opinion']\n}, {\n  word: 'irl',\n  out: ['in', 'real', 'life']\n}, {\n  word: 'ive',\n  out: ['i', 'have']\n}, {\n  word: 'rn',\n  out: ['right', 'now']\n}, {\n  word: 'tbh',\n  out: ['to', 'be', 'honest']\n}, {\n  word: 'wanna',\n  out: ['want', 'to']\n}, {\n  word: `c'mere`,\n  out: ['come', 'here']\n}, {\n  word: `c'mon`,\n  out: ['come', 'on']\n},\n// shoulda, coulda\n{\n  word: 'shoulda',\n  out: ['should', 'have']\n}, {\n  word: 'coulda',\n  out: ['coulda', 'have']\n}, {\n  word: 'woulda',\n  out: ['woulda', 'have']\n}, {\n  word: 'musta',\n  out: ['must', 'have']\n}, {\n  word: \"tis\",\n  out: ['it', 'is']\n}, {\n  word: \"twas\",\n  out: ['it', 'was']\n}, {\n  word: `y'know`,\n  out: ['you', 'know']\n}, {\n  word: \"ne'er\",\n  out: ['never']\n}, {\n  word: \"o'er\",\n  out: ['over']\n},\n// contraction-part mappings\n{\n  after: 'll',\n  out: ['will']\n}, {\n  after: 've',\n  out: ['have']\n}, {\n  after: 're',\n  out: ['are']\n}, {\n  after: 'm',\n  out: ['am']\n},\n// french contractions\n{\n  before: 'c',\n  out: ['ce']\n}, {\n  before: 'm',\n  out: ['me']\n}, {\n  before: 'n',\n  out: ['ne']\n}, {\n  before: 'qu',\n  out: ['que']\n}, {\n  before: 's',\n  out: ['se']\n}, {\n  before: 't',\n  out: ['tu']\n},\n// t'aime\n\n// missing apostrophes\n{\n  word: 'shouldnt',\n  out: ['should', 'not']\n}, {\n  word: 'couldnt',\n  out: ['could', 'not']\n}, {\n  word: 'wouldnt',\n  out: ['would', 'not']\n}, {\n  word: 'hasnt',\n  out: ['has', 'not']\n}, {\n  word: 'wasnt',\n  out: ['was', 'not']\n}, {\n  word: 'isnt',\n  out: ['is', 'not']\n}, {\n  word: 'cant',\n  out: ['can', 'not']\n}, {\n  word: 'dont',\n  out: ['do', 'not']\n}, {\n  word: 'wont',\n  out: ['will', 'not']\n},\n// apostrophe d\n{\n  word: 'howd',\n  out: ['how', 'did']\n}, {\n  word: 'whatd',\n  out: ['what', 'did']\n}, {\n  word: 'whend',\n  out: ['when', 'did']\n}, {\n  word: 'whered',\n  out: ['where', 'did']\n}];","map":{"version":3,"names":["word","out","after","before"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/contraction-one/model/contractions.js"],"sourcesContent":["export default [\n  // simple mappings\n  { word: '@', out: ['at'] },\n  { word: 'arent', out: ['are', 'not'] },\n  { word: 'alot', out: ['a', 'lot'] },\n  { word: 'brb', out: ['be', 'right', 'back'] },\n  { word: 'cannot', out: ['can', 'not'] },\n  { word: 'dun', out: ['do', 'not'] },\n  { word: \"can't\", out: ['can', 'not'] },\n  { word: \"shan't\", out: ['should', 'not'] },\n  { word: \"won't\", out: ['will', 'not'] },\n  { word: \"that's\", out: ['that', 'is'] },\n  { word: \"what's\", out: ['what', 'is'] },\n  { word: \"let's\", out: ['let', 'us'] },\n  // { word: \"there's\", out: ['there', 'is'] },\n  { word: 'dunno', out: ['do', 'not', 'know'] },\n  { word: 'gonna', out: ['going', 'to'] },\n  { word: 'gotta', out: ['have', 'got', 'to'] }, //hmm\n  { word: 'gimme', out: ['give', 'me'] },\n  { word: 'outta', out: ['out', 'of'] },\n  { word: 'tryna', out: ['trying', 'to'] },\n  { word: 'gtg', out: ['got', 'to', 'go'] },\n  { word: 'im', out: ['i', 'am'] },\n  { word: 'imma', out: ['I', 'will'] },\n  { word: 'imo', out: ['in', 'my', 'opinion'] },\n  { word: 'irl', out: ['in', 'real', 'life'] },\n  { word: 'ive', out: ['i', 'have'] },\n  { word: 'rn', out: ['right', 'now'] },\n  { word: 'tbh', out: ['to', 'be', 'honest'] },\n  { word: 'wanna', out: ['want', 'to'] },\n  { word: `c'mere`, out: ['come', 'here'] },\n  { word: `c'mon`, out: ['come', 'on'] },\n  // shoulda, coulda\n  { word: 'shoulda', out: ['should', 'have'] },\n  { word: 'coulda', out: ['coulda', 'have'] },\n  { word: 'woulda', out: ['woulda', 'have'] },\n  { word: 'musta', out: ['must', 'have'] },\n\n  { word: \"tis\", out: ['it', 'is'] },\n  { word: \"twas\", out: ['it', 'was'] },\n  { word: `y'know`, out: ['you', 'know'] },\n  { word: \"ne'er\", out: ['never'] },\n  { word: \"o'er\", out: ['over'] },\n  // contraction-part mappings\n  { after: 'll', out: ['will'] },\n  { after: 've', out: ['have'] },\n  { after: 're', out: ['are'] },\n  { after: 'm', out: ['am'] },\n  // french contractions\n  { before: 'c', out: ['ce'] },\n  { before: 'm', out: ['me'] },\n  { before: 'n', out: ['ne'] },\n  { before: 'qu', out: ['que'] },\n  { before: 's', out: ['se'] },\n  { before: 't', out: ['tu'] }, // t'aime\n\n  // missing apostrophes\n  { word: 'shouldnt', out: ['should', 'not'] },\n  { word: 'couldnt', out: ['could', 'not'] },\n  { word: 'wouldnt', out: ['would', 'not'] },\n  { word: 'hasnt', out: ['has', 'not'] },\n  { word: 'wasnt', out: ['was', 'not'] },\n  { word: 'isnt', out: ['is', 'not'] },\n  { word: 'cant', out: ['can', 'not'] },\n  { word: 'dont', out: ['do', 'not'] },\n  { word: 'wont', out: ['will', 'not'] },\n  // apostrophe d\n  { word: 'howd', out: ['how', 'did'] },\n  { word: 'whatd', out: ['what', 'did'] },\n  { word: 'whend', out: ['when', 'did'] },\n  { word: 'whered', out: ['where', 'did'] },\n]\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}