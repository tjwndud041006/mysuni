{"ast":null,"code":"const Histogram = function () {\n  this.counts = {};\n};\nconst methods = {\n  init: function (sym) {\n    if (this.counts[sym] === undefined) {\n      this.counts[sym] = 0;\n    }\n  },\n  add: function (sym, n) {\n    if (n === undefined) {\n      n = 1;\n    }\n    this.init(sym);\n    this.counts[sym] += n;\n  },\n  countOf: function (sym) {\n    this.init(sym);\n    return this.counts[sym];\n  },\n  highest: function (top) {\n    let sorted = [];\n    const keys = Object.keys(this.counts);\n    for (let i = 0; i < keys.length; i++) {\n      const sym = keys[i];\n      sorted.push([sym, this.counts[sym]]);\n    }\n    sorted.sort(function (a, b) {\n      return b[1] - a[1];\n    });\n    if (top) {\n      sorted = sorted.slice(0, top);\n    }\n    return sorted;\n  }\n};\nObject.keys(methods).forEach(function (k) {\n  Histogram.prototype[k] = methods[k];\n});\nexport default Histogram;","map":{"version":3,"names":["Histogram","counts","methods","init","sym","undefined","add","n","countOf","highest","top","sorted","keys","Object","i","length","push","sort","a","b","slice","forEach","k","prototype"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/efrt/src/pack/histogram.js"],"sourcesContent":["const Histogram = function () {\n  this.counts = {}\n}\n\nconst methods = {\n  init: function (sym) {\n    if (this.counts[sym] === undefined) {\n      this.counts[sym] = 0\n    }\n  },\n  add: function (sym, n) {\n    if (n === undefined) {\n      n = 1\n    }\n    this.init(sym)\n    this.counts[sym] += n\n  },\n  countOf: function (sym) {\n    this.init(sym)\n    return this.counts[sym]\n  },\n  highest: function (top) {\n    let sorted = []\n    const keys = Object.keys(this.counts)\n    for (let i = 0; i < keys.length; i++) {\n      const sym = keys[i]\n      sorted.push([sym, this.counts[sym]])\n    }\n    sorted.sort(function (a, b) {\n      return b[1] - a[1]\n    })\n    if (top) {\n      sorted = sorted.slice(0, top)\n    }\n    return sorted\n  }\n}\n\nObject.keys(methods).forEach(function (k) {\n  Histogram.prototype[k] = methods[k]\n})\n\nexport default Histogram\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,SAAAA,CAAA,EAAY;EAC5B,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;AAClB,CAAC;AAED,MAAMC,OAAO,GAAG;EACdC,IAAI,EAAE,SAAAA,CAAUC,GAAG,EAAE;IACnB,IAAI,IAAI,CAACH,MAAM,CAACG,GAAG,CAAC,KAAKC,SAAS,EAAE;MAClC,IAAI,CAACJ,MAAM,CAACG,GAAG,CAAC,GAAG,CAAC;IACtB;EACF,CAAC;EACDE,GAAG,EAAE,SAAAA,CAAUF,GAAG,EAAEG,CAAC,EAAE;IACrB,IAAIA,CAAC,KAAKF,SAAS,EAAE;MACnBE,CAAC,GAAG,CAAC;IACP;IACA,IAAI,CAACJ,IAAI,CAACC,GAAG,CAAC;IACd,IAAI,CAACH,MAAM,CAACG,GAAG,CAAC,IAAIG,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE,SAAAA,CAAUJ,GAAG,EAAE;IACtB,IAAI,CAACD,IAAI,CAACC,GAAG,CAAC;IACd,OAAO,IAAI,CAACH,MAAM,CAACG,GAAG,CAAC;EACzB,CAAC;EACDK,OAAO,EAAE,SAAAA,CAAUC,GAAG,EAAE;IACtB,IAAIC,MAAM,GAAG,EAAE;IACf,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAAC,IAAI,CAACX,MAAM,CAAC;IACrC,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACpC,MAAMV,GAAG,GAAGQ,IAAI,CAACE,CAAC,CAAC;MACnBH,MAAM,CAACK,IAAI,CAAC,CAACZ,GAAG,EAAE,IAAI,CAACH,MAAM,CAACG,GAAG,CAAC,CAAC,CAAC;IACtC;IACAO,MAAM,CAACM,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;MAC1B,OAAOA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;IACF,IAAIR,GAAG,EAAE;MACPC,MAAM,GAAGA,MAAM,CAACS,KAAK,CAAC,CAAC,EAAEV,GAAG,CAAC;IAC/B;IACA,OAAOC,MAAM;EACf;AACF,CAAC;AAEDE,MAAM,CAACD,IAAI,CAACV,OAAO,CAAC,CAACmB,OAAO,CAAC,UAAUC,CAAC,EAAE;EACxCtB,SAAS,CAACuB,SAAS,CAACD,CAAC,CAAC,GAAGpB,OAAO,CAACoB,CAAC,CAAC;AACrC,CAAC,CAAC;AAEF,eAAetB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}