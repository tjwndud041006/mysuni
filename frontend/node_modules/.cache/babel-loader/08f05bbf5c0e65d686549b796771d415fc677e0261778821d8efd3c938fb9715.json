{"ast":null,"code":"const prefix = /^(under|over|mis|re|un|dis|semi)-?/;\nconst tagSwitch = function (terms, i, model) {\n  const switches = model.two.switches;\n  let term = terms[i];\n  if (switches.hasOwnProperty(term.normal)) {\n    term.switch = switches[term.normal];\n    return;\n  }\n  // support 'restrike' -> 'strike'\n  if (prefix.test(term.normal)) {\n    let stem = term.normal.replace(prefix, '');\n    if (stem.length > 3 && switches.hasOwnProperty(stem)) {\n      term.switch = switches[stem];\n    }\n  }\n};\nexport default tagSwitch;","map":{"version":3,"names":["prefix","tagSwitch","terms","i","model","switches","two","term","hasOwnProperty","normal","switch","test","stem","replace","length"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/compute/tagger/2nd-pass/00-tagSwitch.js"],"sourcesContent":["const prefix = /^(under|over|mis|re|un|dis|semi)-?/\n\nconst tagSwitch = function (terms, i, model) {\n  const switches = model.two.switches\n  let term = terms[i]\n  if (switches.hasOwnProperty(term.normal)) {\n    term.switch = switches[term.normal]\n    return\n  }\n  // support 'restrike' -> 'strike'\n  if (prefix.test(term.normal)) {\n    let stem = term.normal.replace(prefix, '')\n    if (stem.length > 3 && switches.hasOwnProperty(stem)) {\n      term.switch = switches[stem]\n    }\n  }\n}\nexport default tagSwitch"],"mappings":"AAAA,MAAMA,MAAM,GAAG,oCAAoC;AAEnD,MAAMC,SAAS,GAAG,SAAAA,CAAUC,KAAK,EAAEC,CAAC,EAAEC,KAAK,EAAE;EAC3C,MAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAG,CAACD,QAAQ;EACnC,IAAIE,IAAI,GAAGL,KAAK,CAACC,CAAC,CAAC;EACnB,IAAIE,QAAQ,CAACG,cAAc,CAACD,IAAI,CAACE,MAAM,CAAC,EAAE;IACxCF,IAAI,CAACG,MAAM,GAAGL,QAAQ,CAACE,IAAI,CAACE,MAAM,CAAC;IACnC;EACF;EACA;EACA,IAAIT,MAAM,CAACW,IAAI,CAACJ,IAAI,CAACE,MAAM,CAAC,EAAE;IAC5B,IAAIG,IAAI,GAAGL,IAAI,CAACE,MAAM,CAACI,OAAO,CAACb,MAAM,EAAE,EAAE,CAAC;IAC1C,IAAIY,IAAI,CAACE,MAAM,GAAG,CAAC,IAAIT,QAAQ,CAACG,cAAc,CAACI,IAAI,CAAC,EAAE;MACpDL,IAAI,CAACG,MAAM,GAAGL,QAAQ,CAACO,IAAI,CAAC;IAC9B;EACF;AACF,CAAC;AACD,eAAeX,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}