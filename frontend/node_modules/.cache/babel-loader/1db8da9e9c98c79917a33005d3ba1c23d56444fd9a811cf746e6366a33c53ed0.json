{"ast":null,"code":"import { convert, reverse, validate } from '../index.js';\nconst cyan = str => '\\x1b[36m' + str + '\\x1b[0m';\nconst blue = str => '\\x1b[34m' + str + '\\x1b[0m';\nconst percent = (part, total) => {\n  let num = part / total * 100;\n  num = Math.round(num * 10) / 10;\n  return num + '%';\n};\nconst swap = a => [a[1], a[0]];\nconst getNum = function (pairs, model) {\n  let right = 0;\n  let wrong = [];\n  pairs.forEach(a => {\n    let have = convert(a[0], model);\n    if (have === a[1]) {\n      right += 1;\n    } else {\n      console.log('‚ùå ', a, '‚Üí ' + have);\n      wrong.push(a);\n    }\n  });\n  return percent(right, pairs.length);\n};\nconst test = function (pairs, model = {}) {\n  pairs = validate(pairs);\n  let fwdScore = getNum(pairs, model);\n  let bkwdScore = getNum(pairs.map(swap), reverse(model));\n  console.log(`${blue(fwdScore)}  -  üîÑ ${cyan(bkwdScore)}`);\n};\nexport default test;","map":{"version":3,"names":["convert","reverse","validate","cyan","str","blue","percent","part","total","num","Math","round","swap","a","getNum","pairs","model","right","wrong","forEach","have","console","log","push","length","test","fwdScore","bkwdScore","map"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/suffix-thumb/src/test/index.js"],"sourcesContent":["import { convert, reverse, validate } from '../index.js'\n\nconst cyan = str => '\\x1b[36m' + str + '\\x1b[0m'\nconst blue = str => '\\x1b[34m' + str + '\\x1b[0m'\n\nconst percent = (part, total) => {\n  let num = (part / total) * 100;\n  num = Math.round(num * 10) / 10;\n  return num + '%'\n};\n\nconst swap = (a) => [a[1], a[0]]\n\nconst getNum = function (pairs, model) {\n  let right = 0\n  let wrong = []\n  pairs.forEach(a => {\n    let have = convert(a[0], model)\n    if (have === a[1]) {\n      right += 1\n    } else {\n      console.log('‚ùå ', a, '‚Üí ' + have)\n      wrong.push(a)\n    }\n  })\n  return percent(right, pairs.length)\n}\n\nconst test = function (pairs, model = {}) {\n  pairs = validate(pairs)\n  let fwdScore = getNum(pairs, model)\n  let bkwdScore = getNum(pairs.map(swap), reverse(model))\n  console.log(`${blue(fwdScore)}  -  üîÑ ${cyan(bkwdScore)}`)\n}\nexport default test"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,aAAa;AAExD,MAAMC,IAAI,GAAGC,GAAG,IAAI,UAAU,GAAGA,GAAG,GAAG,SAAS;AAChD,MAAMC,IAAI,GAAGD,GAAG,IAAI,UAAU,GAAGA,GAAG,GAAG,SAAS;AAEhD,MAAME,OAAO,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC/B,IAAIC,GAAG,GAAIF,IAAI,GAAGC,KAAK,GAAI,GAAG;EAC9BC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACF,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE;EAC/B,OAAOA,GAAG,GAAG,GAAG;AAClB,CAAC;AAED,MAAMG,IAAI,GAAIC,CAAC,IAAK,CAACA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;AAEhC,MAAMC,MAAM,GAAG,SAAAA,CAAUC,KAAK,EAAEC,KAAK,EAAE;EACrC,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,KAAK,GAAG,EAAE;EACdH,KAAK,CAACI,OAAO,CAACN,CAAC,IAAI;IACjB,IAAIO,IAAI,GAAGpB,OAAO,CAACa,CAAC,CAAC,CAAC,CAAC,EAAEG,KAAK,CAAC;IAC/B,IAAII,IAAI,KAAKP,CAAC,CAAC,CAAC,CAAC,EAAE;MACjBI,KAAK,IAAI,CAAC;IACZ,CAAC,MAAM;MACLI,OAAO,CAACC,GAAG,CAAC,IAAI,EAAET,CAAC,EAAE,IAAI,GAAGO,IAAI,CAAC;MACjCF,KAAK,CAACK,IAAI,CAACV,CAAC,CAAC;IACf;EACF,CAAC,CAAC;EACF,OAAOP,OAAO,CAACW,KAAK,EAAEF,KAAK,CAACS,MAAM,CAAC;AACrC,CAAC;AAED,MAAMC,IAAI,GAAG,SAAAA,CAAUV,KAAK,EAAEC,KAAK,GAAG,CAAC,CAAC,EAAE;EACxCD,KAAK,GAAGb,QAAQ,CAACa,KAAK,CAAC;EACvB,IAAIW,QAAQ,GAAGZ,MAAM,CAACC,KAAK,EAAEC,KAAK,CAAC;EACnC,IAAIW,SAAS,GAAGb,MAAM,CAACC,KAAK,CAACa,GAAG,CAAChB,IAAI,CAAC,EAAEX,OAAO,CAACe,KAAK,CAAC,CAAC;EACvDK,OAAO,CAACC,GAAG,CAAC,GAAGjB,IAAI,CAACqB,QAAQ,CAAC,WAAWvB,IAAI,CAACwB,SAAS,CAAC,EAAE,CAAC;AAC5D,CAAC;AACD,eAAeF,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}