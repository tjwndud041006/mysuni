{"ast":null,"code":"import fastTag from '../_fastTag.js';\nconst min = 1400;\nconst max = 2100;\nconst dateWords = new Set(['in', 'on', 'by', 'until', 'for', 'to', 'during', 'throughout', 'through', 'within', 'before', 'after', 'of', 'this', 'next', 'last', 'circa', 'around', 'post', 'pre', 'budget', 'classic', 'plan', 'may']);\nconst seemsGood = function (term) {\n  if (!term) {\n    return false;\n  }\n  let str = term.normal || term.implicit;\n  if (dateWords.has(str)) {\n    return true;\n  }\n  if (term.tags.has('Date') || term.tags.has('Month') || term.tags.has('WeekDay') || term.tags.has('Year')) {\n    return true;\n  }\n  // 1999 Film Festival\n  if (term.tags.has('ProperNoun')) {\n    return true;\n  }\n  return false;\n};\nconst seemsOkay = function (term) {\n  if (!term) {\n    return false;\n  }\n  if (term.tags.has('Ordinal')) {\n    return true;\n  }\n  // untagged 'june 13 2007'\n  if (term.tags.has('Cardinal') && term.normal.length < 3) {\n    return true;\n  }\n  // 2020 was ..\n  if (term.normal === 'is' || term.normal === 'was') {\n    return true;\n  }\n  return false;\n};\nconst seemsFine = function (term) {\n  return term && (term.tags.has('Date') || term.tags.has('Month') || term.tags.has('WeekDay') || term.tags.has('Year'));\n};\n\n// recognize '1993' as a year\nconst tagYear = function (terms, i) {\n  const term = terms[i];\n  if (term.tags.has('NumericValue') && term.tags.has('Cardinal') && term.normal.length === 4) {\n    let num = Number(term.normal);\n    // number between 1400 and 2100\n    if (num && !isNaN(num)) {\n      if (num > min && num < max) {\n        let lastTerm = terms[i - 1];\n        let nextTerm = terms[i + 1];\n        if (seemsGood(lastTerm) || seemsGood(nextTerm)) {\n          return fastTag(term, 'Year', '2-tagYear');\n        }\n        // or is it really-close to a year?\n        if (num >= 1920 && num < 2025) {\n          // look at neighbours\n          if (seemsOkay(lastTerm) || seemsOkay(nextTerm)) {\n            return fastTag(term, 'Year', '2-tagYear-close');\n          }\n          // look at far-neighbours\n          if (seemsFine(terms[i - 2]) || seemsFine(terms[i + 2])) {\n            return fastTag(term, 'Year', '2-tagYear-far');\n          }\n          // 'the 2002 hit', 'my 1950 convertable'\n          if (lastTerm && (lastTerm.tags.has('Determiner') || lastTerm.tags.has('Possessive'))) {\n            if (nextTerm && nextTerm.tags.has('Noun') && !nextTerm.tags.has('Plural')) {\n              return fastTag(term, 'Year', '2-tagYear-noun');\n            }\n          }\n        }\n      }\n    }\n  }\n  return null;\n};\nexport default tagYear;","map":{"version":3,"names":["fastTag","min","max","dateWords","Set","seemsGood","term","str","normal","implicit","has","tags","seemsOkay","length","seemsFine","tagYear","terms","i","num","Number","isNaN","lastTerm","nextTerm"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/compute/tagger/2nd-pass/05-year.js"],"sourcesContent":["import fastTag from '../_fastTag.js'\nconst min = 1400\nconst max = 2100\n\nconst dateWords = new Set([\n  'in',\n  'on',\n  'by',\n  'until',\n  'for',\n  'to',\n  'during',\n  'throughout',\n  'through',\n  'within',\n  'before',\n  'after',\n  'of',\n  'this',\n  'next',\n  'last',\n  'circa',\n  'around',\n  'post',\n  'pre',\n  'budget',\n  'classic',\n  'plan',\n  'may',\n])\n\nconst seemsGood = function (term) {\n  if (!term) {\n    return false\n  }\n  let str = term.normal || term.implicit\n  if (dateWords.has(str)) {\n    return true\n  }\n  if (term.tags.has('Date') || term.tags.has('Month') || term.tags.has('WeekDay') || term.tags.has('Year')) {\n    return true\n  }\n  // 1999 Film Festival\n  if (term.tags.has('ProperNoun')) {\n    return true\n  }\n  return false\n}\n\nconst seemsOkay = function (term) {\n  if (!term) {\n    return false\n  }\n  if (term.tags.has('Ordinal')) {\n    return true\n  }\n  // untagged 'june 13 2007'\n  if (term.tags.has('Cardinal') && term.normal.length < 3) {\n    return true\n  }\n  // 2020 was ..\n  if (term.normal === 'is' || term.normal === 'was') {\n    return true\n  }\n  return false\n}\n\nconst seemsFine = function (term) {\n  return term && (term.tags.has('Date') || term.tags.has('Month') || term.tags.has('WeekDay') || term.tags.has('Year'))\n}\n\n// recognize '1993' as a year\nconst tagYear = function (terms, i) {\n  const term = terms[i]\n  if (term.tags.has('NumericValue') && term.tags.has('Cardinal') && term.normal.length === 4) {\n    let num = Number(term.normal)\n    // number between 1400 and 2100\n    if (num && !isNaN(num)) {\n      if (num > min && num < max) {\n        let lastTerm = terms[i - 1]\n        let nextTerm = terms[i + 1]\n        if (seemsGood(lastTerm) || seemsGood(nextTerm)) {\n          return fastTag(term, 'Year', '2-tagYear')\n        }\n        // or is it really-close to a year?\n        if (num >= 1920 && num < 2025) {\n          // look at neighbours\n          if (seemsOkay(lastTerm) || seemsOkay(nextTerm)) {\n            return fastTag(term, 'Year', '2-tagYear-close')\n          }\n          // look at far-neighbours\n          if (seemsFine(terms[i - 2]) || seemsFine(terms[i + 2])) {\n            return fastTag(term, 'Year', '2-tagYear-far')\n          }\n          // 'the 2002 hit', 'my 1950 convertable'\n          if (lastTerm && (lastTerm.tags.has('Determiner') || lastTerm.tags.has('Possessive'))) {\n            if (nextTerm && nextTerm.tags.has('Noun') && !nextTerm.tags.has('Plural')) {\n              return fastTag(term, 'Year', '2-tagYear-noun')\n            }\n          }\n        }\n      }\n    }\n  }\n  return null\n}\n\nexport default tagYear\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}