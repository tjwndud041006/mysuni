{"ast":null,"code":"const prefix = /^([0-9]+)/;\nconst toObject = function (txt) {\n  let obj = {};\n  txt.split('¦').forEach(str => {\n    let [key, vals] = str.split(':');\n    vals = (vals || '').split(',');\n    vals.forEach(val => {\n      obj[val] = key;\n    });\n  });\n  return obj;\n};\nconst growObject = function (key = '', val = '') {\n  val = String(val);\n  let m = val.match(prefix);\n  if (m === null) {\n    return val;\n  }\n  let num = Number(m[1]) || 0;\n  let pre = key.substring(0, num);\n  let full = pre + val.replace(prefix, '');\n  return full;\n};\nconst unpackOne = function (str) {\n  let obj = toObject(str);\n  return Object.keys(obj).reduce((h, k) => {\n    h[k] = growObject(k, obj[k]);\n    return h;\n  }, {});\n};\nconst uncompress = function (model = {}) {\n  if (typeof model === 'string') {\n    model = JSON.parse(model);\n  }\n  model.fwd = unpackOne(model.fwd || '');\n  model.both = unpackOne(model.both || '');\n  model.rev = unpackOne(model.rev || '');\n  model.ex = unpackOne(model.ex || '');\n  return model;\n};\nexport default uncompress;","map":{"version":3,"names":["prefix","toObject","txt","obj","split","forEach","str","key","vals","val","growObject","String","m","match","num","Number","pre","substring","full","replace","unpackOne","Object","keys","reduce","h","k","uncompress","model","JSON","parse","fwd","both","rev","ex"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/suffix-thumb/src/compress/unpack.js"],"sourcesContent":["const prefix = /^([0-9]+)/\n\nconst toObject = function (txt) {\n  let obj = {}\n  txt.split('¦').forEach(str => {\n    let [key, vals] = str.split(':')\n    vals = (vals || '').split(',')\n    vals.forEach(val => {\n      obj[val] = key\n    })\n  })\n  return obj\n}\n\nconst growObject = function (key = '', val = '') {\n  val = String(val)\n  let m = val.match(prefix)\n  if (m === null) {\n    return val\n  }\n  let num = Number(m[1]) || 0\n  let pre = key.substring(0, num)\n  let full = pre + val.replace(prefix, '')\n  return full\n}\n\nconst unpackOne = function (str) {\n  let obj = toObject(str)\n  return Object.keys(obj).reduce((h, k) => {\n    h[k] = growObject(k, obj[k])\n    return h\n  }, {})\n}\n\nconst uncompress = function (model = {}) {\n  if (typeof model === 'string') {\n    model = JSON.parse(model)\n  }\n  model.fwd = unpackOne(model.fwd || '')\n  model.both = unpackOne(model.both || '')\n  model.rev = unpackOne(model.rev || '')\n  model.ex = unpackOne(model.ex || '')\n  return model\n}\nexport default uncompress\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,WAAW;AAE1B,MAAMC,QAAQ,GAAG,SAAAA,CAAUC,GAAG,EAAE;EAC9B,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAACC,GAAG,IAAI;IAC5B,IAAI,CAACC,GAAG,EAAEC,IAAI,CAAC,GAAGF,GAAG,CAACF,KAAK,CAAC,GAAG,CAAC;IAChCI,IAAI,GAAG,CAACA,IAAI,IAAI,EAAE,EAAEJ,KAAK,CAAC,GAAG,CAAC;IAC9BI,IAAI,CAACH,OAAO,CAACI,GAAG,IAAI;MAClBN,GAAG,CAACM,GAAG,CAAC,GAAGF,GAAG;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOJ,GAAG;AACZ,CAAC;AAED,MAAMO,UAAU,GAAG,SAAAA,CAAUH,GAAG,GAAG,EAAE,EAAEE,GAAG,GAAG,EAAE,EAAE;EAC/CA,GAAG,GAAGE,MAAM,CAACF,GAAG,CAAC;EACjB,IAAIG,CAAC,GAAGH,GAAG,CAACI,KAAK,CAACb,MAAM,CAAC;EACzB,IAAIY,CAAC,KAAK,IAAI,EAAE;IACd,OAAOH,GAAG;EACZ;EACA,IAAIK,GAAG,GAAGC,MAAM,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;EAC3B,IAAII,GAAG,GAAGT,GAAG,CAACU,SAAS,CAAC,CAAC,EAAEH,GAAG,CAAC;EAC/B,IAAII,IAAI,GAAGF,GAAG,GAAGP,GAAG,CAACU,OAAO,CAACnB,MAAM,EAAE,EAAE,CAAC;EACxC,OAAOkB,IAAI;AACb,CAAC;AAED,MAAME,SAAS,GAAG,SAAAA,CAAUd,GAAG,EAAE;EAC/B,IAAIH,GAAG,GAAGF,QAAQ,CAACK,GAAG,CAAC;EACvB,OAAOe,MAAM,CAACC,IAAI,CAACnB,GAAG,CAAC,CAACoB,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACvCD,CAAC,CAACC,CAAC,CAAC,GAAGf,UAAU,CAACe,CAAC,EAAEtB,GAAG,CAACsB,CAAC,CAAC,CAAC;IAC5B,OAAOD,CAAC;EACV,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC;AAED,MAAME,UAAU,GAAG,SAAAA,CAAUC,KAAK,GAAG,CAAC,CAAC,EAAE;EACvC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7BA,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC;EAC3B;EACAA,KAAK,CAACG,GAAG,GAAGV,SAAS,CAACO,KAAK,CAACG,GAAG,IAAI,EAAE,CAAC;EACtCH,KAAK,CAACI,IAAI,GAAGX,SAAS,CAACO,KAAK,CAACI,IAAI,IAAI,EAAE,CAAC;EACxCJ,KAAK,CAACK,GAAG,GAAGZ,SAAS,CAACO,KAAK,CAACK,GAAG,IAAI,EAAE,CAAC;EACtCL,KAAK,CAACM,EAAE,GAAGb,SAAS,CAACO,KAAK,CAACM,EAAE,IAAI,EAAE,CAAC;EACpC,OAAON,KAAK;AACd,CAAC;AACD,eAAeD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}