{"ast":null,"code":"const anyIntersection = function (setA, setB) {\n  for (let elem of setB) {\n    if (setA.has(elem)) {\n      return true;\n    }\n  }\n  return false;\n};\n// check words/tags against our cache\nconst failFast = function (regs, cache) {\n  for (let i = 0; i < regs.length; i += 1) {\n    let reg = regs[i];\n    if (reg.optional === true || reg.negative === true || reg.fuzzy === true) {\n      continue;\n    }\n    // is the word missing from the cache?\n    if (reg.word !== undefined && cache.has(reg.word) === false) {\n      return true;\n    }\n    // is the tag missing?\n    if (reg.tag !== undefined && cache.has('#' + reg.tag) === false) {\n      return true;\n    }\n    // perform a speedup for fast-or\n    if (reg.fastOr && anyIntersection(reg.fastOr, cache) === false) {\n      return false;\n    }\n  }\n  return false;\n};\nexport default failFast;","map":{"version":3,"names":["anyIntersection","setA","setB","elem","has","failFast","regs","cache","i","length","reg","optional","negative","fuzzy","word","undefined","tag","fastOr"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/match/methods/match/01-failFast.js"],"sourcesContent":["const anyIntersection = function (setA, setB) {\n  for (let elem of setB) {\n    if (setA.has(elem)) {\n      return true\n    }\n  }\n  return false\n}\n// check words/tags against our cache\nconst failFast = function (regs, cache) {\n  for (let i = 0; i < regs.length; i += 1) {\n    let reg = regs[i]\n    if (reg.optional === true || reg.negative === true || reg.fuzzy === true) {\n      continue\n    }\n    // is the word missing from the cache?\n    if (reg.word !== undefined && cache.has(reg.word) === false) {\n      return true\n    }\n    // is the tag missing?\n    if (reg.tag !== undefined && cache.has('#' + reg.tag) === false) {\n      return true\n    }\n    // perform a speedup for fast-or\n    if (reg.fastOr && anyIntersection(reg.fastOr, cache) === false) {\n      return false\n    }\n  }\n  return false\n}\nexport default failFast\n"],"mappings":"AAAA,MAAMA,eAAe,GAAG,SAAAA,CAAUC,IAAI,EAAEC,IAAI,EAAE;EAC5C,KAAK,IAAIC,IAAI,IAAID,IAAI,EAAE;IACrB,IAAID,IAAI,CAACG,GAAG,CAACD,IAAI,CAAC,EAAE;MAClB,OAAO,IAAI;IACb;EACF;EACA,OAAO,KAAK;AACd,CAAC;AACD;AACA,MAAME,QAAQ,GAAG,SAAAA,CAAUC,IAAI,EAAEC,KAAK,EAAE;EACtC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACvC,IAAIE,GAAG,GAAGJ,IAAI,CAACE,CAAC,CAAC;IACjB,IAAIE,GAAG,CAACC,QAAQ,KAAK,IAAI,IAAID,GAAG,CAACE,QAAQ,KAAK,IAAI,IAAIF,GAAG,CAACG,KAAK,KAAK,IAAI,EAAE;MACxE;IACF;IACA;IACA,IAAIH,GAAG,CAACI,IAAI,KAAKC,SAAS,IAAIR,KAAK,CAACH,GAAG,CAACM,GAAG,CAACI,IAAI,CAAC,KAAK,KAAK,EAAE;MAC3D,OAAO,IAAI;IACb;IACA;IACA,IAAIJ,GAAG,CAACM,GAAG,KAAKD,SAAS,IAAIR,KAAK,CAACH,GAAG,CAAC,GAAG,GAAGM,GAAG,CAACM,GAAG,CAAC,KAAK,KAAK,EAAE;MAC/D,OAAO,IAAI;IACb;IACA;IACA,IAAIN,GAAG,CAACO,MAAM,IAAIjB,eAAe,CAACU,GAAG,CAACO,MAAM,EAAEV,KAAK,CAAC,KAAK,KAAK,EAAE;MAC9D,OAAO,KAAK;IACd;EACF;EACA,OAAO,KAAK;AACd,CAAC;AACD,eAAeF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}