{"ast":null,"code":"const isSlash = /\\p{L} ?\\/ ?\\p{L}+$/u;\n\n// 'he / she' should be one word\nconst combineSlashes = function (arr) {\n  for (let i = 1; i < arr.length - 1; i++) {\n    if (isSlash.test(arr[i])) {\n      arr[i - 1] += arr[i] + arr[i + 1];\n      arr[i] = null;\n      arr[i + 1] = null;\n    }\n  }\n  return arr;\n};\nexport default combineSlashes;","map":{"version":3,"names":["isSlash","combineSlashes","arr","i","length","test"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/tokenize/methods/02-terms/02-slashes.js"],"sourcesContent":["const isSlash = /\\p{L} ?\\/ ?\\p{L}+$/u\n\n// 'he / she' should be one word\nconst combineSlashes = function (arr) {\n  for (let i = 1; i < arr.length - 1; i++) {\n    if (isSlash.test(arr[i])) {\n      arr[i - 1] += arr[i] + arr[i + 1]\n      arr[i] = null\n      arr[i + 1] = null\n    }\n  }\n  return arr\n}\nexport default combineSlashes\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,qBAAqB;;AAErC;AACA,MAAMC,cAAc,GAAG,SAAAA,CAAUC,GAAG,EAAE;EACpC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,GAAG,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;IACvC,IAAIH,OAAO,CAACK,IAAI,CAACH,GAAG,CAACC,CAAC,CAAC,CAAC,EAAE;MACxBD,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC,IAAID,GAAG,CAACC,CAAC,CAAC,GAAGD,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC;MACjCD,GAAG,CAACC,CAAC,CAAC,GAAG,IAAI;MACbD,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;IACnB;EACF;EACA,OAAOD,GAAG;AACZ,CAAC;AACD,eAAeD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}