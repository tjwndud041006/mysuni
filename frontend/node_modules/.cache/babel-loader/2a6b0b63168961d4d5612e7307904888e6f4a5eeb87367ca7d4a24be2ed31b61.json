{"ast":null,"code":"/*\nCopyright (c) 2017, Alif Bhaskoro, Andy Librian, R. Kukuh (Reimplemented from https://github.com/sastrawi/sastrawi)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n// a list of commonly used words that have little meaning and can be excluded\n// from analysis.\n\nconst Removal = require('./removal');\n\n// Make global variable for dictionary\nconst dictionary = loadDictionary();\nfunction loadDictionary() {\n  const fin = require('./data/kata-dasar.json');\n  return new Set(fin.filter(Boolean));\n}\n\n// Find certain word in dictionary\nfunction find(word) {\n  return dictionary.has(word);\n}\nfunction PrefixRules() {\n  const PrefixRules = this;\n  this.removal = undefined;\n  this.currentWord = undefined;\n\n  // Run the array of disambiguate rules on input word\n  function runDisambiguator(disambiguateRules, word) {\n    let result;\n    for (const i in disambiguateRules) {\n      result = disambiguateRules[i](word);\n      if (find(result)) {\n        break;\n      }\n    }\n    if (result === undefined) {\n      this.currentWord = word;\n      this.removal = undefined;\n      return this;\n    }\n    return createResultObject(result, word, 'DP');\n  }\n  function createResultObject(result, word, type) {\n    const removedPart = word.replace(result, '');\n    const removal = new Removal(word, result, removedPart, type);\n    this.removal = removal;\n    this.currentWord = result;\n    return this;\n  }\n  PrefixRules.RemovePlainPrefix = function (word) {\n    const result = word.replace(/^(di|ke|se)/, '');\n    if (result !== word) {\n      const removedPart = word.replace(result, '');\n      const removal = new Removal(word, result, removedPart, 'DP');\n      this.removal = removal;\n    } else {\n      this.removal = undefined;\n    }\n    this.currentWord = result;\n    return this;\n  };\n\n  // RULE 1\n  function disambiguateRule1A(word) {\n    // Rule 1a : berV -> ber-V\n    const matches = word.match(/^ber([aiueo].*)$/);\n    if (matches) {\n      return matches[1];\n    }\n  }\n  function disambiguateRule1B(word) {\n    // Rule 1b : berV -> be-rV\n    const matches = word.match(/^ber([aiueo].*)$/);\n    if (matches) {\n      return 'r' + matches[1];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule1 = function (word) {\n    // Push rules 1A & 1B\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule1A);\n    disambiguateRules.push(disambiguateRule1B);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 2\n  function disambiguateRule2(word) {\n    // Rule 2 : berCAP -> ber-CAP where C != 'r' AND P != 'er'\n    const matches = word.match(/^ber([bcdfghjklmnpqrstvwxyz])([a-z])(.*)/);\n    if (matches) {\n      if (matches[3].match(/^er(.*)$/)) {\n        return;\n      }\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule2 = function (word) {\n    // Push rule 2\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule2);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 3\n  function disambiguateRule3(word) {\n    // Rule 3 : berCAerV -> ber-CAerV where C != 'r'\n    const matches = word.match(/ber([bcdfghjklmnpqrstvwxyz])([a-z])er([aiueo])(.*)/);\n    if (matches) {\n      if (matches[1] === 'r') {\n        return;\n      }\n      return matches[1] + matches[2] + 'er' + matches[3] + matches[4];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule3 = function (word) {\n    // Push rule 3\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule3);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 4\n  function disambiguateRule4(word) {\n    // Rule 4 : belajar -> ajar\n    if (word === 'belajar') {\n      return 'ajar';\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule4 = function (word) {\n    // Push rule 4\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule4);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 5\n  function disambiguateRule5(word) {\n    // Rule 5 : beC1erC2 -> be-C1erC2 where C1 != 'r'\n    const matches = word.match(/be([bcdfghjklmnpqstvwxyz])(er[bcdfghjklmnpqrstvwxyz])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule5 = function (word) {\n    // Push rule 5\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule5);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 6\n  function disambiguateRule6a(word) {\n    // Rule 6a : terV -> ter-V\n    const matches = word.match(/^ter([aiueo].*)$/);\n    if (matches) {\n      return matches[1];\n    }\n  }\n  function disambiguateRule6b(word) {\n    // Rule 6b : terV -> te-rV\n    const matches = word.match(/^ter([aiueo].*)$/);\n    if (matches) {\n      return 'r' + matches[1];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule6 = function (word) {\n    // Push rule 6\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule6a);\n    disambiguateRules.push(disambiguateRule6b);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 7\n  function disambiguateRule7(word) {\n    // Rule 7 : terCerv -> ter-CerV where C != 'r'\n    const matches = word.match(/^ter([bcdfghjklmnpqrstvwxyz])er([aiueo].*)$/);\n    if (matches) {\n      if (matches[1] === 'r') {\n        return;\n      }\n      return matches[1] + 'er' + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule7 = function (word) {\n    // Push rule 7\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule7);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 8\n  function disambiguateRule8(word) {\n    // Rule 8 : terCP -> ter-CP where C != 'r' and P != 'er'\n    const matches = word.match(/^ter([bcdfghjklmnpqrstvwxyz])(.*)$/);\n    if (matches) {\n      if (matches[1] === 'r' || matches[2].match(/^er(.*)$/)) {\n        return;\n      }\n      return matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule8 = function (word) {\n    // Push rule 8\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule8);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 9\n  function disambiguateRule9(word) {\n    // Rule 9 : te-C1erC2 -> te-C1erC2 where C1 != 'r'\n    const matches = word.match(/^te([bcdfghjklmnpqrstvwxyz])er([bcdfghjklmnpqrstvwxyz])(.*)$/);\n    if (matches) {\n      if (matches[1] === 'r') {\n        return;\n      }\n      return matches[1] + 'er' + matches[2] + matches[3];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule9 = function (word) {\n    // Push rule 9\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule9);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 10\n  function disambiguateRule10(word) {\n    // Rule 10 : me{l|r|w|y}V -> me-{l|r|w|y}V\n    const matches = word.match(/^me([lrwy])([aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule10 = function (word) {\n    // Push rule 10\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule10);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 11\n  function disambiguateRule11(word) {\n    // Rule 11 : mem{b|f|v} -> mem-{b|f|v}\n    const matches = word.match(/^mem([bfv])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule11 = function (word) {\n    // Push rule 11\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule11);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 12\n  function disambiguateRule12(word) {\n    // Nazief and Adriani Rule 12 : beC1erC2 -> be-C1erC2 where C1 != 'r'\n    // Modified by Jelita Asian's CS Rule 12 : mempe -> mem-pe to stem mempengaruhi\n    const matches = word.match(/^mempe(.*)$/);\n    if (matches) {\n      return 'pe' + matches[1];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule12 = function (word) {\n    // Push rule 12\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule12);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 13\n  function disambiguateRule13a(word) {\n    // Rule 13a : mem{rV|V} -> me-m{rV|V}\n    const matches = word.match(/^mem([aiueo])(.*)$/);\n    if (matches) {\n      return 'm' + matches[1] + matches[2];\n    }\n  }\n  function disambiguateRule13b(word) {\n    // Rule 13b : mem{rV|V} -> me-p{rV|V}\n    const matches = word.match(/^mem([aiueo])(.*)$/);\n    if (matches) {\n      return 'p' + matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule13 = function (word) {\n    // Push rule 13\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule13a);\n    disambiguateRules.push(disambiguateRule13b);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 14\n  function disambiguateRule14(word) {\n    /* Rule 14 modified by Andy Librian : men{c|d|j|s|t|z} -> men-{c|d|j|s|t|z}\n        in order to stem mentaati\n         Rule 14 modified by ECS: men{c|d|j|s|z} -> men-{c|d|j|s|z}\n        in order to stem mensyaratkan, mensyukuri\n         Original CS Rule no 14 was : men{c|d|j|z} -> men-{c|d|j|z} */\n    const matches = word.match(/^men([cdjstz])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule14 = function (word) {\n    // Push rule 14\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule14);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 15\n  function disambiguateRule15a(word) {\n    // Rule 15a : men{V} -> me-n{V}\n    const matches = word.match(/^men([aiueo])(.*)$/);\n    if (matches) {\n      return 'n' + matches[1] + matches[2];\n    }\n  }\n  function disambiguateRule15b(word) {\n    // Rule 15b : men{V} -> me-t{V}\n    const matches = word.match(/^men([aiueo])(.*)$/);\n    if (matches) {\n      return 't' + matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule15 = function (word) {\n    // Push rule 15\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule15a);\n    disambiguateRules.push(disambiguateRule15b);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 16\n  function disambiguateRule16(word) {\n    // Original Nazief and Adriani's Rule 16 : meng{g|h|q} -> meng-{g|h|q}\n    // Modified Jelita Asian's CS Rule 16 : meng{g|h|q|k} -> meng-{g|h|q|k} to stem mengkritik\n    const matches = word.match(/^meng([g|h|q|k])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule16 = function (word) {\n    // Push rule 16\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule16);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 17\n  function disambiguateRule17a(word) {\n    // Rule 17a : mengV -> meng-V\n    const matches = word.match(/^meng([aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2];\n    }\n  }\n  function disambiguateRule17b(word) {\n    // Rule 17b : mengV -> meng-kV\n    const matches = word.match(/^meng([aiueo])(.*)$/);\n    if (matches) {\n      return 'k' + matches[1] + matches[2];\n    }\n  }\n  function disambiguateRule17c(word) {\n    // Rule 17c : mengV -> meng-V- where V = 'e'\n    const matches = word.match(/^menge(.*)$/);\n    if (matches) {\n      return matches[1];\n    }\n  }\n  function disambiguateRule17d(word) {\n    // Rule 17d : mengV -> me-ngV\n    const matches = word.match(/^meng([aiueo])(.*)$/);\n    if (matches) {\n      return 'ng' + matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule17 = function (word) {\n    // Push rule 17\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule17a);\n    disambiguateRules.push(disambiguateRule17b);\n    disambiguateRules.push(disambiguateRule17c);\n    disambiguateRules.push(disambiguateRule17d);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 18\n  function disambiguateRule18a(word) {\n    // Rule 18a : menyV -> me-nyV to stem menyala -> nyala\n    const matches = word.match(/^meny([aiueo])(.*)$/);\n    if (matches) {\n      return 'ny' + matches[1] + matches[2];\n    }\n  }\n  function disambiguateRule18b(word) {\n    // Original Rule 18b : menyV -> meny-sV\n    // Modified by CC (shifted into 18b, see also 18a)\n    const matches = word.match(/^meny([aiueo])(.*)$/);\n    if (matches) {\n      return 's' + matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule18 = function (word) {\n    // Push rule 18\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule18a);\n    disambiguateRules.push(disambiguateRule18b);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 19\n  function disambiguateRule19(word) {\n    // Original Rule 19 : mempV -> mem-pV where V != 'e'\n    // Modified Rule 19 by ECS : mempA -> mem-pA where A != 'e' in order to stem memproteksi\n    const matches = word.match(/^memp([abcdfghijklmopqrstuvwxyz])(.*)$/);\n    if (matches) {\n      return 'p' + matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule19 = function (word) {\n    // Push rule 19\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule19);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 20\n  function disambiguateRule20(word) {\n    // Rule 20 : pe{w|y}V -> pe-{w|y}V\n    const matches = word.match(/^pe([wy])([aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule20 = function (word) {\n    // Push rule 20\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule20);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 21\n  function disambiguateRule21a(word) {\n    // Rule 21a : perV -> per-V\n    const matches = word.match(/^per([aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2];\n    }\n  }\n  function disambiguateRule21b(word) {\n    // Rule 21b : perV -> pe-rV\n    const matches = word.match(/^pe(r[aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule21 = function (word) {\n    // Push rule 21\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule21a);\n    disambiguateRules.push(disambiguateRule21b);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 23\n  function disambiguateRule23(word) {\n    // Rule 23 : perCAP -> per-CAP where C != 'r' AND P != 'er'\n    const matches = word.match(/^per([bcdfghjklmnpqrstvwxyz])([a-z])(.*)$/);\n    if (matches) {\n      if (matches[3].match(/^er(.*)$/)) {\n        return;\n      }\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule23 = function (word) {\n    // Push rule 23\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule23);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 24\n  function disambiguateRule24(word) {\n    // Rule 24 : perCAerV -> per-CAerV where C != 'r'\n    const matches = word.match(/^per([bcdfghjklmnpqrstvwxyz])([a-z])er([aiueo])(.*)$/);\n    if (matches) {\n      if (matches[1] === 'r') {\n        return;\n      }\n      return matches[1] + matches[2] + 'er' + matches[3] + matches[4];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule24 = function (word) {\n    // Push rule 24\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule24);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 25\n  function disambiguateRule25(word) {\n    // Rule 25 : pem{b|f|v} -> pem-{b|f|v}\n    const matches = word.match(/^pem([bfv])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule25 = function (word) {\n    // Push rule 25\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule25);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 26\n  function disambiguateRule26a(word) {\n    // Rule 26a : pem{rV|V} -> pe-m{rV|V}\n    const matches = word.match(/^pem([aiueo])(.*)$/);\n    if (matches) {\n      return 'm' + matches[1] + matches[2];\n    }\n  }\n  function disambiguateRule26b(word) {\n    // Rule 26b : pem{rV|V} -> pe-p{rV|V}\n    const matches = word.match(/^pem([aiueo])(.*)$/);\n    if (matches) {\n      return 'p' + matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule26 = function (word) {\n    // Push rule 26\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule26a);\n    disambiguateRules.push(disambiguateRule26b);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 27\n  function disambiguateRule27(word) {\n    // Rule 27 : pen{c|d|j|s|t|z} -> pen-{c|d|j|s|t|z}\n    const matches = word.match(/^pen([cdjstz])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule27 = function (word) {\n    // Push rule 27\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule27);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 28\n  function disambiguateRule28a(word) {\n    // Rule 28a : pen{V} -> pe-n{V}\n    const matches = word.match(/^pen([aiueo])(.*)$/);\n    if (matches) {\n      return 'n' + matches[1] + matches[2];\n    }\n  }\n  function disambiguateRule28b(word) {\n    // Rule 28b : pen{V} -> pe-t{V}\n    const matches = word.match(/^pen([aiueo])(.*)$/);\n    if (matches) {\n      return 't' + matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule28 = function (word) {\n    // Push rule 28\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule28a);\n    disambiguateRules.push(disambiguateRule28b);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 29\n  function disambiguateRule29(word) {\n    // Rule 29 by ECS : pengC -> peng-C\n    const matches = word.match(/^peng([bcdfghjklmnpqrstvwxyz])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule29 = function (word) {\n    // Push rule 29\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule29);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 30\n  function disambiguateRule30a(word) {\n    // Rule 30a : pengV -> peng-V\n    const matches = word.match(/^peng([aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2];\n    }\n  }\n  function disambiguateRule30b(word) {\n    // Rule 30b : pengV -> peng-kV\n    const matches = word.match(/^peng([aiueo])(.*)$/);\n    if (matches) {\n      return 'k' + matches[1] + matches[2];\n    }\n  }\n  function disambiguateRule30c(word) {\n    // Rule 30c : pengV -> pengV- where V = 'e'\n    const matches = word.match(/^penge(.*)$/);\n    if (matches) {\n      return matches[1];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule30 = function (word) {\n    // Push rule 30\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule30a);\n    disambiguateRules.push(disambiguateRule30b);\n    disambiguateRules.push(disambiguateRule30c);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 31\n  function disambiguateRule31a(word) {\n    // Rule 31a : penyV -> pe-nyV\n    const matches = word.match(/^peny([aiueo])(.*)$/);\n    if (matches) {\n      return 'ny' + matches[1] + matches[2];\n    }\n  }\n  function disambiguateRule31b(word) {\n    // Original Rule 31 : penyV -> peny-sV\n    const matches = word.match(/^peny([aiueo])(.*)$/);\n    if (matches) {\n      return 's' + matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule31 = function (word) {\n    // Push rule 31\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule31a);\n    disambiguateRules.push(disambiguateRule31b);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 32\n  function disambiguateRule32(word) {\n    // Rule 32 : pelV -> pe-lV except pelajar -> ajar\n    if (word === 'pelajar') {\n      return 'ajar';\n    }\n    const matches = word.match(/^pe(l[aiueo])(.*)/);\n    if (matches) {\n      return matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule32 = function (word) {\n    // Push rule 32\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule32);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 34\n  function disambiguateRule34(word) {\n    // Rule 34 : peCP -> pe-CP where C != {r|w|y|l|m|n} and P != 'er'\n    const matches = word.match(/^pe([bcdfghjklmnpqrstvwxyz])(.*)$/);\n    if (matches) {\n      if (matches[2].match(/^er(.*)$/)) {\n        return;\n      }\n      return matches[1] + matches[2];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule34 = function (word) {\n    // Push rule 34\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule34);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 35\n  function disambiguateRule35(word) {\n    // Rule 35 : terC1erC2 -> ter-C1erC2 where C1 != {r}\n    const matches = word.match(/^ter([bcdfghjkpqstvxz])(er[bcdfghjklmnpqrstvwxyz])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule35 = function (word) {\n    // Push rule 35\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule35);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 36\n  function disambiguateRule36(word) {\n    // Rule 36 : peC1erC2 -> pe-C1erC2 where C1 != {r|w|y|l|m|n}\n    const matches = word.match(/^pe([bcdfghjkpqstvxz])(er[bcdfghjklmnpqrstvwxyz])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule36 = function (word) {\n    // Push rule 36\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule36);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 37\n  function disambiguateRule37a(word) {\n    // Rule 37a : CerV -> CerV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])(er[aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  function disambiguateRule37b(word) {\n    // Rule 37b : CerV -> CV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])er([aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule37 = function (word) {\n    // Push rule 37\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule37a);\n    disambiguateRules.push(disambiguateRule37b);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 38\n  function disambiguateRule38a(word) {\n    // Rule 38a : CelV -> CelV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])(el[aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  function disambiguateRule38b(word) {\n    // Rule 38b : CelV -> CV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])el([aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule38 = function (word) {\n    // Push rule 38\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule38a);\n    disambiguateRules.push(disambiguateRule38b);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 39\n  function disambiguateRule39a(word) {\n    // Rule 39a : CemV -> CemV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])(em[aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  function disambiguateRule39b(word) {\n    // Rule 39b : CemV -> CV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])em([aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule39 = function (word) {\n    // Push rule 39\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule39a);\n    disambiguateRules.push(disambiguateRule39b);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 40\n  function disambiguateRule40a(word) {\n    // Rule 40a : CinV -> CinV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])(in[aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  function disambiguateRule40b(word) {\n    // Rule 40b : CinV -> CV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])in([aiueo])(.*)$/);\n    if (matches) {\n      return matches[1] + matches[2] + matches[3];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule40 = function (word) {\n    // Push rule 40\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule40a);\n    disambiguateRules.push(disambiguateRule40b);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 41\n  function disambiguateRule41(word) {\n    // Rule 41 : kuA -> ku-A\n    const matches = word.match(/^ku(.*)$/);\n    if (matches) {\n      return matches[1];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule41 = function (word) {\n    // Push rule 41\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule41);\n    return runDisambiguator(disambiguateRules, word);\n  };\n\n  // RULE 42\n  function disambiguateRule42(word) {\n    // Rule 42 : kauA -> kau-A\n    const matches = word.match(/^kau(.*)$/);\n    if (matches) {\n      return matches[1];\n    }\n  }\n  PrefixRules.DisambiguatorPrefixRule42 = function (word) {\n    // Push rule 42\n    const disambiguateRules = [];\n    disambiguateRules.push(disambiguateRule42);\n    return runDisambiguator(disambiguateRules, word);\n  };\n}\nmodule.exports = PrefixRules;\n\n// Initalize prefix rules array\nconst rules = [];\nconst pr = new PrefixRules();\n\n// Push all rules\nrules.push(pr.RemovePlainPrefix);\nrules.push(pr.DisambiguatorPrefixRule1);\nrules.push(pr.DisambiguatorPrefixRule2);\nrules.push(pr.DisambiguatorPrefixRule3);\nrules.push(pr.DisambiguatorPrefixRule4);\nrules.push(pr.DisambiguatorPrefixRule5);\nrules.push(pr.DisambiguatorPrefixRule6);\nrules.push(pr.DisambiguatorPrefixRule7);\nrules.push(pr.DisambiguatorPrefixRule8);\nrules.push(pr.DisambiguatorPrefixRule9);\nrules.push(pr.DisambiguatorPrefixRule10);\nrules.push(pr.DisambiguatorPrefixRule11);\nrules.push(pr.DisambiguatorPrefixRule12);\nrules.push(pr.DisambiguatorPrefixRule13);\nrules.push(pr.DisambiguatorPrefixRule14);\nrules.push(pr.DisambiguatorPrefixRule15);\nrules.push(pr.DisambiguatorPrefixRule16);\nrules.push(pr.DisambiguatorPrefixRule17);\nrules.push(pr.DisambiguatorPrefixRule18);\nrules.push(pr.DisambiguatorPrefixRule19);\nrules.push(pr.DisambiguatorPrefixRule20);\nrules.push(pr.DisambiguatorPrefixRule21);\nrules.push(pr.DisambiguatorPrefixRule23);\nrules.push(pr.DisambiguatorPrefixRule24);\nrules.push(pr.DisambiguatorPrefixRule25);\nrules.push(pr.DisambiguatorPrefixRule26);\nrules.push(pr.DisambiguatorPrefixRule27);\nrules.push(pr.DisambiguatorPrefixRule28);\nrules.push(pr.DisambiguatorPrefixRule29);\nrules.push(pr.DisambiguatorPrefixRule30);\nrules.push(pr.DisambiguatorPrefixRule31);\nrules.push(pr.DisambiguatorPrefixRule32);\nrules.push(pr.DisambiguatorPrefixRule34);\nrules.push(pr.DisambiguatorPrefixRule35);\nrules.push(pr.DisambiguatorPrefixRule36);\nrules.push(pr.DisambiguatorPrefixRule37);\nrules.push(pr.DisambiguatorPrefixRule38);\nrules.push(pr.DisambiguatorPrefixRule39);\nrules.push(pr.DisambiguatorPrefixRule40);\nrules.push(pr.DisambiguatorPrefixRule41);\nrules.push(pr.DisambiguatorPrefixRule42);\nPrefixRules.rules = rules;","map":{"version":3,"names":["Removal","require","dictionary","loadDictionary","fin","Set","filter","Boolean","find","word","has","PrefixRules","removal","undefined","currentWord","runDisambiguator","disambiguateRules","result","i","createResultObject","type","removedPart","replace","RemovePlainPrefix","disambiguateRule1A","matches","match","disambiguateRule1B","DisambiguatorPrefixRule1","push","disambiguateRule2","DisambiguatorPrefixRule2","disambiguateRule3","DisambiguatorPrefixRule3","disambiguateRule4","DisambiguatorPrefixRule4","disambiguateRule5","DisambiguatorPrefixRule5","disambiguateRule6a","disambiguateRule6b","DisambiguatorPrefixRule6","disambiguateRule7","DisambiguatorPrefixRule7","disambiguateRule8","DisambiguatorPrefixRule8","disambiguateRule9","DisambiguatorPrefixRule9","disambiguateRule10","DisambiguatorPrefixRule10","disambiguateRule11","DisambiguatorPrefixRule11","disambiguateRule12","DisambiguatorPrefixRule12","disambiguateRule13a","disambiguateRule13b","DisambiguatorPrefixRule13","disambiguateRule14","DisambiguatorPrefixRule14","disambiguateRule15a","disambiguateRule15b","DisambiguatorPrefixRule15","disambiguateRule16","DisambiguatorPrefixRule16","disambiguateRule17a","disambiguateRule17b","disambiguateRule17c","disambiguateRule17d","DisambiguatorPrefixRule17","disambiguateRule18a","disambiguateRule18b","DisambiguatorPrefixRule18","disambiguateRule19","DisambiguatorPrefixRule19","disambiguateRule20","DisambiguatorPrefixRule20","disambiguateRule21a","disambiguateRule21b","DisambiguatorPrefixRule21","disambiguateRule23","DisambiguatorPrefixRule23","disambiguateRule24","DisambiguatorPrefixRule24","disambiguateRule25","DisambiguatorPrefixRule25","disambiguateRule26a","disambiguateRule26b","DisambiguatorPrefixRule26","disambiguateRule27","DisambiguatorPrefixRule27","disambiguateRule28a","disambiguateRule28b","DisambiguatorPrefixRule28","disambiguateRule29","DisambiguatorPrefixRule29","disambiguateRule30a","disambiguateRule30b","disambiguateRule30c","DisambiguatorPrefixRule30","disambiguateRule31a","disambiguateRule31b","DisambiguatorPrefixRule31","disambiguateRule32","DisambiguatorPrefixRule32","disambiguateRule34","DisambiguatorPrefixRule34","disambiguateRule35","DisambiguatorPrefixRule35","disambiguateRule36","DisambiguatorPrefixRule36","disambiguateRule37a","disambiguateRule37b","DisambiguatorPrefixRule37","disambiguateRule38a","disambiguateRule38b","DisambiguatorPrefixRule38","disambiguateRule39a","disambiguateRule39b","DisambiguatorPrefixRule39","disambiguateRule40a","disambiguateRule40b","DisambiguatorPrefixRule40","disambiguateRule41","DisambiguatorPrefixRule41","disambiguateRule42","DisambiguatorPrefixRule42","module","exports","rules","pr"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/natural/lib/natural/stemmers/indonesian/prefix_rules.js"],"sourcesContent":["/*\nCopyright (c) 2017, Alif Bhaskoro, Andy Librian, R. Kukuh (Reimplemented from https://github.com/sastrawi/sastrawi)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n// a list of commonly used words that have little meaning and can be excluded\n// from analysis.\n\nconst Removal = require('./removal')\n\n// Make global variable for dictionary\nconst dictionary = loadDictionary()\n\nfunction loadDictionary () {\n  const fin = require('./data/kata-dasar.json')\n  return new Set(fin.filter(Boolean))\n}\n\n// Find certain word in dictionary\nfunction find (word) {\n  return dictionary.has(word)\n}\n\nfunction PrefixRules () {\n  const PrefixRules = this\n\n  this.removal = undefined\n  this.currentWord = undefined\n\n  // Run the array of disambiguate rules on input word\n  function runDisambiguator (disambiguateRules, word) {\n    let result\n\n    for (const i in disambiguateRules) {\n      result = disambiguateRules[i](word)\n      if (find(result)) {\n        break\n      }\n    }\n\n    if (result === undefined) {\n      this.currentWord = word\n      this.removal = undefined\n      return this\n    }\n\n    return createResultObject(result, word, 'DP')\n  }\n\n  function createResultObject (result, word, type) {\n    const removedPart = word.replace(result, '')\n    const removal = new Removal(word, result, removedPart, type)\n\n    this.removal = removal\n    this.currentWord = result\n\n    return this\n  }\n\n  PrefixRules.RemovePlainPrefix = function (word) {\n    const result = word.replace(/^(di|ke|se)/, '')\n    if (result !== word) {\n      const removedPart = word.replace(result, '')\n\n      const removal = new Removal(word, result, removedPart, 'DP')\n\n      this.removal = removal\n    } else {\n      this.removal = undefined\n    }\n    this.currentWord = result\n    return this\n  }\n\n  // RULE 1\n  function disambiguateRule1A (word) {\n    // Rule 1a : berV -> ber-V\n    const matches = word.match(/^ber([aiueo].*)$/)\n    if (matches) {\n      return matches[1]\n    }\n  }\n\n  function disambiguateRule1B (word) {\n    // Rule 1b : berV -> be-rV\n    const matches = word.match(/^ber([aiueo].*)$/)\n    if (matches) {\n      return 'r' + matches[1]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule1 = function (word) {\n    // Push rules 1A & 1B\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule1A)\n    disambiguateRules.push(disambiguateRule1B)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 2\n  function disambiguateRule2 (word) {\n    // Rule 2 : berCAP -> ber-CAP where C != 'r' AND P != 'er'\n    const matches = word.match(/^ber([bcdfghjklmnpqrstvwxyz])([a-z])(.*)/)\n    if (matches) {\n      if (matches[3].match(/^er(.*)$/)) {\n        return\n      }\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule2 = function (word) {\n    // Push rule 2\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule2)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 3\n  function disambiguateRule3 (word) {\n    // Rule 3 : berCAerV -> ber-CAerV where C != 'r'\n    const matches = word.match(/ber([bcdfghjklmnpqrstvwxyz])([a-z])er([aiueo])(.*)/)\n    if (matches) {\n      if (matches[1] === 'r') {\n        return\n      }\n      return matches[1] + matches[2] + 'er' + matches[3] + matches[4]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule3 = function (word) {\n    // Push rule 3\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule3)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 4\n  function disambiguateRule4 (word) {\n    // Rule 4 : belajar -> ajar\n    if (word === 'belajar') {\n      return 'ajar'\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule4 = function (word) {\n    // Push rule 4\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule4)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 5\n  function disambiguateRule5 (word) {\n    // Rule 5 : beC1erC2 -> be-C1erC2 where C1 != 'r'\n    const matches = word.match(/be([bcdfghjklmnpqstvwxyz])(er[bcdfghjklmnpqrstvwxyz])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule5 = function (word) {\n    // Push rule 5\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule5)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 6\n  function disambiguateRule6a (word) {\n    // Rule 6a : terV -> ter-V\n    const matches = word.match(/^ter([aiueo].*)$/)\n    if (matches) {\n      return matches[1]\n    }\n  }\n\n  function disambiguateRule6b (word) {\n    // Rule 6b : terV -> te-rV\n    const matches = word.match(/^ter([aiueo].*)$/)\n    if (matches) {\n      return 'r' + matches[1]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule6 = function (word) {\n    // Push rule 6\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule6a)\n    disambiguateRules.push(disambiguateRule6b)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 7\n  function disambiguateRule7 (word) {\n    // Rule 7 : terCerv -> ter-CerV where C != 'r'\n    const matches = word.match(/^ter([bcdfghjklmnpqrstvwxyz])er([aiueo].*)$/)\n    if (matches) {\n      if (matches[1] === 'r') {\n        return\n      }\n      return matches[1] + 'er' + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule7 = function (word) {\n    // Push rule 7\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule7)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 8\n  function disambiguateRule8 (word) {\n    // Rule 8 : terCP -> ter-CP where C != 'r' and P != 'er'\n    const matches = word.match(/^ter([bcdfghjklmnpqrstvwxyz])(.*)$/)\n    if (matches) {\n      if (matches[1] === 'r' || matches[2].match(/^er(.*)$/)) {\n        return\n      }\n      return matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule8 = function (word) {\n    // Push rule 8\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule8)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 9\n  function disambiguateRule9 (word) {\n    // Rule 9 : te-C1erC2 -> te-C1erC2 where C1 != 'r'\n    const matches = word.match(/^te([bcdfghjklmnpqrstvwxyz])er([bcdfghjklmnpqrstvwxyz])(.*)$/)\n    if (matches) {\n      if (matches[1] === 'r') {\n        return\n      }\n      return matches[1] + 'er' + matches[2] + matches[3]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule9 = function (word) {\n    // Push rule 9\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule9)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 10\n  function disambiguateRule10 (word) {\n    // Rule 10 : me{l|r|w|y}V -> me-{l|r|w|y}V\n    const matches = word.match(/^me([lrwy])([aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule10 = function (word) {\n    // Push rule 10\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule10)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 11\n  function disambiguateRule11 (word) {\n    // Rule 11 : mem{b|f|v} -> mem-{b|f|v}\n    const matches = word.match(/^mem([bfv])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule11 = function (word) {\n    // Push rule 11\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule11)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 12\n  function disambiguateRule12 (word) {\n    // Nazief and Adriani Rule 12 : beC1erC2 -> be-C1erC2 where C1 != 'r'\n    // Modified by Jelita Asian's CS Rule 12 : mempe -> mem-pe to stem mempengaruhi\n    const matches = word.match(/^mempe(.*)$/)\n    if (matches) {\n      return 'pe' + matches[1]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule12 = function (word) {\n    // Push rule 12\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule12)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 13\n  function disambiguateRule13a (word) {\n    // Rule 13a : mem{rV|V} -> me-m{rV|V}\n    const matches = word.match(/^mem([aiueo])(.*)$/)\n    if (matches) {\n      return 'm' + matches[1] + matches[2]\n    }\n  }\n\n  function disambiguateRule13b (word) {\n    // Rule 13b : mem{rV|V} -> me-p{rV|V}\n    const matches = word.match(/^mem([aiueo])(.*)$/)\n    if (matches) {\n      return 'p' + matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule13 = function (word) {\n    // Push rule 13\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule13a)\n    disambiguateRules.push(disambiguateRule13b)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 14\n  function disambiguateRule14 (word) {\n    /* Rule 14 modified by Andy Librian : men{c|d|j|s|t|z} -> men-{c|d|j|s|t|z}\n        in order to stem mentaati\n\n        Rule 14 modified by ECS: men{c|d|j|s|z} -> men-{c|d|j|s|z}\n        in order to stem mensyaratkan, mensyukuri\n\n        Original CS Rule no 14 was : men{c|d|j|z} -> men-{c|d|j|z} */\n    const matches = word.match(/^men([cdjstz])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule14 = function (word) {\n    // Push rule 14\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule14)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 15\n  function disambiguateRule15a (word) {\n    // Rule 15a : men{V} -> me-n{V}\n    const matches = word.match(/^men([aiueo])(.*)$/)\n    if (matches) {\n      return 'n' + matches[1] + matches[2]\n    }\n  }\n\n  function disambiguateRule15b (word) {\n    // Rule 15b : men{V} -> me-t{V}\n    const matches = word.match(/^men([aiueo])(.*)$/)\n    if (matches) {\n      return 't' + matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule15 = function (word) {\n    // Push rule 15\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule15a)\n    disambiguateRules.push(disambiguateRule15b)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 16\n  function disambiguateRule16 (word) {\n    // Original Nazief and Adriani's Rule 16 : meng{g|h|q} -> meng-{g|h|q}\n    // Modified Jelita Asian's CS Rule 16 : meng{g|h|q|k} -> meng-{g|h|q|k} to stem mengkritik\n    const matches = word.match(/^meng([g|h|q|k])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule16 = function (word) {\n    // Push rule 16\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule16)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 17\n  function disambiguateRule17a (word) {\n    // Rule 17a : mengV -> meng-V\n    const matches = word.match(/^meng([aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2]\n    }\n  }\n\n  function disambiguateRule17b (word) {\n    // Rule 17b : mengV -> meng-kV\n    const matches = word.match(/^meng([aiueo])(.*)$/)\n    if (matches) {\n      return 'k' + matches[1] + matches[2]\n    }\n  }\n\n  function disambiguateRule17c (word) {\n    // Rule 17c : mengV -> meng-V- where V = 'e'\n    const matches = word.match(/^menge(.*)$/)\n    if (matches) {\n      return matches[1]\n    }\n  }\n\n  function disambiguateRule17d (word) {\n    // Rule 17d : mengV -> me-ngV\n    const matches = word.match(/^meng([aiueo])(.*)$/)\n    if (matches) {\n      return 'ng' + matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule17 = function (word) {\n    // Push rule 17\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule17a)\n    disambiguateRules.push(disambiguateRule17b)\n    disambiguateRules.push(disambiguateRule17c)\n    disambiguateRules.push(disambiguateRule17d)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 18\n  function disambiguateRule18a (word) {\n    // Rule 18a : menyV -> me-nyV to stem menyala -> nyala\n    const matches = word.match(/^meny([aiueo])(.*)$/)\n    if (matches) {\n      return 'ny' + matches[1] + matches[2]\n    }\n  }\n\n  function disambiguateRule18b (word) {\n    // Original Rule 18b : menyV -> meny-sV\n    // Modified by CC (shifted into 18b, see also 18a)\n    const matches = word.match(/^meny([aiueo])(.*)$/)\n    if (matches) {\n      return 's' + matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule18 = function (word) {\n    // Push rule 18\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule18a)\n    disambiguateRules.push(disambiguateRule18b)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 19\n  function disambiguateRule19 (word) {\n    // Original Rule 19 : mempV -> mem-pV where V != 'e'\n    // Modified Rule 19 by ECS : mempA -> mem-pA where A != 'e' in order to stem memproteksi\n    const matches = word.match(/^memp([abcdfghijklmopqrstuvwxyz])(.*)$/)\n    if (matches) {\n      return 'p' + matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule19 = function (word) {\n    // Push rule 19\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule19)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 20\n  function disambiguateRule20 (word) {\n    // Rule 20 : pe{w|y}V -> pe-{w|y}V\n    const matches = word.match(/^pe([wy])([aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule20 = function (word) {\n    // Push rule 20\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule20)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 21\n  function disambiguateRule21a (word) {\n    // Rule 21a : perV -> per-V\n    const matches = word.match(/^per([aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2]\n    }\n  }\n\n  function disambiguateRule21b (word) {\n    // Rule 21b : perV -> pe-rV\n    const matches = word.match(/^pe(r[aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule21 = function (word) {\n    // Push rule 21\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule21a)\n    disambiguateRules.push(disambiguateRule21b)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 23\n  function disambiguateRule23 (word) {\n    // Rule 23 : perCAP -> per-CAP where C != 'r' AND P != 'er'\n    const matches = word.match(/^per([bcdfghjklmnpqrstvwxyz])([a-z])(.*)$/)\n    if (matches) {\n      if (matches[3].match(/^er(.*)$/)) {\n        return\n      }\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule23 = function (word) {\n    // Push rule 23\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule23)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 24\n  function disambiguateRule24 (word) {\n    // Rule 24 : perCAerV -> per-CAerV where C != 'r'\n    const matches = word.match(/^per([bcdfghjklmnpqrstvwxyz])([a-z])er([aiueo])(.*)$/)\n    if (matches) {\n      if (matches[1] === 'r') {\n        return\n      }\n      return matches[1] + matches[2] + 'er' + matches[3] + matches[4]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule24 = function (word) {\n  // Push rule 24\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule24)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 25\n  function disambiguateRule25 (word) {\n    // Rule 25 : pem{b|f|v} -> pem-{b|f|v}\n    const matches = word.match(/^pem([bfv])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule25 = function (word) {\n    // Push rule 25\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule25)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 26\n  function disambiguateRule26a (word) {\n    // Rule 26a : pem{rV|V} -> pe-m{rV|V}\n    const matches = word.match(/^pem([aiueo])(.*)$/)\n    if (matches) {\n      return 'm' + matches[1] + matches[2]\n    }\n  }\n\n  function disambiguateRule26b (word) {\n    // Rule 26b : pem{rV|V} -> pe-p{rV|V}\n    const matches = word.match(/^pem([aiueo])(.*)$/)\n    if (matches) {\n      return 'p' + matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule26 = function (word) {\n    // Push rule 26\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule26a)\n    disambiguateRules.push(disambiguateRule26b)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 27\n  function disambiguateRule27 (word) {\n    // Rule 27 : pen{c|d|j|s|t|z} -> pen-{c|d|j|s|t|z}\n    const matches = word.match(/^pen([cdjstz])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule27 = function (word) {\n    // Push rule 27\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule27)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 28\n  function disambiguateRule28a (word) {\n    // Rule 28a : pen{V} -> pe-n{V}\n    const matches = word.match(/^pen([aiueo])(.*)$/)\n    if (matches) {\n      return 'n' + matches[1] + matches[2]\n    }\n  }\n\n  function disambiguateRule28b (word) {\n    // Rule 28b : pen{V} -> pe-t{V}\n    const matches = word.match(/^pen([aiueo])(.*)$/)\n    if (matches) {\n      return 't' + matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule28 = function (word) {\n    // Push rule 28\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule28a)\n    disambiguateRules.push(disambiguateRule28b)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 29\n  function disambiguateRule29 (word) {\n    // Rule 29 by ECS : pengC -> peng-C\n    const matches = word.match(/^peng([bcdfghjklmnpqrstvwxyz])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule29 = function (word) {\n    // Push rule 29\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule29)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 30\n  function disambiguateRule30a (word) {\n    // Rule 30a : pengV -> peng-V\n    const matches = word.match(/^peng([aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2]\n    }\n  }\n\n  function disambiguateRule30b (word) {\n    // Rule 30b : pengV -> peng-kV\n    const matches = word.match(/^peng([aiueo])(.*)$/)\n    if (matches) {\n      return 'k' + matches[1] + matches[2]\n    }\n  }\n\n  function disambiguateRule30c (word) {\n    // Rule 30c : pengV -> pengV- where V = 'e'\n    const matches = word.match(/^penge(.*)$/)\n    if (matches) {\n      return matches[1]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule30 = function (word) {\n    // Push rule 30\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule30a)\n    disambiguateRules.push(disambiguateRule30b)\n    disambiguateRules.push(disambiguateRule30c)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 31\n  function disambiguateRule31a (word) {\n    // Rule 31a : penyV -> pe-nyV\n    const matches = word.match(/^peny([aiueo])(.*)$/)\n    if (matches) {\n      return 'ny' + matches[1] + matches[2]\n    }\n  }\n\n  function disambiguateRule31b (word) {\n    // Original Rule 31 : penyV -> peny-sV\n    const matches = word.match(/^peny([aiueo])(.*)$/)\n    if (matches) {\n      return 's' + matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule31 = function (word) {\n    // Push rule 31\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule31a)\n    disambiguateRules.push(disambiguateRule31b)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 32\n  function disambiguateRule32 (word) {\n    // Rule 32 : pelV -> pe-lV except pelajar -> ajar\n    if (word === 'pelajar') {\n      return 'ajar'\n    }\n    const matches = word.match(/^pe(l[aiueo])(.*)/)\n    if (matches) {\n      return matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule32 = function (word) {\n    // Push rule 32\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule32)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 34\n  function disambiguateRule34 (word) {\n    // Rule 34 : peCP -> pe-CP where C != {r|w|y|l|m|n} and P != 'er'\n    const matches = word.match(/^pe([bcdfghjklmnpqrstvwxyz])(.*)$/)\n    if (matches) {\n      if (matches[2].match(/^er(.*)$/)) {\n        return\n      }\n      return matches[1] + matches[2]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule34 = function (word) {\n    // Push rule 34\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule34)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 35\n  function disambiguateRule35 (word) {\n    // Rule 35 : terC1erC2 -> ter-C1erC2 where C1 != {r}\n    const matches = word.match(/^ter([bcdfghjkpqstvxz])(er[bcdfghjklmnpqrstvwxyz])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule35 = function (word) {\n    // Push rule 35\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule35)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 36\n  function disambiguateRule36 (word) {\n    // Rule 36 : peC1erC2 -> pe-C1erC2 where C1 != {r|w|y|l|m|n}\n    const matches = word.match(/^pe([bcdfghjkpqstvxz])(er[bcdfghjklmnpqrstvwxyz])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule36 = function (word) {\n    // Push rule 36\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule36)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 37\n  function disambiguateRule37a (word) {\n    // Rule 37a : CerV -> CerV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])(er[aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  function disambiguateRule37b (word) {\n    // Rule 37b : CerV -> CV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])er([aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule37 = function (word) {\n    // Push rule 37\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule37a)\n    disambiguateRules.push(disambiguateRule37b)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 38\n  function disambiguateRule38a (word) {\n    // Rule 38a : CelV -> CelV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])(el[aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  function disambiguateRule38b (word) {\n    // Rule 38b : CelV -> CV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])el([aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule38 = function (word) {\n    // Push rule 38\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule38a)\n    disambiguateRules.push(disambiguateRule38b)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 39\n  function disambiguateRule39a (word) {\n    // Rule 39a : CemV -> CemV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])(em[aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  function disambiguateRule39b (word) {\n    // Rule 39b : CemV -> CV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])em([aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule39 = function (word) {\n    // Push rule 39\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule39a)\n    disambiguateRules.push(disambiguateRule39b)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 40\n  function disambiguateRule40a (word) {\n    // Rule 40a : CinV -> CinV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])(in[aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  function disambiguateRule40b (word) {\n    // Rule 40b : CinV -> CV\n    const matches = word.match(/^([bcdfghjklmnpqrstvwxyz])in([aiueo])(.*)$/)\n    if (matches) {\n      return matches[1] + matches[2] + matches[3]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule40 = function (word) {\n    // Push rule 40\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule40a)\n    disambiguateRules.push(disambiguateRule40b)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 41\n  function disambiguateRule41 (word) {\n    // Rule 41 : kuA -> ku-A\n    const matches = word.match(/^ku(.*)$/)\n    if (matches) {\n      return matches[1]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule41 = function (word) {\n    // Push rule 41\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule41)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n\n  // RULE 42\n  function disambiguateRule42 (word) {\n    // Rule 42 : kauA -> kau-A\n    const matches = word.match(/^kau(.*)$/)\n    if (matches) {\n      return matches[1]\n    }\n  }\n\n  PrefixRules.DisambiguatorPrefixRule42 = function (word) {\n    // Push rule 42\n    const disambiguateRules = []\n    disambiguateRules.push(disambiguateRule42)\n\n    return runDisambiguator(disambiguateRules, word)\n  }\n}\n\nmodule.exports = PrefixRules\n\n// Initalize prefix rules array\nconst rules = []\nconst pr = new PrefixRules()\n\n// Push all rules\nrules.push(pr.RemovePlainPrefix)\nrules.push(pr.DisambiguatorPrefixRule1)\nrules.push(pr.DisambiguatorPrefixRule2)\nrules.push(pr.DisambiguatorPrefixRule3)\nrules.push(pr.DisambiguatorPrefixRule4)\nrules.push(pr.DisambiguatorPrefixRule5)\nrules.push(pr.DisambiguatorPrefixRule6)\nrules.push(pr.DisambiguatorPrefixRule7)\nrules.push(pr.DisambiguatorPrefixRule8)\nrules.push(pr.DisambiguatorPrefixRule9)\nrules.push(pr.DisambiguatorPrefixRule10)\nrules.push(pr.DisambiguatorPrefixRule11)\nrules.push(pr.DisambiguatorPrefixRule12)\nrules.push(pr.DisambiguatorPrefixRule13)\nrules.push(pr.DisambiguatorPrefixRule14)\nrules.push(pr.DisambiguatorPrefixRule15)\nrules.push(pr.DisambiguatorPrefixRule16)\nrules.push(pr.DisambiguatorPrefixRule17)\nrules.push(pr.DisambiguatorPrefixRule18)\nrules.push(pr.DisambiguatorPrefixRule19)\nrules.push(pr.DisambiguatorPrefixRule20)\nrules.push(pr.DisambiguatorPrefixRule21)\nrules.push(pr.DisambiguatorPrefixRule23)\nrules.push(pr.DisambiguatorPrefixRule24)\nrules.push(pr.DisambiguatorPrefixRule25)\nrules.push(pr.DisambiguatorPrefixRule26)\nrules.push(pr.DisambiguatorPrefixRule27)\nrules.push(pr.DisambiguatorPrefixRule28)\nrules.push(pr.DisambiguatorPrefixRule29)\nrules.push(pr.DisambiguatorPrefixRule30)\nrules.push(pr.DisambiguatorPrefixRule31)\nrules.push(pr.DisambiguatorPrefixRule32)\nrules.push(pr.DisambiguatorPrefixRule34)\nrules.push(pr.DisambiguatorPrefixRule35)\nrules.push(pr.DisambiguatorPrefixRule36)\nrules.push(pr.DisambiguatorPrefixRule37)\nrules.push(pr.DisambiguatorPrefixRule38)\nrules.push(pr.DisambiguatorPrefixRule39)\nrules.push(pr.DisambiguatorPrefixRule40)\nrules.push(pr.DisambiguatorPrefixRule41)\nrules.push(pr.DisambiguatorPrefixRule42)\n\nPrefixRules.rules = rules\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}