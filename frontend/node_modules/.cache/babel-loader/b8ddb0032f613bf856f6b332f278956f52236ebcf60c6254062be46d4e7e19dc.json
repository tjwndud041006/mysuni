{"ast":null,"code":"import canBe from './canBe.js';\nconst tagger = function (list, document, world) {\n  const {\n    model,\n    methods\n  } = world;\n  const {\n    getDoc,\n    setTag,\n    unTag\n  } = methods.one;\n  const looksPlural = methods.two.looksPlural;\n  if (list.length === 0) {\n    return list;\n  }\n  // some logging for debugging\n  const env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env;\n  if (env.DEBUG_TAGS) {\n    console.log(`\\n\\n  \\x1b[32mâ†’ ${list.length} post-tagger:\\x1b[0m`); //eslint-disable-line\n  }\n  return list.map(todo => {\n    if (!todo.tag && !todo.chunk && !todo.unTag) {\n      return;\n    }\n    let reason = todo.reason || todo.match;\n    let terms = getDoc([todo.pointer], document)[0];\n    // handle 'safe' tag\n    if (todo.safe === true) {\n      // check for conflicting tags\n      if (canBe(terms, todo.tag, model) === false) {\n        return;\n      }\n      // dont tag half of a hyphenated word\n      if (terms[terms.length - 1].post === '-') {\n        return;\n      }\n    }\n    if (todo.tag !== undefined) {\n      setTag(terms, todo.tag, world, todo.safe, `[post] '${reason}'`);\n      // quick and dirty plural tagger ðŸ˜•\n      if (todo.tag === 'Noun' && looksPlural) {\n        let term = terms[terms.length - 1];\n        if (looksPlural(term.text)) {\n          setTag([term], 'Plural', world, todo.safe, 'quick-plural');\n        } else {\n          setTag([term], 'Singular', world, todo.safe, 'quick-singular');\n        }\n      }\n      // allow freezing this match, too\n      if (todo.freeze === true) {\n        terms.forEach(term => term.frozen = true);\n      }\n    }\n    if (todo.unTag !== undefined) {\n      unTag(terms, todo.unTag, world, todo.safe, reason);\n    }\n    // allow setting chunks, too\n    if (todo.chunk) {\n      terms.forEach(t => t.chunk = todo.chunk);\n    }\n  });\n};\nexport default tagger;","map":{"version":3,"names":["canBe","tagger","list","document","world","model","methods","getDoc","setTag","unTag","one","looksPlural","two","length","env","process","self","DEBUG_TAGS","console","log","map","todo","tag","chunk","reason","match","terms","pointer","safe","post","undefined","term","text","freeze","forEach","frozen","t"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/sweep/methods/tagger/index.js"],"sourcesContent":["import canBe from './canBe.js'\n\nconst tagger = function (list, document, world) {\n  const { model, methods } = world\n  const { getDoc, setTag, unTag } = methods.one\n  const looksPlural = methods.two.looksPlural\n  if (list.length === 0) {\n    return list\n  }\n  // some logging for debugging\n  const env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env\n  if (env.DEBUG_TAGS) {\n    console.log(`\\n\\n  \\x1b[32mâ†’ ${list.length} post-tagger:\\x1b[0m`) //eslint-disable-line\n  }\n  return list.map(todo => {\n    if (!todo.tag && !todo.chunk && !todo.unTag) {\n      return\n    }\n    let reason = todo.reason || todo.match\n    let terms = getDoc([todo.pointer], document)[0]\n    // handle 'safe' tag\n    if (todo.safe === true) {\n      // check for conflicting tags\n      if (canBe(terms, todo.tag, model) === false) {\n        return\n      }\n      // dont tag half of a hyphenated word\n      if (terms[terms.length - 1].post === '-') {\n        return\n      }\n    }\n    if (todo.tag !== undefined) {\n      setTag(terms, todo.tag, world, todo.safe, `[post] '${reason}'`)\n      // quick and dirty plural tagger ðŸ˜•\n      if (todo.tag === 'Noun' && looksPlural) {\n        let term = terms[terms.length - 1]\n        if (looksPlural(term.text)) {\n          setTag([term], 'Plural', world, todo.safe, 'quick-plural')\n        } else {\n          setTag([term], 'Singular', world, todo.safe, 'quick-singular')\n        }\n      }\n      // allow freezing this match, too\n      if (todo.freeze === true) {\n        terms.forEach(term => (term.frozen = true))\n      }\n    }\n    if (todo.unTag !== undefined) {\n      unTag(terms, todo.unTag, world, todo.safe, reason)\n    }\n    // allow setting chunks, too\n    if (todo.chunk) {\n      terms.forEach(t => (t.chunk = todo.chunk))\n    }\n  })\n}\nexport default tagger\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}