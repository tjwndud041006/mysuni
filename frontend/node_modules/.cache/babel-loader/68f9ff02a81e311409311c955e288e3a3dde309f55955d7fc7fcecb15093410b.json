{"ast":null,"code":"// derive clever things from our lexicon key-value pairs\nconst expand = function (words) {\n  // const { methods, model } = world\n  let lex = {};\n  // console.log('start:', Object.keys(lex).length)\n  let _multi = {};\n  // go through each word in this key-value obj:\n  Object.keys(words).forEach(word => {\n    let tag = words[word];\n    // normalize lexicon a little bit\n    word = word.toLowerCase().trim();\n    word = word.replace(/'s\\b/, '');\n    // cache multi-word terms\n    let split = word.split(/ /);\n    if (split.length > 1) {\n      // prefer longer ones\n      if (_multi[split[0]] === undefined || split.length > _multi[split[0]]) {\n        _multi[split[0]] = split.length;\n      }\n    }\n    lex[word] = lex[word] || tag;\n  });\n  // cleanup\n  delete lex[''];\n  delete lex[null];\n  delete lex[' '];\n  return {\n    lex,\n    _multi\n  };\n};\nexport default expand;","map":{"version":3,"names":["expand","words","lex","_multi","Object","keys","forEach","word","tag","toLowerCase","trim","replace","split","length","undefined"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/lexicon/methods/expand.js"],"sourcesContent":["// derive clever things from our lexicon key-value pairs\nconst expand = function (words) {\n  // const { methods, model } = world\n  let lex = {}\n  // console.log('start:', Object.keys(lex).length)\n  let _multi = {}\n  // go through each word in this key-value obj:\n  Object.keys(words).forEach(word => {\n    let tag = words[word]\n    // normalize lexicon a little bit\n    word = word.toLowerCase().trim()\n    word = word.replace(/'s\\b/, '')\n    // cache multi-word terms\n    let split = word.split(/ /)\n    if (split.length > 1) {\n      // prefer longer ones\n      if (_multi[split[0]] === undefined || split.length > _multi[split[0]]) {\n        _multi[split[0]] = split.length\n      }\n    }\n    lex[word] = lex[word] || tag\n  })\n  // cleanup\n  delete lex['']\n  delete lex[null]\n  delete lex[' ']\n  return { lex, _multi }\n}\nexport default expand\n"],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAC9B;EACA,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZ;EACA,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf;EACAC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,OAAO,CAACC,IAAI,IAAI;IACjC,IAAIC,GAAG,GAAGP,KAAK,CAACM,IAAI,CAAC;IACrB;IACAA,IAAI,GAAGA,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IAChCH,IAAI,GAAGA,IAAI,CAACI,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;IAC/B;IACA,IAAIC,KAAK,GAAGL,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC;IAC3B,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACpB;MACA,IAAIV,MAAM,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC,KAAKE,SAAS,IAAIF,KAAK,CAACC,MAAM,GAAGV,MAAM,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QACrET,MAAM,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAACC,MAAM;MACjC;IACF;IACAX,GAAG,CAACK,IAAI,CAAC,GAAGL,GAAG,CAACK,IAAI,CAAC,IAAIC,GAAG;EAC9B,CAAC,CAAC;EACF;EACA,OAAON,GAAG,CAAC,EAAE,CAAC;EACd,OAAOA,GAAG,CAAC,IAAI,CAAC;EAChB,OAAOA,GAAG,CAAC,GAAG,CAAC;EACf,OAAO;IAAEA,GAAG;IAAEC;EAAO,CAAC;AACxB,CAAC;AACD,eAAeH,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}