{"ast":null,"code":"// for: ['we', 'have']\n// a match for \"we have\" should work as normal\n// but matching \"we've\" should skip over implict terms\nconst contractionSkip = function (state) {\n  let term = state.terms[state.t];\n  let reg = state.regs[state.r];\n  // did we match the first part of a contraction?\n  if (term.implicit && state.terms[state.t + 1]) {\n    let nextTerm = state.terms[state.t + 1];\n    // ensure next word is implicit\n    if (!nextTerm.implicit) {\n      return;\n    }\n    // we matched \"we've\" - skip-over [we, have]\n    if (reg.word === term.normal) {\n      state.t += 1;\n    }\n    // also skip for @hasContraction\n    if (reg.method === 'hasContraction') {\n      state.t += 1;\n    }\n  }\n};\nexport default contractionSkip;","map":{"version":3,"names":["contractionSkip","state","term","terms","t","reg","regs","r","implicit","nextTerm","word","normal","method"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/match/methods/match/steps/contraction-skip.js"],"sourcesContent":["// for: ['we', 'have']\n// a match for \"we have\" should work as normal\n// but matching \"we've\" should skip over implict terms\nconst contractionSkip = function (state) {\n  let term = state.terms[state.t]\n  let reg = state.regs[state.r]\n  // did we match the first part of a contraction?\n  if (term.implicit && state.terms[state.t + 1]) {\n    let nextTerm = state.terms[state.t + 1]\n    // ensure next word is implicit\n    if (!nextTerm.implicit) {\n      return\n    }\n    // we matched \"we've\" - skip-over [we, have]\n    if (reg.word === term.normal) {\n      state.t += 1\n    }\n    // also skip for @hasContraction\n    if (reg.method === 'hasContraction') {\n      state.t += 1\n    }\n  }\n}\nexport default contractionSkip"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,eAAe,GAAG,SAAAA,CAAUC,KAAK,EAAE;EACvC,IAAIC,IAAI,GAAGD,KAAK,CAACE,KAAK,CAACF,KAAK,CAACG,CAAC,CAAC;EAC/B,IAAIC,GAAG,GAAGJ,KAAK,CAACK,IAAI,CAACL,KAAK,CAACM,CAAC,CAAC;EAC7B;EACA,IAAIL,IAAI,CAACM,QAAQ,IAAIP,KAAK,CAACE,KAAK,CAACF,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,EAAE;IAC7C,IAAIK,QAAQ,GAAGR,KAAK,CAACE,KAAK,CAACF,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC;IACvC;IACA,IAAI,CAACK,QAAQ,CAACD,QAAQ,EAAE;MACtB;IACF;IACA;IACA,IAAIH,GAAG,CAACK,IAAI,KAAKR,IAAI,CAACS,MAAM,EAAE;MAC5BV,KAAK,CAACG,CAAC,IAAI,CAAC;IACd;IACA;IACA,IAAIC,GAAG,CAACO,MAAM,KAAK,gBAAgB,EAAE;MACnCX,KAAK,CAACG,CAAC,IAAI,CAAC;IACd;EACF;AACF,CAAC;AACD,eAAeJ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}