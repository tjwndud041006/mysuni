{"ast":null,"code":"//ain't -> are/is not\nconst apostropheT = function (terms, i) {\n  if (terms[i].normal === \"ain't\" || terms[i].normal === 'aint') {\n    return null; //do this in ./two/\n  }\n  let before = terms[i].normal.replace(/n't/, '');\n  return [before, 'not'];\n};\nexport default apostropheT;","map":{"version":3,"names":["apostropheT","terms","i","normal","before","replace"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/contraction-one/compute/contractions/apostrophe-t.js"],"sourcesContent":["\n//ain't -> are/is not\nconst apostropheT = function (terms, i) {\n  if (terms[i].normal === \"ain't\" || terms[i].normal === 'aint') {\n    return null //do this in ./two/\n  }\n  let before = terms[i].normal.replace(/n't/, '')\n  return [before, 'not']\n}\n\nexport default apostropheT\n"],"mappings":"AACA;AACA,MAAMA,WAAW,GAAG,SAAAA,CAAUC,KAAK,EAAEC,CAAC,EAAE;EACtC,IAAID,KAAK,CAACC,CAAC,CAAC,CAACC,MAAM,KAAK,OAAO,IAAIF,KAAK,CAACC,CAAC,CAAC,CAACC,MAAM,KAAK,MAAM,EAAE;IAC7D,OAAO,IAAI,EAAC;EACd;EACA,IAAIC,MAAM,GAAGH,KAAK,CAACC,CAAC,CAAC,CAACC,MAAM,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAC/C,OAAO,CAACD,MAAM,EAAE,KAAK,CAAC;AACxB,CAAC;AAED,eAAeJ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}