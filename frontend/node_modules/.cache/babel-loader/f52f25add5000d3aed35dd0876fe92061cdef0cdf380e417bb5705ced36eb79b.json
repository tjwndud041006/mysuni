{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst franc = require(\"franc\");\nconst languageNameMapping = {\n  deu: 'german',\n  eng: 'english',\n  ita: 'italian',\n  nld: 'dutch',\n  por: 'portuguese',\n  spa: 'spanish',\n  swh: 'swedish'\n};\nfunction guessLanguage(text) {\n  return languageNameMapping[franc(text)] || 'english';\n}\nexports.default = guessLanguage;","map":{"version":3,"names":["franc","require","languageNameMapping","deu","eng","ita","nld","por","spa","swh","guessLanguage","text","exports","default"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/rake-js/src/lib/tools/guess_language.ts"],"sourcesContent":["/**\n * This module can be used to remove non-word characters and non-content words\n * from strings. It is able to detect the natural language on its own.\n */\n\nimport * as franc from 'franc'\n\n// currently supported natural languages\nexport type languageName =\n  | 'german'\n  | 'english'\n  | 'italian'\n  | 'dutch'\n  | 'portugese'\n  | 'spanish'\n  | 'swedish'\n\n// just a few language codes of 'franc' mapped to 'nltk-stopwords'-keys for now\nconst languageNameMapping = {\n  deu: 'german',\n  eng: 'english',\n  ita: 'italian',\n  nld: 'dutch',\n  por: 'portuguese',\n  spa: 'spanish',\n  swh: 'swedish',\n}\n\n// detect the language of a given string or word array\nexport default function guessLanguage(text: string): languageName {\n  return languageNameMapping[franc(text)] || 'english'\n}\n"],"mappings":";;;;;AAKA,MAAAA,KAAA,GAAAC,OAAA;AAaA,MAAMC,mBAAmB,GAAG;EAC1BC,GAAG,EAAE,QAAQ;EACbC,GAAG,EAAE,SAAS;EACdC,GAAG,EAAE,SAAS;EACdC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE,YAAY;EACjBC,GAAG,EAAE,SAAS;EACdC,GAAG,EAAE;CACN;AAGD,SAAAC,cAAsCC,IAAY;EAChD,OAAOT,mBAAmB,CAACF,KAAK,CAACW,IAAI,CAAC,CAAC,IAAI,SAAS;AACtD;AAFAC,OAAA,CAAAC,OAAA,GAAAH,aAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}