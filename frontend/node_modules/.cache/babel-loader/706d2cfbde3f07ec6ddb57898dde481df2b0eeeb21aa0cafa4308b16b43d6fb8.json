{"ast":null,"code":"//similar to plural/singularize rules, but not the same\nconst isPlural = {\n  e: ['mice', 'louse', 'antennae', 'formulae', 'nebulae', 'vertebrae', 'vitae'],\n  i: ['tia', 'octopi', 'viri', 'radii', 'nuclei', 'fungi', 'cacti', 'stimuli'],\n  n: ['men'],\n  t: ['feet']\n};\n// plural words as exceptions to suffix-rules\nconst exceptions = new Set([\n// 'formulas',\n// 'umbrellas',\n// 'gorillas',\n// 'koalas',\n'israelis', 'menus', 'logos']);\nconst notPlural = ['bus', 'mas',\n//christmas\n'was',\n// 'las',\n'ias',\n//alias\n'xas', 'vas', 'cis',\n//probocis\n'lis', 'nis',\n//tennis\n'ois', 'ris', 'sis',\n//thesis\n'tis',\n//mantis, testis\n'xis', 'aus', 'cus', 'eus',\n//nucleus\n'fus',\n//doofus\n'gus',\n//fungus\n'ius',\n//radius\n'lus',\n//stimulus\n'nus', 'das', 'ous', 'pus',\n//octopus\n'rus',\n//virus\n'sus',\n//census\n'tus',\n//status,cactus\n'xus', 'aos',\n//chaos\n'igos', 'ados',\n//barbados\n'ogos', \"'s\", 'ss'];\nconst looksPlural = function (str) {\n  // not long enough to be plural\n  if (!str || str.length <= 3) {\n    return false;\n  }\n  // 'menus' etc\n  if (exceptions.has(str)) {\n    return true;\n  }\n  let end = str[str.length - 1];\n  // look at 'firemen'\n  if (isPlural.hasOwnProperty(end)) {\n    return isPlural[end].find(suff => str.endsWith(suff));\n  }\n  if (end !== 's') {\n    return false;\n  }\n  // look for 'virus'\n  if (notPlural.find(suff => str.endsWith(suff))) {\n    return false;\n  }\n  // ends with an s, seems plural i guess.\n  return true;\n};\nexport default looksPlural;","map":{"version":3,"names":["isPlural","e","i","n","t","exceptions","Set","notPlural","looksPlural","str","length","has","end","hasOwnProperty","find","suff","endsWith"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/methods/looksPlural.js"],"sourcesContent":["//similar to plural/singularize rules, but not the same\nconst isPlural = {\n  e: ['mice', 'louse', 'antennae', 'formulae', 'nebulae', 'vertebrae', 'vitae'],\n  i: ['tia', 'octopi', 'viri', 'radii', 'nuclei', 'fungi', 'cacti', 'stimuli'],\n  n: ['men'],\n  t: ['feet'],\n}\n// plural words as exceptions to suffix-rules\nconst exceptions = new Set([\n  // 'formulas',\n  // 'umbrellas',\n  // 'gorillas',\n  // 'koalas',\n  'israelis',\n  'menus',\n  'logos',\n])\n\nconst notPlural = [\n  'bus',\n  'mas', //christmas\n  'was',\n  // 'las',\n  'ias', //alias\n  'xas',\n  'vas',\n  'cis', //probocis\n  'lis',\n  'nis', //tennis\n  'ois',\n  'ris',\n  'sis', //thesis\n  'tis', //mantis, testis\n  'xis',\n  'aus',\n  'cus',\n  'eus', //nucleus\n  'fus', //doofus\n  'gus', //fungus\n  'ius', //radius\n  'lus', //stimulus\n  'nus',\n  'das',\n  'ous',\n  'pus', //octopus\n  'rus', //virus\n  'sus', //census\n  'tus', //status,cactus\n  'xus',\n  'aos', //chaos\n  'igos',\n  'ados', //barbados\n  'ogos',\n  \"'s\",\n  'ss',\n]\n\nconst looksPlural = function (str) {\n  // not long enough to be plural\n  if (!str || str.length <= 3) {\n    return false\n  }\n  // 'menus' etc\n  if (exceptions.has(str)) {\n    return true\n  }\n  let end = str[str.length - 1]\n  // look at 'firemen'\n  if (isPlural.hasOwnProperty(end)) {\n    return isPlural[end].find(suff => str.endsWith(suff))\n  }\n  if (end !== 's') {\n    return false\n  }\n  // look for 'virus'\n  if (notPlural.find(suff => str.endsWith(suff))) {\n    return false\n  }\n  // ends with an s, seems plural i guess.\n  return true\n}\nexport default looksPlural\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG;EACfC,CAAC,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,CAAC;EAC7EC,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC;EAC5EC,CAAC,EAAE,CAAC,KAAK,CAAC;EACVC,CAAC,EAAE,CAAC,MAAM;AACZ,CAAC;AACD;AACA,MAAMC,UAAU,GAAG,IAAIC,GAAG,CAAC;AACzB;AACA;AACA;AACA;AACA,UAAU,EACV,OAAO,EACP,OAAO,CACR,CAAC;AAEF,MAAMC,SAAS,GAAG,CAChB,KAAK,EACL,KAAK;AAAE;AACP,KAAK;AACL;AACA,KAAK;AAAE;AACP,KAAK,EACL,KAAK,EACL,KAAK;AAAE;AACP,KAAK,EACL,KAAK;AAAE;AACP,KAAK,EACL,KAAK,EACL,KAAK;AAAE;AACP,KAAK;AAAE;AACP,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK;AAAE;AACP,KAAK;AAAE;AACP,KAAK;AAAE;AACP,KAAK;AAAE;AACP,KAAK;AAAE;AACP,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK;AAAE;AACP,KAAK;AAAE;AACP,KAAK;AAAE;AACP,KAAK;AAAE;AACP,KAAK,EACL,KAAK;AAAE;AACP,MAAM,EACN,MAAM;AAAE;AACR,MAAM,EACN,IAAI,EACJ,IAAI,CACL;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAUC,GAAG,EAAE;EACjC;EACA,IAAI,CAACA,GAAG,IAAIA,GAAG,CAACC,MAAM,IAAI,CAAC,EAAE;IAC3B,OAAO,KAAK;EACd;EACA;EACA,IAAIL,UAAU,CAACM,GAAG,CAACF,GAAG,CAAC,EAAE;IACvB,OAAO,IAAI;EACb;EACA,IAAIG,GAAG,GAAGH,GAAG,CAACA,GAAG,CAACC,MAAM,GAAG,CAAC,CAAC;EAC7B;EACA,IAAIV,QAAQ,CAACa,cAAc,CAACD,GAAG,CAAC,EAAE;IAChC,OAAOZ,QAAQ,CAACY,GAAG,CAAC,CAACE,IAAI,CAACC,IAAI,IAAIN,GAAG,CAACO,QAAQ,CAACD,IAAI,CAAC,CAAC;EACvD;EACA,IAAIH,GAAG,KAAK,GAAG,EAAE;IACf,OAAO,KAAK;EACd;EACA;EACA,IAAIL,SAAS,CAACO,IAAI,CAACC,IAAI,IAAIN,GAAG,CAACO,QAAQ,CAACD,IAAI,CAAC,CAAC,EAAE;IAC9C,OAAO,KAAK;EACd;EACA;EACA,OAAO,IAAI;AACb,CAAC;AACD,eAAeP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}