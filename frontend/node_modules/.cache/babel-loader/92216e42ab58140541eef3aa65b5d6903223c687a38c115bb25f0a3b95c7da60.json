{"ast":null,"code":"export default [\n// #coolguy\n[/^#[\\p{Number}_]*\\p{Letter}/u, 'HashTag'],\n// can't be all numbers\n\n// @spencermountain\n[/^@\\w{2,}$/, 'AtMention'],\n// period-ones acronyms - f.b.i.\n[/^([A-Z]\\.){2}[A-Z]?/i, ['Acronym', 'Noun'], 'F.B.I'],\n//ascii-only\n\n// ending-apostrophes\n[/.{3}[lkmnp]in['‘’‛‵′`´]$/, 'Gerund', \"chillin'\"], [/.{4}s['‘’‛‵′`´]$/, 'Possessive', \"flanders'\"],\n//from https://www.regextester.com/106421\n// [/^([\\u00a9\\u00ae\\u2319-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/, 'Emoji', 'emoji-range']\n// unicode character range\n[/^[\\p{Emoji_Presentation}\\p{Extended_Pictographic}]/u, 'Emoji', 'emoji-class']];","map":{"version":3,"names":[],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/model/regex/regex-text.js"],"sourcesContent":["export default [\n  // #coolguy\n  [/^#[\\p{Number}_]*\\p{Letter}/u, 'HashTag'], // can't be all numbers\n\n  // @spencermountain\n  [/^@\\w{2,}$/, 'AtMention'],\n\n  // period-ones acronyms - f.b.i.\n  [/^([A-Z]\\.){2}[A-Z]?/i, ['Acronym', 'Noun'], 'F.B.I'], //ascii-only\n\n  // ending-apostrophes\n  [/.{3}[lkmnp]in['‘’‛‵′`´]$/, 'Gerund', \"chillin'\"],\n  [/.{4}s['‘’‛‵′`´]$/, 'Possessive', \"flanders'\"],\n\n  //from https://www.regextester.com/106421\n  // [/^([\\u00a9\\u00ae\\u2319-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/, 'Emoji', 'emoji-range']\n  // unicode character range\n  [/^[\\p{Emoji_Presentation}\\p{Extended_Pictographic}]/u, 'Emoji', 'emoji-class'],\n]\n"],"mappings":"AAAA,eAAe;AACb;AACA,CAAC,6BAA6B,EAAE,SAAS,CAAC;AAAE;;AAE5C;AACA,CAAC,WAAW,EAAE,WAAW,CAAC;AAE1B;AACA,CAAC,sBAAsB,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC;AAAE;;AAExD;AACA,CAAC,0BAA0B,EAAE,QAAQ,EAAE,UAAU,CAAC,EAClD,CAAC,kBAAkB,EAAE,YAAY,EAAE,WAAW,CAAC;AAE/C;AACA;AACA;AACA,CAAC,qDAAqD,EAAE,OAAO,EAAE,aAAa,CAAC,CAChF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}