{"ast":null,"code":"// assume any discovered prefixes\nconst autoFill = function () {\n  const docs = this.docs;\n  if (docs.length === 0) {\n    return this;\n  }\n  let lastPhrase = docs[docs.length - 1] || [];\n  let term = lastPhrase[lastPhrase.length - 1];\n  if (term.typeahead === true && term.machine) {\n    term.text = term.machine;\n    term.normal = term.machine;\n  }\n  return this;\n};\nconst api = function (View) {\n  View.prototype.autoFill = autoFill;\n};\nexport default api;","map":{"version":3,"names":["autoFill","docs","length","lastPhrase","term","typeahead","machine","text","normal","api","View","prototype"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/typeahead/api.js"],"sourcesContent":["// assume any discovered prefixes\nconst autoFill = function () {\n  const docs = this.docs\n  if (docs.length === 0) {\n    return this\n  }\n  let lastPhrase = docs[docs.length - 1] || []\n  let term = lastPhrase[lastPhrase.length - 1]\n  if (term.typeahead === true && term.machine) {\n    term.text = term.machine\n    term.normal = term.machine\n  }\n  return this\n}\n\nconst api = function (View) {\n  View.prototype.autoFill = autoFill\n}\nexport default api"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,SAAAA,CAAA,EAAY;EAC3B,MAAMC,IAAI,GAAG,IAAI,CAACA,IAAI;EACtB,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IACrB,OAAO,IAAI;EACb;EACA,IAAIC,UAAU,GAAGF,IAAI,CAACA,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE;EAC5C,IAAIE,IAAI,GAAGD,UAAU,CAACA,UAAU,CAACD,MAAM,GAAG,CAAC,CAAC;EAC5C,IAAIE,IAAI,CAACC,SAAS,KAAK,IAAI,IAAID,IAAI,CAACE,OAAO,EAAE;IAC3CF,IAAI,CAACG,IAAI,GAAGH,IAAI,CAACE,OAAO;IACxBF,IAAI,CAACI,MAAM,GAAGJ,IAAI,CAACE,OAAO;EAC5B;EACA,OAAO,IAAI;AACb,CAAC;AAED,MAAMG,GAAG,GAAG,SAAAA,CAAUC,IAAI,EAAE;EAC1BA,IAAI,CAACC,SAAS,CAACX,QAAQ,GAAGA,QAAQ;AACpC,CAAC;AACD,eAAeS,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}