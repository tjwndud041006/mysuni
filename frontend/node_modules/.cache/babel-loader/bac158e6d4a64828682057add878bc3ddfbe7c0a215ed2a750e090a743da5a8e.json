{"ast":null,"code":"// rough connection between compromise tagset and Penn Treebank\n// https://www.ling.upenn.edu/courses/Fall_2003/ling001/penn_treebank_pos.html\n\nconst mapping = {\n  // adverbs\n  // 'Comparative': 'RBR',\n  // 'Superlative': 'RBS',\n  Adverb: 'RB',\n  // adjectives\n  Comparative: 'JJR',\n  Superlative: 'JJS',\n  Adjective: 'JJ',\n  TO: 'Conjunction',\n  // verbs\n  Modal: 'MD',\n  Auxiliary: 'MD',\n  Gerund: 'VBG',\n  //throwing\n  PastTense: 'VBD',\n  //threw\n  Participle: 'VBN',\n  //thrown\n  PresentTense: 'VBZ',\n  //throws\n  Infinitive: 'VB',\n  //throw\n  Particle: 'RP',\n  //phrasal particle\n  Verb: 'VB',\n  // throw\n\n  // pronouns\n  Pronoun: 'PRP',\n  // misc\n  Cardinal: 'CD',\n  Conjunction: 'CC',\n  Determiner: 'DT',\n  Preposition: 'IN',\n  // 'Determiner': 'WDT',\n  // 'Expression': 'FW',\n  QuestionWord: 'WP',\n  Expression: 'UH',\n  //nouns\n  Possessive: 'POS',\n  ProperNoun: 'NNP',\n  Person: 'NNP',\n  Place: 'NNP',\n  Organization: 'NNP',\n  Singular: 'NN',\n  Plural: 'NNS',\n  Noun: 'NN',\n  There: 'EX' //'there'\n  // 'Adverb':'WRB',\n  // 'Noun':'PDT', //predeterminer\n  // 'Noun':'SYM', //symbol\n  // 'Noun':'NFP', //\n\n  //  WDT \tWh-determiner\n  // \tWP \tWh-pronoun\n  // \tWP$ \tPossessive wh-pronoun\n  // \tWRB \tWh-adverb\n};\nconst toPenn = function (term) {\n  // try some ad-hoc ones\n  if (term.tags.has('ProperNoun') && term.tags.has('Plural')) {\n    return 'NNPS';\n  }\n  if (term.tags.has('Possessive') && term.tags.has('Pronoun')) {\n    return 'PRP$';\n  }\n  if (term.normal === 'there') {\n    return 'EX';\n  }\n  if (term.normal === 'to') {\n    return 'TO';\n  }\n  // run through an ordered list of tags\n  let arr = term.tagRank || [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (mapping.hasOwnProperty(arr[i])) {\n      return mapping[arr[i]];\n    }\n  }\n  return null;\n};\nconst pennTag = function (view) {\n  view.compute('tagRank');\n  view.docs.forEach(terms => {\n    terms.forEach(term => {\n      term.penn = toPenn(term);\n    });\n  });\n};\nexport default pennTag;","map":{"version":3,"names":["mapping","Adverb","Comparative","Superlative","Adjective","TO","Modal","Auxiliary","Gerund","PastTense","Participle","PresentTense","Infinitive","Particle","Verb","Pronoun","Cardinal","Conjunction","Determiner","Preposition","QuestionWord","Expression","Possessive","ProperNoun","Person","Place","Organization","Singular","Plural","Noun","There","toPenn","term","tags","has","normal","arr","tagRank","i","length","hasOwnProperty","pennTag","view","compute","docs","forEach","terms","penn"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/compute/penn.js"],"sourcesContent":["// rough connection between compromise tagset and Penn Treebank\n// https://www.ling.upenn.edu/courses/Fall_2003/ling001/penn_treebank_pos.html\n\nconst mapping = {\n  // adverbs\n  // 'Comparative': 'RBR',\n  // 'Superlative': 'RBS',\n  Adverb: 'RB',\n\n  // adjectives\n  Comparative: 'JJR',\n  Superlative: 'JJS',\n  Adjective: 'JJ',\n  TO: 'Conjunction',\n\n  // verbs\n  Modal: 'MD',\n  Auxiliary: 'MD',\n  Gerund: 'VBG', //throwing\n  PastTense: 'VBD', //threw\n  Participle: 'VBN', //thrown\n  PresentTense: 'VBZ', //throws\n  Infinitive: 'VB', //throw\n  Particle: 'RP', //phrasal particle\n  Verb: 'VB', // throw\n\n  // pronouns\n  Pronoun: 'PRP',\n\n  // misc\n  Cardinal: 'CD',\n  Conjunction: 'CC',\n  Determiner: 'DT',\n  Preposition: 'IN',\n  // 'Determiner': 'WDT',\n  // 'Expression': 'FW',\n  QuestionWord: 'WP',\n  Expression: 'UH',\n\n  //nouns\n  Possessive: 'POS',\n  ProperNoun: 'NNP',\n  Person: 'NNP',\n  Place: 'NNP',\n  Organization: 'NNP',\n  Singular: 'NN',\n  Plural: 'NNS',\n  Noun: 'NN',\n\n  There: 'EX', //'there'\n  // 'Adverb':'WRB',\n  // 'Noun':'PDT', //predeterminer\n  // 'Noun':'SYM', //symbol\n  // 'Noun':'NFP', //\n\n  //  WDT \tWh-determiner\n  // \tWP \tWh-pronoun\n  // \tWP$ \tPossessive wh-pronoun\n  // \tWRB \tWh-adverb\n}\n\nconst toPenn = function (term) {\n  // try some ad-hoc ones\n  if (term.tags.has('ProperNoun') && term.tags.has('Plural')) {\n    return 'NNPS'\n  }\n  if (term.tags.has('Possessive') && term.tags.has('Pronoun')) {\n    return 'PRP$'\n  }\n  if (term.normal === 'there') {\n    return 'EX'\n  }\n  if (term.normal === 'to') {\n    return 'TO'\n  }\n  // run through an ordered list of tags\n  let arr = term.tagRank || []\n  for (let i = 0; i < arr.length; i += 1) {\n    if (mapping.hasOwnProperty(arr[i])) {\n      return mapping[arr[i]]\n    }\n  }\n  return null\n}\n\nconst pennTag = function (view) {\n  view.compute('tagRank')\n  view.docs.forEach(terms => {\n    terms.forEach(term => {\n      term.penn = toPenn(term)\n    })\n  })\n}\nexport default pennTag\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,OAAO,GAAG;EACd;EACA;EACA;EACAC,MAAM,EAAE,IAAI;EAEZ;EACAC,WAAW,EAAE,KAAK;EAClBC,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAE,IAAI;EACfC,EAAE,EAAE,aAAa;EAEjB;EACAC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,IAAI;EACfC,MAAM,EAAE,KAAK;EAAE;EACfC,SAAS,EAAE,KAAK;EAAE;EAClBC,UAAU,EAAE,KAAK;EAAE;EACnBC,YAAY,EAAE,KAAK;EAAE;EACrBC,UAAU,EAAE,IAAI;EAAE;EAClBC,QAAQ,EAAE,IAAI;EAAE;EAChBC,IAAI,EAAE,IAAI;EAAE;;EAEZ;EACAC,OAAO,EAAE,KAAK;EAEd;EACAC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE,IAAI;EACjBC,UAAU,EAAE,IAAI;EAChBC,WAAW,EAAE,IAAI;EACjB;EACA;EACAC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,IAAI;EAEhB;EACAC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,KAAK;EACjBC,MAAM,EAAE,KAAK;EACbC,KAAK,EAAE,KAAK;EACZC,YAAY,EAAE,KAAK;EACnBC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,IAAI;EAEVC,KAAK,EAAE,IAAI,CAAE;EACb;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;AACF,CAAC;AAED,MAAMC,MAAM,GAAG,SAAAA,CAAUC,IAAI,EAAE;EAC7B;EACA,IAAIA,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,YAAY,CAAC,IAAIF,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAE;IAC1D,OAAO,MAAM;EACf;EACA,IAAIF,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,YAAY,CAAC,IAAIF,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,SAAS,CAAC,EAAE;IAC3D,OAAO,MAAM;EACf;EACA,IAAIF,IAAI,CAACG,MAAM,KAAK,OAAO,EAAE;IAC3B,OAAO,IAAI;EACb;EACA,IAAIH,IAAI,CAACG,MAAM,KAAK,IAAI,EAAE;IACxB,OAAO,IAAI;EACb;EACA;EACA,IAAIC,GAAG,GAAGJ,IAAI,CAACK,OAAO,IAAI,EAAE;EAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACtC,IAAItC,OAAO,CAACwC,cAAc,CAACJ,GAAG,CAACE,CAAC,CAAC,CAAC,EAAE;MAClC,OAAOtC,OAAO,CAACoC,GAAG,CAACE,CAAC,CAAC,CAAC;IACxB;EACF;EACA,OAAO,IAAI;AACb,CAAC;AAED,MAAMG,OAAO,GAAG,SAAAA,CAAUC,IAAI,EAAE;EAC9BA,IAAI,CAACC,OAAO,CAAC,SAAS,CAAC;EACvBD,IAAI,CAACE,IAAI,CAACC,OAAO,CAACC,KAAK,IAAI;IACzBA,KAAK,CAACD,OAAO,CAACb,IAAI,IAAI;MACpBA,IAAI,CAACe,IAAI,GAAGhB,MAAM,CAACC,IAAI,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AACD,eAAeS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}