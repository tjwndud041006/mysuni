{"ast":null,"code":"export default [\n// do the dance\n{\n  match: '#Infinitive (this|that|the) [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'do-this-dance'\n},\n//running-a-show\n{\n  match: '#Gerund #Determiner [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'running-a-show'\n},\n//the-only-reason\n{\n  match: '#Determiner (only|further|just|more|backward) [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'the-only-reason'\n},\n// a stream runs\n{\n  match: '(the|this|a|an) [#Infinitive] #Adverb? #Verb',\n  group: 0,\n  tag: 'Noun',\n  reason: 'determiner5'\n},\n//a nice deal\n{\n  match: '#Determiner #Adjective #Adjective? [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'a-nice-inf'\n},\n// the mexican train\n{\n  match: '#Determiner #Demonym [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'mexican-train'\n},\n//next career move\n{\n  match: '#Adjective #Noun+ [#Infinitive] #Copula',\n  group: 0,\n  tag: 'Noun',\n  reason: 'career-move'\n},\n// at some point\n{\n  match: 'at some [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'at-some-inf'\n},\n// goes to sleep\n{\n  match: '(go|goes|went) to [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'goes-to-verb'\n},\n//a close watch on\n{\n  match: '(a|an) #Adjective? #Noun [#Infinitive] (#Preposition|#Noun)',\n  group: 0,\n  notIf: 'from',\n  tag: 'Noun',\n  reason: 'a-noun-inf'\n},\n//a tv show\n{\n  match: '(a|an) #Noun [#Infinitive]$',\n  group: 0,\n  tag: 'Noun',\n  reason: 'a-noun-inf2'\n},\n//is mark hughes\n// { match: '#Copula [#Infinitive] #Noun', group: 0, tag: 'Noun', reason: 'is-pres-noun' },\n// good wait staff\n// { match: '#Adjective [#Infinitive] #Noun', group: 0, tag: 'Noun', reason: 'good-wait-staff' },\n// running for congress\n{\n  match: '#Gerund #Adjective? for [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'running-for'\n},\n// running to work\n// { match: '#Gerund #Adjective to [#Infinitive]', group: 0, tag: 'Noun', reason: 'running-to' },\n// about love\n{\n  match: 'about [#Infinitive]',\n  group: 0,\n  tag: 'Singular',\n  reason: 'about-love'\n},\n// singers on stage\n{\n  match: '#Plural on [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'on-stage'\n},\n// any charge\n{\n  match: 'any [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'any-charge'\n},\n// no doubt\n{\n  match: 'no [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'no-doubt'\n},\n// number of seats\n{\n  match: 'number of [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'number-of-x'\n},\n// teaches/taught\n{\n  match: '(taught|teaches|learns|learned) [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'teaches-x'\n},\n// use reverse\n{\n  match: '(try|use|attempt|build|make) [#Verb #Particle?]',\n  notIf: '(#Copula|#Noun|sure|fun|up)',\n  group: 0,\n  tag: 'Noun',\n  reason: 'do-verb'\n},\n//make sure of\n// checkmate is\n{\n  match: '^[#Infinitive] (is|was)',\n  group: 0,\n  tag: 'Noun',\n  reason: 'checkmate-is'\n},\n// get much sleep\n{\n  match: '#Infinitive much [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'get-much'\n},\n// cause i gotta\n{\n  match: '[cause] #Pronoun #Verb',\n  group: 0,\n  tag: 'Conjunction',\n  reason: 'cause-cuz'\n},\n// the cardio dance party\n{\n  match: 'the #Singular [#Infinitive] #Noun',\n  group: 0,\n  tag: 'Noun',\n  notIf: '#Pronoun',\n  reason: 'cardio-dance'\n},\n// that should smoke\n{\n  match: '#Determiner #Modal [#Noun]',\n  group: 0,\n  tag: 'PresentTense',\n  reason: 'should-smoke'\n},\n//this rocks\n{\n  match: 'this [#Plural]',\n  group: 0,\n  tag: 'PresentTense',\n  notIf: '(#Preposition|#Date)',\n  reason: 'this-verbs'\n},\n//voice that rocks\n{\n  match: '#Noun that [#Plural]',\n  group: 0,\n  tag: 'PresentTense',\n  notIf: '(#Preposition|#Pronoun|way)',\n  reason: 'voice-that-rocks'\n},\n//that leads to\n{\n  match: 'that [#Plural] to',\n  group: 0,\n  tag: 'PresentTense',\n  notIf: '#Preposition',\n  reason: 'that-leads-to'\n},\n//let him glue\n{\n  match: '(let|make|made) (him|her|it|#Person|#Place|#Organization)+ [#Singular] (a|an|the|it)',\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'let-him-glue'\n},\n// assign all tasks\n{\n  match: '#Verb (all|every|each|most|some|no) [#PresentTense]',\n  notIf: '#Modal',\n  group: 0,\n  tag: 'Noun',\n  reason: 'all-presentTense'\n},\n// PresentTense/Noun ambiguities\n// big dreams, critical thinking\n// have big dreams\n{\n  match: '(had|have|#PastTense) #Adjective [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  notIf: 'better',\n  reason: 'adj-presentTense'\n},\n// excellent answer spencer\n// { match: '^#Adjective [#PresentTense]', group: 0, tag: 'Noun', reason: 'start adj-presentTense' },\n// one big reason\n{\n  match: '#Value #Adjective [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  notIf: '#Copula',\n  reason: 'one-big-reason'\n},\n// won widespread support\n{\n  match: '#PastTense #Adjective+ [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  notIf: '(#Copula|better)',\n  reason: 'won-wide-support'\n},\n// many poses\n{\n  match: '(many|few|several|couple) [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  notIf: '#Copula',\n  reason: 'many-poses'\n},\n// very big dreams\n{\n  match: '#Determiner #Adverb #Adjective [%Noun|Verb%]',\n  group: 0,\n  tag: 'Noun',\n  notIf: '#Copula',\n  reason: 'very-big-dream'\n},\n// from start to finish\n{\n  match: 'from #Noun to [%Noun|Verb%]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'start-to-finish'\n},\n// for comparison or contrast\n{\n  match: '(for|with|of) #Noun (and|or|not) [%Noun|Verb%]',\n  group: 0,\n  tag: 'Noun',\n  notIf: '#Pronoun',\n  reason: 'for-food-and-gas'\n},\n// adorable little store\n{\n  match: '#Adjective #Adjective [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  notIf: '#Copula',\n  reason: 'adorable-little-store'\n},\n// of basic training\n// { match: '#Preposition #Adjective [#PresentTense]', group: 0, tag: 'Noun', reason: 'of-basic-training' },\n// justifiying higher costs\n{\n  match: '#Gerund #Adverb? #Comparative [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  notIf: '#Copula',\n  reason: 'higher-costs'\n}, {\n  match: '(#Noun && @hasComma) #Noun (and|or) [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  notIf: '#Copula',\n  reason: 'noun-list'\n},\n// any questions for\n{\n  match: '(many|any|some|several) [#PresentTense] for',\n  group: 0,\n  tag: 'Noun',\n  reason: 'any-verbs-for'\n},\n// to facilitate gas exchange with\n{\n  match: `to #PresentTense #Noun [#PresentTense] #Preposition`,\n  group: 0,\n  tag: 'Noun',\n  reason: 'gas-exchange'\n},\n// waited until release\n{\n  match: `#PastTense (until|as|through|without) [#PresentTense]`,\n  group: 0,\n  tag: 'Noun',\n  reason: 'waited-until-release'\n},\n// selling like hot cakes\n{\n  match: `#Gerund like #Adjective? [#PresentTense]`,\n  group: 0,\n  tag: 'Plural',\n  reason: 'like-hot-cakes'\n},\n// some valid reason\n{\n  match: `some #Adjective [#PresentTense]`,\n  group: 0,\n  tag: 'Noun',\n  reason: 'some-reason'\n},\n// for some reason\n{\n  match: `for some [#PresentTense]`,\n  group: 0,\n  tag: 'Noun',\n  reason: 'for-some-reason'\n},\n// same kind of shouts\n{\n  match: `(same|some|the|that|a) kind of [#PresentTense]`,\n  group: 0,\n  tag: 'Noun',\n  reason: 'some-kind-of'\n},\n// a type of shout\n{\n  match: `(same|some|the|that|a) type of [#PresentTense]`,\n  group: 0,\n  tag: 'Noun',\n  reason: 'some-type-of'\n},\n// doing better for fights\n{\n  match: `#Gerund #Adjective #Preposition [#PresentTense]`,\n  group: 0,\n  tag: 'Noun',\n  reason: 'doing-better-for-x'\n},\n// get better aim\n{\n  match: `(get|got|have) #Comparative [#PresentTense]`,\n  group: 0,\n  tag: 'Noun',\n  reason: 'got-better-aim'\n},\n// whose name was\n{\n  match: 'whose [#PresentTense] #Copula',\n  group: 0,\n  tag: 'Noun',\n  reason: 'whos-name-was'\n},\n// give up on reason\n{\n  match: `#PhrasalVerb #Particle #Preposition [#PresentTense]`,\n  group: 0,\n  tag: 'Noun',\n  reason: 'given-up-on-x'\n},\n//there are reasons\n{\n  match: 'there (are|were) #Adjective? [#PresentTense]',\n  group: 0,\n  tag: 'Plural',\n  reason: 'there-are'\n},\n// 30 trains\n{\n  match: '#Value [#PresentTense] of',\n  group: 0,\n  notIf: '(one|1|#Copula|#Infinitive)',\n  tag: 'Plural',\n  reason: '2-trains'\n},\n// compromises are possible\n{\n  match: '[#PresentTense] (are|were) #Adjective',\n  group: 0,\n  tag: 'Plural',\n  reason: 'compromises-are-possible'\n},\n// hope i helped\n{\n  match: '^[(hope|guess|thought|think)] #Pronoun #Verb',\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'suppose-i'\n},\n//pursue its dreams\n// { match: '#PresentTense #Possessive [#PresentTense]', notIf: '#Gerund', group: 0, tag: 'Plural', reason: 'pursue-its-dreams' },\n// our unyielding support\n{\n  match: '#Possessive #Adjective [#Verb]',\n  group: 0,\n  tag: 'Noun',\n  notIf: '#Copula',\n  reason: 'our-full-support'\n},\n// tastes good\n{\n  match: '[(tastes|smells)] #Adverb? #Adjective',\n  group: 0,\n  tag: 'PresentTense',\n  reason: 'tastes-good'\n},\n// are you playing golf\n// { match: '^are #Pronoun [#Noun]', group: 0, notIf: '(here|there)', tag: 'Verb', reason: 'are-you-x' },\n// ignoring commute\n{\n  match: '#Copula #Gerund [#PresentTense] !by?',\n  group: 0,\n  tag: 'Noun',\n  notIf: 'going',\n  reason: 'ignoring-commute'\n},\n// noun-pastTense variables\n{\n  match: '#Determiner #Adjective? [(shed|thought|rose|bid|saw|spelt)]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'noun-past'\n},\n// 'verb-to'\n// how to watch\n{\n  match: 'how to [%Noun|Verb%]',\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'how-to-noun'\n},\n// which boost it\n{\n  match: 'which [%Noun|Verb%] #Noun',\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'which-boost-it'\n},\n// asking questions\n{\n  match: '#Gerund [%Plural|Verb%]',\n  group: 0,\n  tag: 'Plural',\n  reason: 'asking-questions'\n},\n// ready to stream\n{\n  match: '(ready|available|difficult|hard|easy|made|attempt|try) to [%Noun|Verb%]',\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'ready-to-noun'\n},\n// bring to market\n{\n  match: '(bring|went|go|drive|run|bike) to [%Noun|Verb%]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'bring-to-noun'\n},\n// can i sleep, would you look\n{\n  match: '#Modal #Noun [%Noun|Verb%]',\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'would-you-look'\n},\n// is just spam\n{\n  match: '#Copula just [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'is-just-spam'\n},\n// request copies\n{\n  match: '^%Noun|Verb% %Plural|Verb%',\n  tag: 'Imperative #Plural',\n  reason: 'request-copies'\n},\n// homemade pickles and drinks\n{\n  match: '#Adjective #Plural and [%Plural|Verb%]',\n  group: 0,\n  tag: '#Plural',\n  reason: 'pickles-and-drinks'\n},\n// the 1968 film\n{\n  match: '#Determiner #Year [#Verb]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'the-1968-film'\n},\n// the break up\n{\n  match: '#Determiner [#PhrasalVerb #Particle]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'the-break-up'\n},\n// the individual goals\n{\n  match: '#Determiner [%Adj|Noun%] #Noun',\n  group: 0,\n  tag: 'Adjective',\n  notIf: '(#Pronoun|#Possessive|#ProperNoun)',\n  reason: 'the-individual-goals'\n},\n// work or prepare\n{\n  match: '[%Noun|Verb%] or #Infinitive',\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'work-or-prepare'\n},\n// to give thanks\n{\n  match: 'to #Infinitive [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  notIf: '(#Gerund|#Copula|help)',\n  reason: 'to-give-thanks'\n},\n// kills me\n{\n  match: '[#Noun] me',\n  group: 0,\n  tag: 'Verb',\n  reason: 'kills-me'\n},\n// removes wrinkles\n{\n  match: '%Plural|Verb% %Plural|Verb%',\n  tag: '#PresentTense #Plural',\n  reason: 'removes-wrinkles'\n}];","map":{"version":3,"names":["match","group","tag","reason","notIf"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/postTagger/model/verbs/verb-noun.js"],"sourcesContent":["export default [\n  // do the dance\n  { match: '#Infinitive (this|that|the) [#Infinitive]', group: 0, tag: 'Noun', reason: 'do-this-dance' },\n  //running-a-show\n  { match: '#Gerund #Determiner [#Infinitive]', group: 0, tag: 'Noun', reason: 'running-a-show' },\n  //the-only-reason\n  { match: '#Determiner (only|further|just|more|backward) [#Infinitive]', group: 0, tag: 'Noun', reason: 'the-only-reason' },\n  // a stream runs\n  { match: '(the|this|a|an) [#Infinitive] #Adverb? #Verb', group: 0, tag: 'Noun', reason: 'determiner5' },\n  //a nice deal\n  { match: '#Determiner #Adjective #Adjective? [#Infinitive]', group: 0, tag: 'Noun', reason: 'a-nice-inf' },\n  // the mexican train\n  { match: '#Determiner #Demonym [#PresentTense]', group: 0, tag: 'Noun', reason: 'mexican-train' },\n  //next career move\n  { match: '#Adjective #Noun+ [#Infinitive] #Copula', group: 0, tag: 'Noun', reason: 'career-move' },\n  // at some point\n  { match: 'at some [#Infinitive]', group: 0, tag: 'Noun', reason: 'at-some-inf' },\n  // goes to sleep\n  { match: '(go|goes|went) to [#Infinitive]', group: 0, tag: 'Noun', reason: 'goes-to-verb' },\n  //a close watch on\n  { match: '(a|an) #Adjective? #Noun [#Infinitive] (#Preposition|#Noun)', group: 0, notIf: 'from', tag: 'Noun', reason: 'a-noun-inf' },\n  //a tv show\n  { match: '(a|an) #Noun [#Infinitive]$', group: 0, tag: 'Noun', reason: 'a-noun-inf2' },\n  //is mark hughes\n  // { match: '#Copula [#Infinitive] #Noun', group: 0, tag: 'Noun', reason: 'is-pres-noun' },\n  // good wait staff\n  // { match: '#Adjective [#Infinitive] #Noun', group: 0, tag: 'Noun', reason: 'good-wait-staff' },\n  // running for congress\n  { match: '#Gerund #Adjective? for [#Infinitive]', group: 0, tag: 'Noun', reason: 'running-for' },\n  // running to work\n  // { match: '#Gerund #Adjective to [#Infinitive]', group: 0, tag: 'Noun', reason: 'running-to' },\n  // about love\n  { match: 'about [#Infinitive]', group: 0, tag: 'Singular', reason: 'about-love' },\n  // singers on stage\n  { match: '#Plural on [#Infinitive]', group: 0, tag: 'Noun', reason: 'on-stage' },\n  // any charge\n  { match: 'any [#Infinitive]', group: 0, tag: 'Noun', reason: 'any-charge' },\n  // no doubt\n  { match: 'no [#Infinitive]', group: 0, tag: 'Noun', reason: 'no-doubt' },\n  // number of seats\n  { match: 'number of [#PresentTense]', group: 0, tag: 'Noun', reason: 'number-of-x' },\n  // teaches/taught\n  { match: '(taught|teaches|learns|learned) [#PresentTense]', group: 0, tag: 'Noun', reason: 'teaches-x' },\n  // use reverse\n  { match: '(try|use|attempt|build|make) [#Verb #Particle?]', notIf: '(#Copula|#Noun|sure|fun|up)', group: 0, tag: 'Noun', reason: 'do-verb' },//make sure of\n  // checkmate is\n  { match: '^[#Infinitive] (is|was)', group: 0, tag: 'Noun', reason: 'checkmate-is' },\n  // get much sleep\n  { match: '#Infinitive much [#Infinitive]', group: 0, tag: 'Noun', reason: 'get-much' },\n  // cause i gotta\n  { match: '[cause] #Pronoun #Verb', group: 0, tag: 'Conjunction', reason: 'cause-cuz' },\n  // the cardio dance party\n  { match: 'the #Singular [#Infinitive] #Noun', group: 0, tag: 'Noun', notIf: '#Pronoun', reason: 'cardio-dance' },\n\n  // that should smoke\n  { match: '#Determiner #Modal [#Noun]', group: 0, tag: 'PresentTense', reason: 'should-smoke' },\n  //this rocks\n  { match: 'this [#Plural]', group: 0, tag: 'PresentTense', notIf: '(#Preposition|#Date)', reason: 'this-verbs' },\n  //voice that rocks\n  { match: '#Noun that [#Plural]', group: 0, tag: 'PresentTense', notIf: '(#Preposition|#Pronoun|way)', reason: 'voice-that-rocks' },\n  //that leads to\n  { match: 'that [#Plural] to', group: 0, tag: 'PresentTense', notIf: '#Preposition', reason: 'that-leads-to' },\n  //let him glue\n  {\n    match: '(let|make|made) (him|her|it|#Person|#Place|#Organization)+ [#Singular] (a|an|the|it)',\n    group: 0,\n    tag: 'Infinitive',\n    reason: 'let-him-glue',\n  },\n\n  // assign all tasks\n  { match: '#Verb (all|every|each|most|some|no) [#PresentTense]', notIf: '#Modal', group: 0, tag: 'Noun', reason: 'all-presentTense' },  // PresentTense/Noun ambiguities\n  // big dreams, critical thinking\n  // have big dreams\n  { match: '(had|have|#PastTense) #Adjective [#PresentTense]', group: 0, tag: 'Noun', notIf: 'better', reason: 'adj-presentTense' },\n  // excellent answer spencer\n  // { match: '^#Adjective [#PresentTense]', group: 0, tag: 'Noun', reason: 'start adj-presentTense' },\n  // one big reason\n  { match: '#Value #Adjective [#PresentTense]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'one-big-reason' },\n  // won widespread support\n  { match: '#PastTense #Adjective+ [#PresentTense]', group: 0, tag: 'Noun', notIf: '(#Copula|better)', reason: 'won-wide-support' },\n  // many poses\n  { match: '(many|few|several|couple) [#PresentTense]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'many-poses' },\n  // very big dreams\n  { match: '#Determiner #Adverb #Adjective [%Noun|Verb%]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'very-big-dream' },\n  // from start to finish\n  { match: 'from #Noun to [%Noun|Verb%]', group: 0, tag: 'Noun', reason: 'start-to-finish' },\n  // for comparison or contrast\n  { match: '(for|with|of) #Noun (and|or|not) [%Noun|Verb%]', group: 0, tag: 'Noun', notIf: '#Pronoun', reason: 'for-food-and-gas' },\n  // adorable little store\n  { match: '#Adjective #Adjective [#PresentTense]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'adorable-little-store' },\n  // of basic training\n  // { match: '#Preposition #Adjective [#PresentTense]', group: 0, tag: 'Noun', reason: 'of-basic-training' },\n  // justifiying higher costs\n  { match: '#Gerund #Adverb? #Comparative [#PresentTense]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'higher-costs' },\n\n  { match: '(#Noun && @hasComma) #Noun (and|or) [#PresentTense]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'noun-list' },\n\n  // any questions for\n  { match: '(many|any|some|several) [#PresentTense] for', group: 0, tag: 'Noun', reason: 'any-verbs-for' },\n  // to facilitate gas exchange with\n  { match: `to #PresentTense #Noun [#PresentTense] #Preposition`, group: 0, tag: 'Noun', reason: 'gas-exchange' },\n  // waited until release\n  { match: `#PastTense (until|as|through|without) [#PresentTense]`, group: 0, tag: 'Noun', reason: 'waited-until-release' },\n  // selling like hot cakes\n  { match: `#Gerund like #Adjective? [#PresentTense]`, group: 0, tag: 'Plural', reason: 'like-hot-cakes' },\n  // some valid reason\n  { match: `some #Adjective [#PresentTense]`, group: 0, tag: 'Noun', reason: 'some-reason' },\n  // for some reason\n  { match: `for some [#PresentTense]`, group: 0, tag: 'Noun', reason: 'for-some-reason' },\n  // same kind of shouts\n  { match: `(same|some|the|that|a) kind of [#PresentTense]`, group: 0, tag: 'Noun', reason: 'some-kind-of' },\n  // a type of shout\n  { match: `(same|some|the|that|a) type of [#PresentTense]`, group: 0, tag: 'Noun', reason: 'some-type-of' },\n  // doing better for fights\n  { match: `#Gerund #Adjective #Preposition [#PresentTense]`, group: 0, tag: 'Noun', reason: 'doing-better-for-x' },\n  // get better aim\n  { match: `(get|got|have) #Comparative [#PresentTense]`, group: 0, tag: 'Noun', reason: 'got-better-aim' },\n  // whose name was\n  { match: 'whose [#PresentTense] #Copula', group: 0, tag: 'Noun', reason: 'whos-name-was' },\n  // give up on reason\n  { match: `#PhrasalVerb #Particle #Preposition [#PresentTense]`, group: 0, tag: 'Noun', reason: 'given-up-on-x' },\n  //there are reasons\n  { match: 'there (are|were) #Adjective? [#PresentTense]', group: 0, tag: 'Plural', reason: 'there-are' },\n  // 30 trains\n  { match: '#Value [#PresentTense] of', group: 0, notIf: '(one|1|#Copula|#Infinitive)', tag: 'Plural', reason: '2-trains' },\n  // compromises are possible\n  { match: '[#PresentTense] (are|were) #Adjective', group: 0, tag: 'Plural', reason: 'compromises-are-possible' },\n  // hope i helped\n  { match: '^[(hope|guess|thought|think)] #Pronoun #Verb', group: 0, tag: 'Infinitive', reason: 'suppose-i' },\n  //pursue its dreams\n  // { match: '#PresentTense #Possessive [#PresentTense]', notIf: '#Gerund', group: 0, tag: 'Plural', reason: 'pursue-its-dreams' },\n  // our unyielding support\n  { match: '#Possessive #Adjective [#Verb]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'our-full-support' },\n  // tastes good\n  { match: '[(tastes|smells)] #Adverb? #Adjective', group: 0, tag: 'PresentTense', reason: 'tastes-good' },\n  // are you playing golf\n  // { match: '^are #Pronoun [#Noun]', group: 0, notIf: '(here|there)', tag: 'Verb', reason: 'are-you-x' },\n  // ignoring commute\n  { match: '#Copula #Gerund [#PresentTense] !by?', group: 0, tag: 'Noun', notIf: 'going', reason: 'ignoring-commute' },\n  // noun-pastTense variables\n  { match: '#Determiner #Adjective? [(shed|thought|rose|bid|saw|spelt)]', group: 0, tag: 'Noun', reason: 'noun-past' },\n\n  // 'verb-to'\n  // how to watch\n  { match: 'how to [%Noun|Verb%]', group: 0, tag: 'Infinitive', reason: 'how-to-noun' },\n  // which boost it\n  { match: 'which [%Noun|Verb%] #Noun', group: 0, tag: 'Infinitive', reason: 'which-boost-it' },\n  // asking questions\n  { match: '#Gerund [%Plural|Verb%]', group: 0, tag: 'Plural', reason: 'asking-questions' },\n  // ready to stream\n  { match: '(ready|available|difficult|hard|easy|made|attempt|try) to [%Noun|Verb%]', group: 0, tag: 'Infinitive', reason: 'ready-to-noun' },\n  // bring to market\n  { match: '(bring|went|go|drive|run|bike) to [%Noun|Verb%]', group: 0, tag: 'Noun', reason: 'bring-to-noun' },\n  // can i sleep, would you look\n  { match: '#Modal #Noun [%Noun|Verb%]', group: 0, tag: 'Infinitive', reason: 'would-you-look' },\n  // is just spam\n  { match: '#Copula just [#Infinitive]', group: 0, tag: 'Noun', reason: 'is-just-spam' },\n  // request copies\n  { match: '^%Noun|Verb% %Plural|Verb%', tag: 'Imperative #Plural', reason: 'request-copies' },\n  // homemade pickles and drinks\n  { match: '#Adjective #Plural and [%Plural|Verb%]', group: 0, tag: '#Plural', reason: 'pickles-and-drinks' },\n  // the 1968 film\n  { match: '#Determiner #Year [#Verb]', group: 0, tag: 'Noun', reason: 'the-1968-film' },\n  // the break up\n  { match: '#Determiner [#PhrasalVerb #Particle]', group: 0, tag: 'Noun', reason: 'the-break-up' },\n  // the individual goals\n  { match: '#Determiner [%Adj|Noun%] #Noun', group: 0, tag: 'Adjective', notIf: '(#Pronoun|#Possessive|#ProperNoun)', reason: 'the-individual-goals' },\n  // work or prepare\n  { match: '[%Noun|Verb%] or #Infinitive', group: 0, tag: 'Infinitive', reason: 'work-or-prepare' },\n  // to give thanks\n  { match: 'to #Infinitive [#PresentTense]', group: 0, tag: 'Noun', notIf: '(#Gerund|#Copula|help)', reason: 'to-give-thanks' },\n  // kills me\n  { match: '[#Noun] me', group: 0, tag: 'Verb', reason: 'kills-me' },\n  // removes wrinkles\n  { match: '%Plural|Verb% %Plural|Verb%', tag: '#PresentTense #Plural', reason: 'removes-wrinkles' },\n]\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}