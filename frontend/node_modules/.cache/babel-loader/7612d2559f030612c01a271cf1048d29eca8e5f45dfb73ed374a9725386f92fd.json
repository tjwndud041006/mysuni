{"ast":null,"code":"import { getGreedy } from './logic/greedy.js';\n\n// keep 'foo+' or 'foo*' going..\nconst greedyMatch = function (state) {\n  const {\n    regs,\n    phrase_length\n  } = state;\n  let reg = regs[state.r];\n  state.t = getGreedy(state, regs[state.r + 1]);\n  if (state.t === null) {\n    return null; //greedy was too short\n  }\n  // foo{2,4} - has a greed-minimum\n  if (reg.min && reg.min > state.t) {\n    return null; //greedy was too short\n  }\n  // 'foo+$' - if also an end-anchor, ensure we really reached the end\n  if (reg.end === true && state.start_i + state.t !== phrase_length) {\n    return null; //greedy didn't reach the end\n  }\n  return true;\n};\nexport default greedyMatch;","map":{"version":3,"names":["getGreedy","greedyMatch","state","regs","phrase_length","reg","r","t","min","end","start_i"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/match/methods/match/steps/greedy-match.js"],"sourcesContent":["import { getGreedy } from './logic/greedy.js'\n\n// keep 'foo+' or 'foo*' going..\nconst greedyMatch = function (state) {\n  const { regs, phrase_length } = state\n  let reg = regs[state.r]\n  state.t = getGreedy(state, regs[state.r + 1])\n  if (state.t === null) {\n    return null //greedy was too short\n  }\n  // foo{2,4} - has a greed-minimum\n  if (reg.min && reg.min > state.t) {\n    return null //greedy was too short\n  }\n  // 'foo+$' - if also an end-anchor, ensure we really reached the end\n  if (reg.end === true && state.start_i + state.t !== phrase_length) {\n    return null //greedy didn't reach the end\n  }\n  return true\n}\nexport default greedyMatch"],"mappings":"AAAA,SAASA,SAAS,QAAQ,mBAAmB;;AAE7C;AACA,MAAMC,WAAW,GAAG,SAAAA,CAAUC,KAAK,EAAE;EACnC,MAAM;IAAEC,IAAI;IAAEC;EAAc,CAAC,GAAGF,KAAK;EACrC,IAAIG,GAAG,GAAGF,IAAI,CAACD,KAAK,CAACI,CAAC,CAAC;EACvBJ,KAAK,CAACK,CAAC,GAAGP,SAAS,CAACE,KAAK,EAAEC,IAAI,CAACD,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAAC;EAC7C,IAAIJ,KAAK,CAACK,CAAC,KAAK,IAAI,EAAE;IACpB,OAAO,IAAI,EAAC;EACd;EACA;EACA,IAAIF,GAAG,CAACG,GAAG,IAAIH,GAAG,CAACG,GAAG,GAAGN,KAAK,CAACK,CAAC,EAAE;IAChC,OAAO,IAAI,EAAC;EACd;EACA;EACA,IAAIF,GAAG,CAACI,GAAG,KAAK,IAAI,IAAIP,KAAK,CAACQ,OAAO,GAAGR,KAAK,CAACK,CAAC,KAAKH,aAAa,EAAE;IACjE,OAAO,IAAI,EAAC;EACd;EACA,OAAO,IAAI;AACb,CAAC;AACD,eAAeH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}