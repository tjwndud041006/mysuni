{"ast":null,"code":"import build from './buildTrie/index.js';\nimport scan from './scan.js';\nconst isObject = val => {\n  return Object.prototype.toString.call(val) === '[object Object]';\n};\nexport default function (View) {\n  /** find all matches in this document */\n  View.prototype.lookup = function (input, opts = {}) {\n    if (!input) {\n      return this.none();\n    }\n    if (typeof input === 'string') {\n      input = [input];\n    }\n    let trie = isObject(input) ? input : build(input, this.world);\n    let res = scan(this, trie, opts);\n    res = res.settle();\n    return res;\n  };\n}","map":{"version":3,"names":["build","scan","isObject","val","Object","prototype","toString","call","View","lookup","input","opts","none","trie","world","res","settle"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/lookup/api/index.js"],"sourcesContent":["import build from './buildTrie/index.js'\nimport scan from './scan.js'\n\nconst isObject = val => {\n  return Object.prototype.toString.call(val) === '[object Object]'\n}\n\nexport default function (View) {\n\n  /** find all matches in this document */\n  View.prototype.lookup = function (input, opts = {}) {\n    if (!input) {\n      return this.none()\n    }\n    if (typeof input === 'string') {\n      input = [input]\n    }\n    let trie = isObject(input) ? input : build(input, this.world)\n    let res = scan(this, trie, opts)\n    res = res.settle()\n    return res\n  }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,sBAAsB;AACxC,OAAOC,IAAI,MAAM,WAAW;AAE5B,MAAMC,QAAQ,GAAGC,GAAG,IAAI;EACtB,OAAOC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,GAAG,CAAC,KAAK,iBAAiB;AAClE,CAAC;AAED,eAAe,UAAUK,IAAI,EAAE;EAE7B;EACAA,IAAI,CAACH,SAAS,CAACI,MAAM,GAAG,UAAUC,KAAK,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;IAClD,IAAI,CAACD,KAAK,EAAE;MACV,OAAO,IAAI,CAACE,IAAI,CAAC,CAAC;IACpB;IACA,IAAI,OAAOF,KAAK,KAAK,QAAQ,EAAE;MAC7BA,KAAK,GAAG,CAACA,KAAK,CAAC;IACjB;IACA,IAAIG,IAAI,GAAGX,QAAQ,CAACQ,KAAK,CAAC,GAAGA,KAAK,GAAGV,KAAK,CAACU,KAAK,EAAE,IAAI,CAACI,KAAK,CAAC;IAC7D,IAAIC,GAAG,GAAGd,IAAI,CAAC,IAAI,EAAEY,IAAI,EAAEF,IAAI,CAAC;IAChCI,GAAG,GAAGA,GAAG,CAACC,MAAM,CAAC,CAAC;IAClB,OAAOD,GAAG;EACZ,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}