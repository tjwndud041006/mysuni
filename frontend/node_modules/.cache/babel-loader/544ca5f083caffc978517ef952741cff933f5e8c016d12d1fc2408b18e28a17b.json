{"ast":null,"code":"const before = function (regs, group, opts) {\n  const {\n    indexN\n  } = this.methods.one.pointer;\n  let pre = [];\n  let byN = indexN(this.fullPointer);\n  Object.keys(byN).forEach(k => {\n    // check only the earliest match in the sentence\n    let first = byN[k].sort((a, b) => a[1] > b[1] ? 1 : -1)[0];\n    if (first[1] > 0) {\n      pre.push([first[0], 0, first[1]]);\n    }\n  });\n  let preWords = this.toView(pre);\n  if (!regs) {\n    return preWords;\n  }\n  return preWords.match(regs, group, opts);\n};\nconst after = function (regs, group, opts) {\n  const {\n    indexN\n  } = this.methods.one.pointer;\n  let post = [];\n  let byN = indexN(this.fullPointer);\n  let document = this.document;\n  Object.keys(byN).forEach(k => {\n    // check only the latest match in the sentence\n    let last = byN[k].sort((a, b) => a[1] > b[1] ? -1 : 1)[0];\n    let [n,, end] = last;\n    if (end < document[n].length) {\n      post.push([n, end, document[n].length]);\n    }\n  });\n  let postWords = this.toView(post);\n  if (!regs) {\n    return postWords;\n  }\n  return postWords.match(regs, group, opts);\n};\nconst growLeft = function (regs, group, opts) {\n  if (typeof regs === 'string') {\n    regs = this.world.methods.one.parseMatch(regs, opts, this.world);\n  }\n  regs[regs.length - 1].end = true; // ensure matches are beside us ←\n  let ptrs = this.fullPointer;\n  this.forEach((m, n) => {\n    let more = m.before(regs, group);\n    if (more.found) {\n      let terms = more.terms();\n      ptrs[n][1] -= terms.length;\n      ptrs[n][3] = terms.docs[0][0].id;\n    }\n  });\n  return this.update(ptrs);\n};\nconst growRight = function (regs, group, opts) {\n  if (typeof regs === 'string') {\n    regs = this.world.methods.one.parseMatch(regs, opts, this.world);\n  }\n  regs[0].start = true; // ensure matches are beside us →\n  let ptrs = this.fullPointer;\n  this.forEach((m, n) => {\n    let more = m.after(regs, group);\n    if (more.found) {\n      let terms = more.terms();\n      ptrs[n][2] += terms.length;\n      ptrs[n][4] = null; //remove end-id\n    }\n  });\n  return this.update(ptrs);\n};\nconst grow = function (regs, group, opts) {\n  return this.growRight(regs, group, opts).growLeft(regs, group, opts);\n};\nexport default {\n  before,\n  after,\n  growLeft,\n  growRight,\n  grow\n};","map":{"version":3,"names":["before","regs","group","opts","indexN","methods","one","pointer","pre","byN","fullPointer","Object","keys","forEach","k","first","sort","a","b","push","preWords","toView","match","after","post","document","last","n","end","length","postWords","growLeft","world","parseMatch","ptrs","m","more","found","terms","docs","id","update","growRight","start","grow"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/match/api/lookaround.js"],"sourcesContent":["const before = function (regs, group, opts) {\n  const { indexN } = this.methods.one.pointer\n  let pre = []\n  let byN = indexN(this.fullPointer)\n  Object.keys(byN).forEach(k => {\n    // check only the earliest match in the sentence\n    let first = byN[k].sort((a, b) => (a[1] > b[1] ? 1 : -1))[0]\n    if (first[1] > 0) {\n      pre.push([first[0], 0, first[1]])\n    }\n  })\n  let preWords = this.toView(pre)\n  if (!regs) {\n    return preWords\n  }\n  return preWords.match(regs, group, opts)\n}\n\nconst after = function (regs, group, opts) {\n  const { indexN } = this.methods.one.pointer\n  let post = []\n  let byN = indexN(this.fullPointer)\n  let document = this.document\n  Object.keys(byN).forEach(k => {\n    // check only the latest match in the sentence\n    let last = byN[k].sort((a, b) => (a[1] > b[1] ? -1 : 1))[0]\n    let [n, , end] = last\n    if (end < document[n].length) {\n      post.push([n, end, document[n].length])\n    }\n  })\n  let postWords = this.toView(post)\n  if (!regs) {\n    return postWords\n  }\n  return postWords.match(regs, group, opts)\n}\n\nconst growLeft = function (regs, group, opts) {\n  if (typeof regs === 'string') {\n    regs = this.world.methods.one.parseMatch(regs, opts, this.world)\n  }\n  regs[regs.length - 1].end = true // ensure matches are beside us ←\n  let ptrs = this.fullPointer\n  this.forEach((m, n) => {\n    let more = m.before(regs, group)\n    if (more.found) {\n      let terms = more.terms()\n      ptrs[n][1] -= terms.length\n      ptrs[n][3] = terms.docs[0][0].id\n    }\n  })\n  return this.update(ptrs)\n}\n\nconst growRight = function (regs, group, opts) {\n  if (typeof regs === 'string') {\n    regs = this.world.methods.one.parseMatch(regs, opts, this.world)\n  }\n  regs[0].start = true // ensure matches are beside us →\n  let ptrs = this.fullPointer\n  this.forEach((m, n) => {\n    let more = m.after(regs, group)\n    if (more.found) {\n      let terms = more.terms()\n      ptrs[n][2] += terms.length\n      ptrs[n][4] = null //remove end-id\n    }\n  })\n  return this.update(ptrs)\n}\n\nconst grow = function (regs, group, opts) {\n  return this.growRight(regs, group, opts).growLeft(regs, group, opts)\n}\n\nexport default { before, after, growLeft, growRight, grow }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}