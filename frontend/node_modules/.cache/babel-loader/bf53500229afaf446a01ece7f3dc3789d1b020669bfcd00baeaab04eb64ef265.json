{"ast":null,"code":"// 01- full-word exceptions\nconst checkEx = function (str, ex = {}) {\n  if (ex.hasOwnProperty(str)) {\n    return ex[str];\n  }\n  return null;\n};\n\n// 02- suffixes that pass our word through\nconst checkSame = function (str, same = []) {\n  for (let i = 0; i < same.length; i += 1) {\n    if (str.endsWith(same[i])) {\n      return str;\n    }\n  }\n  return null;\n};\n\n// 03- check rules - longest first\nconst checkRules = function (str, fwd, both = {}) {\n  fwd = fwd || {};\n  let max = str.length - 1;\n  // look for a matching suffix\n  for (let i = max; i >= 1; i -= 1) {\n    let size = str.length - i;\n    let suff = str.substring(size, str.length);\n    // check fwd rules, first\n    if (fwd.hasOwnProperty(suff) === true) {\n      return str.slice(0, size) + fwd[suff];\n    }\n    // check shared rules\n    if (both.hasOwnProperty(suff) === true) {\n      return str.slice(0, size) + both[suff];\n    }\n  }\n  // try a fallback transform\n  if (fwd.hasOwnProperty('')) {\n    return str += fwd[''];\n  }\n  if (both.hasOwnProperty('')) {\n    return str += both[''];\n  }\n  return null;\n};\n\n//sweep-through all suffixes\nconst convert = function (str = '', model = {}) {\n  // 01- check exceptions\n  let out = checkEx(str, model.ex);\n  // 02 - check same\n  out = out || checkSame(str, model.same);\n  // check forward and both rules\n  out = out || checkRules(str, model.fwd, model.both);\n  //return unchanged\n  out = out || str;\n  return out;\n};\nexport default convert;","map":{"version":3,"names":["checkEx","str","ex","hasOwnProperty","checkSame","same","i","length","endsWith","checkRules","fwd","both","max","size","suff","substring","slice","convert","model","out"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/suffix-thumb/src/convert/index.js"],"sourcesContent":["\n// 01- full-word exceptions\nconst checkEx = function (str, ex = {}) {\n  if (ex.hasOwnProperty(str)) {\n    return ex[str]\n  }\n  return null\n}\n\n// 02- suffixes that pass our word through\nconst checkSame = function (str, same = []) {\n  for (let i = 0; i < same.length; i += 1) {\n    if (str.endsWith(same[i])) {\n      return str\n    }\n  }\n  return null\n}\n\n// 03- check rules - longest first\nconst checkRules = function (str, fwd, both = {}) {\n  fwd = fwd || {}\n  let max = str.length - 1\n  // look for a matching suffix\n  for (let i = max; i >= 1; i -= 1) {\n    let size = str.length - i\n    let suff = str.substring(size, str.length)\n    // check fwd rules, first\n    if (fwd.hasOwnProperty(suff) === true) {\n      return str.slice(0, size) + fwd[suff]\n    }\n    // check shared rules\n    if (both.hasOwnProperty(suff) === true) {\n      return str.slice(0, size) + both[suff]\n    }\n  }\n  // try a fallback transform\n  if (fwd.hasOwnProperty('')) {\n    return str += fwd['']\n  }\n  if (both.hasOwnProperty('')) {\n    return str += both['']\n  }\n  return null\n}\n\n//sweep-through all suffixes\nconst convert = function (str = '', model = {}) {\n  // 01- check exceptions\n  let out = checkEx(str, model.ex)\n  // 02 - check same\n  out = out || checkSame(str, model.same)\n  // check forward and both rules\n  out = out || checkRules(str, model.fwd, model.both)\n  //return unchanged\n  out = out || str\n  return out\n}\nexport default convert"],"mappings":"AACA;AACA,MAAMA,OAAO,GAAG,SAAAA,CAAUC,GAAG,EAAEC,EAAE,GAAG,CAAC,CAAC,EAAE;EACtC,IAAIA,EAAE,CAACC,cAAc,CAACF,GAAG,CAAC,EAAE;IAC1B,OAAOC,EAAE,CAACD,GAAG,CAAC;EAChB;EACA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,MAAMG,SAAS,GAAG,SAAAA,CAAUH,GAAG,EAAEI,IAAI,GAAG,EAAE,EAAE;EAC1C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACvC,IAAIL,GAAG,CAACO,QAAQ,CAACH,IAAI,CAACC,CAAC,CAAC,CAAC,EAAE;MACzB,OAAOL,GAAG;IACZ;EACF;EACA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,MAAMQ,UAAU,GAAG,SAAAA,CAAUR,GAAG,EAAES,GAAG,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EAChDD,GAAG,GAAGA,GAAG,IAAI,CAAC,CAAC;EACf,IAAIE,GAAG,GAAGX,GAAG,CAACM,MAAM,GAAG,CAAC;EACxB;EACA,KAAK,IAAID,CAAC,GAAGM,GAAG,EAAEN,CAAC,IAAI,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;IAChC,IAAIO,IAAI,GAAGZ,GAAG,CAACM,MAAM,GAAGD,CAAC;IACzB,IAAIQ,IAAI,GAAGb,GAAG,CAACc,SAAS,CAACF,IAAI,EAAEZ,GAAG,CAACM,MAAM,CAAC;IAC1C;IACA,IAAIG,GAAG,CAACP,cAAc,CAACW,IAAI,CAAC,KAAK,IAAI,EAAE;MACrC,OAAOb,GAAG,CAACe,KAAK,CAAC,CAAC,EAAEH,IAAI,CAAC,GAAGH,GAAG,CAACI,IAAI,CAAC;IACvC;IACA;IACA,IAAIH,IAAI,CAACR,cAAc,CAACW,IAAI,CAAC,KAAK,IAAI,EAAE;MACtC,OAAOb,GAAG,CAACe,KAAK,CAAC,CAAC,EAAEH,IAAI,CAAC,GAAGF,IAAI,CAACG,IAAI,CAAC;IACxC;EACF;EACA;EACA,IAAIJ,GAAG,CAACP,cAAc,CAAC,EAAE,CAAC,EAAE;IAC1B,OAAOF,GAAG,IAAIS,GAAG,CAAC,EAAE,CAAC;EACvB;EACA,IAAIC,IAAI,CAACR,cAAc,CAAC,EAAE,CAAC,EAAE;IAC3B,OAAOF,GAAG,IAAIU,IAAI,CAAC,EAAE,CAAC;EACxB;EACA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,MAAMM,OAAO,GAAG,SAAAA,CAAUhB,GAAG,GAAG,EAAE,EAAEiB,KAAK,GAAG,CAAC,CAAC,EAAE;EAC9C;EACA,IAAIC,GAAG,GAAGnB,OAAO,CAACC,GAAG,EAAEiB,KAAK,CAAChB,EAAE,CAAC;EAChC;EACAiB,GAAG,GAAGA,GAAG,IAAIf,SAAS,CAACH,GAAG,EAAEiB,KAAK,CAACb,IAAI,CAAC;EACvC;EACAc,GAAG,GAAGA,GAAG,IAAIV,UAAU,CAACR,GAAG,EAAEiB,KAAK,CAACR,GAAG,EAAEQ,KAAK,CAACP,IAAI,CAAC;EACnD;EACAQ,GAAG,GAAGA,GAAG,IAAIlB,GAAG;EAChB,OAAOkB,GAAG;AACZ,CAAC;AACD,eAAeF,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}