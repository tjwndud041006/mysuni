{"ast":null,"code":"import fastTag from '../_fastTag.js';\nimport fillTags from '../3rd-pass/_fillTags.js';\nconst titleCase = /^\\p{Lu}[\\p{Ll}'’]/u;\nconst hasNumber = /[0-9]/;\nconst notProper = ['Date', 'Month', 'WeekDay', 'Unit', 'Expression'];\n\n// roman numeral by regex\nconst hasIVX = /[IVX]/; // does it ~look like~ a roman numeral?\n// quick-version\nconst romanNumeral = /^[IVXLCDM]{2,}$/;\n// https://stackoverflow.com/a/267405/168877\nconst romanNumValid = /^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/;\nconst nope = {\n  li: true,\n  dc: true,\n  md: true,\n  dm: true,\n  ml: true\n};\n\n// if it's a unknown titlecase word, it's a propernoun\nconst checkCase = function (terms, i, model) {\n  let term = terms[i];\n  // assume terms are already indexed\n  term.index = term.index || [0, 0];\n  let index = term.index[1];\n  let str = term.text || ''; //need case info\n  // titlecase and not first word of sentence\n  if (index !== 0 && titleCase.test(str) === true && hasNumber.test(str) === false) {\n    // skip Dates and stuff\n    if (notProper.find(tag => term.tags.has(tag))) {\n      return null;\n    }\n    // first word in a quotation?\n    if (term.pre.match(/[\"']$/)) {\n      return null;\n    }\n    if (term.normal === 'the') {\n      return null;\n    }\n    fillTags(terms, i, model);\n    if (!term.tags.has('Noun') && !term.frozen) {\n      term.tags.clear();\n    }\n    fastTag(term, 'ProperNoun', '2-titlecase');\n    return true;\n  }\n  //roman numberals - XVII\n  if (str.length >= 2 && romanNumeral.test(str) && hasIVX.test(str) && romanNumValid.test(str) && !nope[term.normal]) {\n    fastTag(term, 'RomanNumeral', '2-xvii');\n    return true;\n  }\n  return null;\n};\nexport default checkCase;","map":{"version":3,"names":["fastTag","fillTags","titleCase","hasNumber","notProper","hasIVX","romanNumeral","romanNumValid","nope","li","dc","md","dm","ml","checkCase","terms","i","model","term","index","str","text","test","find","tag","tags","has","pre","match","normal","frozen","clear","length"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/compute/tagger/2nd-pass/01-case.js"],"sourcesContent":["import fastTag from '../_fastTag.js'\nimport fillTags from '../3rd-pass/_fillTags.js'\n\nconst titleCase = /^\\p{Lu}[\\p{Ll}'’]/u\nconst hasNumber = /[0-9]/\nconst notProper = ['Date', 'Month', 'WeekDay', 'Unit', 'Expression']\n\n// roman numeral by regex\nconst hasIVX = /[IVX]/ // does it ~look like~ a roman numeral?\n// quick-version\nconst romanNumeral = /^[IVXLCDM]{2,}$/\n// https://stackoverflow.com/a/267405/168877\nconst romanNumValid = /^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/\nconst nope = {\n  li: true,\n  dc: true,\n  md: true,\n  dm: true,\n  ml: true,\n}\n\n// if it's a unknown titlecase word, it's a propernoun\nconst checkCase = function (terms, i, model) {\n  let term = terms[i]\n  // assume terms are already indexed\n  term.index = term.index || [0, 0]\n  let index = term.index[1]\n  let str = term.text || '' //need case info\n  // titlecase and not first word of sentence\n  if (index !== 0 && titleCase.test(str) === true && hasNumber.test(str) === false) {\n    // skip Dates and stuff\n    if (notProper.find(tag => term.tags.has(tag))) {\n      return null\n    }\n    // first word in a quotation?\n    if (term.pre.match(/[\"']$/)) {\n      return null\n    }\n    if (term.normal === 'the') {\n      return null\n    }\n    fillTags(terms, i, model)\n    if (!term.tags.has('Noun') && !term.frozen) {\n      term.tags.clear()\n    }\n    fastTag(term, 'ProperNoun', '2-titlecase')\n    return true\n  }\n  //roman numberals - XVII\n  if (str.length >= 2 && romanNumeral.test(str) && hasIVX.test(str) && romanNumValid.test(str) && !nope[term.normal]) {\n    fastTag(term, 'RomanNumeral', '2-xvii')\n    return true\n  }\n\n  return null\n}\nexport default checkCase\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,gBAAgB;AACpC,OAAOC,QAAQ,MAAM,0BAA0B;AAE/C,MAAMC,SAAS,GAAG,oBAAoB;AACtC,MAAMC,SAAS,GAAG,OAAO;AACzB,MAAMC,SAAS,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,YAAY,CAAC;;AAEpE;AACA,MAAMC,MAAM,GAAG,OAAO,EAAC;AACvB;AACA,MAAMC,YAAY,GAAG,iBAAiB;AACtC;AACA,MAAMC,aAAa,GAAG,0DAA0D;AAChF,MAAMC,IAAI,GAAG;EACXC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE;AACN,CAAC;;AAED;AACA,MAAMC,SAAS,GAAG,SAAAA,CAAUC,KAAK,EAAEC,CAAC,EAAEC,KAAK,EAAE;EAC3C,IAAIC,IAAI,GAAGH,KAAK,CAACC,CAAC,CAAC;EACnB;EACAE,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACC,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACjC,IAAIA,KAAK,GAAGD,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;EACzB,IAAIC,GAAG,GAAGF,IAAI,CAACG,IAAI,IAAI,EAAE,EAAC;EAC1B;EACA,IAAIF,KAAK,KAAK,CAAC,IAAIjB,SAAS,CAACoB,IAAI,CAACF,GAAG,CAAC,KAAK,IAAI,IAAIjB,SAAS,CAACmB,IAAI,CAACF,GAAG,CAAC,KAAK,KAAK,EAAE;IAChF;IACA,IAAIhB,SAAS,CAACmB,IAAI,CAACC,GAAG,IAAIN,IAAI,CAACO,IAAI,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC,EAAE;MAC7C,OAAO,IAAI;IACb;IACA;IACA,IAAIN,IAAI,CAACS,GAAG,CAACC,KAAK,CAAC,OAAO,CAAC,EAAE;MAC3B,OAAO,IAAI;IACb;IACA,IAAIV,IAAI,CAACW,MAAM,KAAK,KAAK,EAAE;MACzB,OAAO,IAAI;IACb;IACA5B,QAAQ,CAACc,KAAK,EAAEC,CAAC,EAAEC,KAAK,CAAC;IACzB,IAAI,CAACC,IAAI,CAACO,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,IAAI,CAACR,IAAI,CAACY,MAAM,EAAE;MAC1CZ,IAAI,CAACO,IAAI,CAACM,KAAK,CAAC,CAAC;IACnB;IACA/B,OAAO,CAACkB,IAAI,EAAE,YAAY,EAAE,aAAa,CAAC;IAC1C,OAAO,IAAI;EACb;EACA;EACA,IAAIE,GAAG,CAACY,MAAM,IAAI,CAAC,IAAI1B,YAAY,CAACgB,IAAI,CAACF,GAAG,CAAC,IAAIf,MAAM,CAACiB,IAAI,CAACF,GAAG,CAAC,IAAIb,aAAa,CAACe,IAAI,CAACF,GAAG,CAAC,IAAI,CAACZ,IAAI,CAACU,IAAI,CAACW,MAAM,CAAC,EAAE;IAClH7B,OAAO,CAACkB,IAAI,EAAE,cAAc,EAAE,QAAQ,CAAC;IACvC,OAAO,IAAI;EACb;EAEA,OAAO,IAAI;AACb,CAAC;AACD,eAAeJ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}