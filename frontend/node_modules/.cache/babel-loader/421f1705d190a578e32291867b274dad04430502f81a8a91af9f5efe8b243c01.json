{"ast":null,"code":"import compute from './compute.js';\nimport debug from './debug.js';\nexport default {\n  // add .compute('freeze')\n  compute,\n  mutate: world => {\n    const methods = world.methods.one;\n    // add @isFrozen method\n    methods.termMethods.isFrozen = term => term.frozen === true;\n    // adds `.debug('frozen')`\n    methods.debug.freeze = debug;\n    methods.debug.frozen = debug;\n  },\n  api: function (View) {\n    // set all terms to reject any desctructive tags\n    View.prototype.freeze = function () {\n      this.docs.forEach(ts => {\n        ts.forEach(term => {\n          term.frozen = true;\n        });\n      });\n      return this;\n    };\n    // reset all terms to allow  any desctructive tags\n    View.prototype.unfreeze = function () {\n      this.compute('unfreeze');\n    };\n    // return all frozen terms\n    View.prototype.isFrozen = function () {\n      return this.match('@isFrozen+');\n    };\n  },\n  // run it in init\n  hooks: ['freeze']\n};","map":{"version":3,"names":["compute","debug","mutate","world","methods","one","termMethods","isFrozen","term","frozen","freeze","api","View","prototype","docs","forEach","ts","unfreeze","match","hooks"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/freeze/plugin.js"],"sourcesContent":["import compute from './compute.js'\nimport debug from './debug.js'\n\nexport default {\n  // add .compute('freeze')\n  compute,\n\n  mutate: world => {\n    const methods = world.methods.one\n    // add @isFrozen method\n    methods.termMethods.isFrozen = term => term.frozen === true\n    // adds `.debug('frozen')`\n    methods.debug.freeze = debug\n    methods.debug.frozen = debug\n  },\n\n  api: function (View) {\n    // set all terms to reject any desctructive tags\n    View.prototype.freeze = function () {\n      this.docs.forEach(ts => {\n        ts.forEach(term => {\n          term.frozen = true\n        })\n      })\n      return this\n    }\n    // reset all terms to allow  any desctructive tags\n    View.prototype.unfreeze = function () {\n      this.compute('unfreeze')\n    }\n    // return all frozen terms\n    View.prototype.isFrozen = function () {\n      return this.match('@isFrozen+')\n    }\n  },\n  // run it in init\n  hooks: ['freeze'],\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;AAClC,OAAOC,KAAK,MAAM,YAAY;AAE9B,eAAe;EACb;EACAD,OAAO;EAEPE,MAAM,EAAEC,KAAK,IAAI;IACf,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAO,CAACC,GAAG;IACjC;IACAD,OAAO,CAACE,WAAW,CAACC,QAAQ,GAAGC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,IAAI;IAC3D;IACAL,OAAO,CAACH,KAAK,CAACS,MAAM,GAAGT,KAAK;IAC5BG,OAAO,CAACH,KAAK,CAACQ,MAAM,GAAGR,KAAK;EAC9B,CAAC;EAEDU,GAAG,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACnB;IACAA,IAAI,CAACC,SAAS,CAACH,MAAM,GAAG,YAAY;MAClC,IAAI,CAACI,IAAI,CAACC,OAAO,CAACC,EAAE,IAAI;QACtBA,EAAE,CAACD,OAAO,CAACP,IAAI,IAAI;UACjBA,IAAI,CAACC,MAAM,GAAG,IAAI;QACpB,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAO,IAAI;IACb,CAAC;IACD;IACAG,IAAI,CAACC,SAAS,CAACI,QAAQ,GAAG,YAAY;MACpC,IAAI,CAACjB,OAAO,CAAC,UAAU,CAAC;IAC1B,CAAC;IACD;IACAY,IAAI,CAACC,SAAS,CAACN,QAAQ,GAAG,YAAY;MACpC,OAAO,IAAI,CAACW,KAAK,CAAC,YAAY,CAAC;IACjC,CAAC;EACH,CAAC;EACD;EACAC,KAAK,EAAE,CAAC,QAAQ;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}