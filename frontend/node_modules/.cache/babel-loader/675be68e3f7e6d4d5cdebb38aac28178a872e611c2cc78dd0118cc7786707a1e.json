{"ast":null,"code":"/*\nCopyright (c) 2021, Hugo W.L. ter Doest\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n'use strict';\n\nfunction getBigrams(str) {\n  let str1 = str;\n  // pad with a space if str consists of one character\n  if (str.length === 1) {\n    str1 = str + ' ';\n  }\n  const bigrams = new Set();\n  const length = str1.length;\n  for (let i = 0; i < length - 1; i++) {\n    const bigram = str1.slice(i, i + 2);\n    bigrams.add(bigram);\n  }\n  return bigrams;\n}\nfunction intersect(set1, set2) {\n  const intersection = new Set();\n  set1.forEach(value => {\n    if (set2.has(value)) {\n      intersection.add(value);\n    }\n  });\n  return intersection;\n}\n\n// Perform some sanitization steps\nfunction sanitize(str) {\n  // Turn characters to lower string, remove space at the beginning and end,\n  // replace multiple spaces in the middle by single spaces\n  return str.toLowerCase().replace(/\\s+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n}\nfunction diceCoefficient(str1, str2) {\n  const sanitizedStr1 = sanitize(str1);\n  const sanitizedStr2 = sanitize(str2);\n  const bigrams1 = getBigrams(sanitizedStr1);\n  const bigrams2 = getBigrams(sanitizedStr2);\n  return 2 * intersect(bigrams1, bigrams2).size / (bigrams1.size + bigrams2.size);\n}\nmodule.exports = diceCoefficient;","map":{"version":3,"names":["getBigrams","str","str1","length","bigrams","Set","i","bigram","slice","add","intersect","set1","set2","intersection","forEach","value","has","sanitize","toLowerCase","replace","diceCoefficient","str2","sanitizedStr1","sanitizedStr2","bigrams1","bigrams2","size","module","exports"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/natural/lib/natural/distance/dice_coefficient.js"],"sourcesContent":["/*\nCopyright (c) 2021, Hugo W.L. ter Doest\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n'use strict'\n\nfunction getBigrams (str) {\n  let str1 = str\n  // pad with a space if str consists of one character\n  if (str.length === 1) {\n    str1 = str + ' '\n  }\n  const bigrams = new Set()\n  const length = str1.length\n  for (let i = 0; i < length - 1; i++) {\n    const bigram = str1.slice(i, i + 2)\n    bigrams.add(bigram)\n  }\n  return bigrams\n}\n\nfunction intersect (set1, set2) {\n  const intersection = new Set()\n  set1.forEach(value => {\n    if (set2.has(value)) {\n      intersection.add(value)\n    }\n  })\n  return intersection\n}\n\n// Perform some sanitization steps\nfunction sanitize (str) {\n  // Turn characters to lower string, remove space at the beginning and end,\n  // replace multiple spaces in the middle by single spaces\n  return str.toLowerCase().replace(/\\s+/g, ' ').replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction diceCoefficient (str1, str2) {\n  const sanitizedStr1 = sanitize(str1)\n  const sanitizedStr2 = sanitize(str2)\n  const bigrams1 = getBigrams(sanitizedStr1)\n  const bigrams2 = getBigrams(sanitizedStr2)\n  return (2 * intersect(bigrams1, bigrams2).size) / (bigrams1.size + bigrams2.size)\n}\n\nmodule.exports = diceCoefficient\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,SAASA,UAAUA,CAAEC,GAAG,EAAE;EACxB,IAAIC,IAAI,GAAGD,GAAG;EACd;EACA,IAAIA,GAAG,CAACE,MAAM,KAAK,CAAC,EAAE;IACpBD,IAAI,GAAGD,GAAG,GAAG,GAAG;EAClB;EACA,MAAMG,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;EACzB,MAAMF,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,GAAG,CAAC,EAAEG,CAAC,EAAE,EAAE;IACnC,MAAMC,MAAM,GAAGL,IAAI,CAACM,KAAK,CAACF,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;IACnCF,OAAO,CAACK,GAAG,CAACF,MAAM,CAAC;EACrB;EACA,OAAOH,OAAO;AAChB;AAEA,SAASM,SAASA,CAAEC,IAAI,EAAEC,IAAI,EAAE;EAC9B,MAAMC,YAAY,GAAG,IAAIR,GAAG,CAAC,CAAC;EAC9BM,IAAI,CAACG,OAAO,CAACC,KAAK,IAAI;IACpB,IAAIH,IAAI,CAACI,GAAG,CAACD,KAAK,CAAC,EAAE;MACnBF,YAAY,CAACJ,GAAG,CAACM,KAAK,CAAC;IACzB;EACF,CAAC,CAAC;EACF,OAAOF,YAAY;AACrB;;AAEA;AACA,SAASI,QAAQA,CAAEhB,GAAG,EAAE;EACtB;EACA;EACA,OAAOA,GAAG,CAACiB,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;AACzE;AAEA,SAASC,eAAeA,CAAElB,IAAI,EAAEmB,IAAI,EAAE;EACpC,MAAMC,aAAa,GAAGL,QAAQ,CAACf,IAAI,CAAC;EACpC,MAAMqB,aAAa,GAAGN,QAAQ,CAACI,IAAI,CAAC;EACpC,MAAMG,QAAQ,GAAGxB,UAAU,CAACsB,aAAa,CAAC;EAC1C,MAAMG,QAAQ,GAAGzB,UAAU,CAACuB,aAAa,CAAC;EAC1C,OAAQ,CAAC,GAAGb,SAAS,CAACc,QAAQ,EAAEC,QAAQ,CAAC,CAACC,IAAI,IAAKF,QAAQ,CAACE,IAAI,GAAGD,QAAQ,CAACC,IAAI,CAAC;AACnF;AAEAC,MAAM,CAACC,OAAO,GAAGR,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}