{"ast":null,"code":"const isObject = function (item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n};\n\n// recursive merge of objects\nfunction mergeDeep(model, plugin) {\n  if (isObject(plugin)) {\n    for (const key in plugin) {\n      if (isObject(plugin[key])) {\n        if (!model[key]) Object.assign(model, {\n          [key]: {}\n        });\n        mergeDeep(model[key], plugin[key]); //recursion\n      } else {\n        Object.assign(model, {\n          [key]: plugin[key]\n        });\n      }\n    }\n  }\n  return model;\n}\n// const merged = mergeDeep({ a: 1 }, { b: { c: { d: { e: 12345 } } } })\n// console.dir(merged, { depth: 5 })\n\n// vroom\nfunction mergeQuick(model, plugin) {\n  for (const key in plugin) {\n    model[key] = model[key] || {};\n    Object.assign(model[key], plugin[key]);\n  }\n  return model;\n}\nconst addIrregulars = function (model, conj) {\n  let m = model.two.models || {};\n  Object.keys(conj).forEach(k => {\n    // verb forms\n    if (conj[k].pastTense) {\n      if (m.toPast) {\n        m.toPast.ex[k] = conj[k].pastTense;\n      }\n      if (m.fromPast) {\n        m.fromPast.ex[conj[k].pastTense] = k;\n      }\n    }\n    if (conj[k].presentTense) {\n      if (m.toPresent) {\n        m.toPresent.ex[k] = conj[k].presentTense;\n      }\n      if (m.fromPresent) {\n        m.fromPresent.ex[conj[k].presentTense] = k;\n      }\n    }\n    if (conj[k].gerund) {\n      if (m.toGerund) {\n        m.toGerund.ex[k] = conj[k].gerund;\n      }\n      if (m.fromGerund) {\n        m.fromGerund.ex[conj[k].gerund] = k;\n      }\n    }\n    // adjective forms\n    if (conj[k].comparative) {\n      if (m.toComparative) {\n        m.toComparative.ex[k] = conj[k].comparative;\n      }\n      if (m.fromComparative) {\n        m.fromComparative.ex[conj[k].comparative] = k;\n      }\n    }\n    if (conj[k].superlative) {\n      if (m.toSuperlative) {\n        m.toSuperlative.ex[k] = conj[k].superlative;\n      }\n      if (m.fromSuperlative) {\n        m.fromSuperlative.ex[conj[k].superlative] = k;\n      }\n    }\n  });\n};\nconst extend = function (plugin, world, View, nlp) {\n  const {\n    methods,\n    model,\n    compute,\n    hooks\n  } = world;\n  if (plugin.methods) {\n    mergeQuick(methods, plugin.methods);\n  }\n  if (plugin.model) {\n    mergeDeep(model, plugin.model);\n  }\n  if (plugin.irregulars) {\n    addIrregulars(model, plugin.irregulars);\n  }\n  // shallow-merge compute\n  if (plugin.compute) {\n    Object.assign(compute, plugin.compute);\n  }\n  // append new hooks\n  if (hooks) {\n    world.hooks = hooks.concat(plugin.hooks || []);\n  }\n  // assign new class methods\n  if (plugin.api) {\n    plugin.api(View);\n  }\n  if (plugin.lib) {\n    Object.keys(plugin.lib).forEach(k => nlp[k] = plugin.lib[k]);\n  }\n  if (plugin.tags) {\n    nlp.addTags(plugin.tags);\n  }\n  if (plugin.words) {\n    nlp.addWords(plugin.words);\n  }\n  if (plugin.frozen) {\n    nlp.addWords(plugin.frozen, true);\n  }\n  if (plugin.mutate) {\n    plugin.mutate(world, nlp);\n  }\n};\nexport default extend;","map":{"version":3,"names":["isObject","item","Array","isArray","mergeDeep","model","plugin","key","Object","assign","mergeQuick","addIrregulars","conj","m","two","models","keys","forEach","k","pastTense","toPast","ex","fromPast","presentTense","toPresent","fromPresent","gerund","toGerund","fromGerund","comparative","toComparative","fromComparative","superlative","toSuperlative","fromSuperlative","extend","world","View","nlp","methods","compute","hooks","irregulars","concat","api","lib","tags","addTags","words","addWords","frozen","mutate"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/API/extend.js"],"sourcesContent":["const isObject = function (item) {\n  return item && typeof item === 'object' && !Array.isArray(item)\n}\n\n// recursive merge of objects\nfunction mergeDeep(model, plugin) {\n  if (isObject(plugin)) {\n    for (const key in plugin) {\n      if (isObject(plugin[key])) {\n        if (!model[key]) Object.assign(model, { [key]: {} })\n        mergeDeep(model[key], plugin[key]) //recursion\n      } else {\n        Object.assign(model, { [key]: plugin[key] })\n      }\n    }\n  }\n  return model\n}\n// const merged = mergeDeep({ a: 1 }, { b: { c: { d: { e: 12345 } } } })\n// console.dir(merged, { depth: 5 })\n\n// vroom\nfunction mergeQuick(model, plugin) {\n  for (const key in plugin) {\n    model[key] = model[key] || {}\n    Object.assign(model[key], plugin[key])\n  }\n  return model\n}\n\nconst addIrregulars = function (model, conj) {\n  let m = model.two.models || {}\n  Object.keys(conj).forEach(k => {\n    // verb forms\n    if (conj[k].pastTense) {\n      if (m.toPast) {\n        m.toPast.ex[k] = conj[k].pastTense\n      }\n      if (m.fromPast) {\n        m.fromPast.ex[conj[k].pastTense] = k\n      }\n    }\n    if (conj[k].presentTense) {\n      if (m.toPresent) {\n        m.toPresent.ex[k] = conj[k].presentTense\n      }\n      if (m.fromPresent) {\n        m.fromPresent.ex[conj[k].presentTense] = k\n      }\n    }\n    if (conj[k].gerund) {\n      if (m.toGerund) {\n        m.toGerund.ex[k] = conj[k].gerund\n      }\n      if (m.fromGerund) {\n        m.fromGerund.ex[conj[k].gerund] = k\n      }\n    }\n    // adjective forms\n    if (conj[k].comparative) {\n      if (m.toComparative) {\n        m.toComparative.ex[k] = conj[k].comparative\n      }\n      if (m.fromComparative) {\n        m.fromComparative.ex[conj[k].comparative] = k\n      }\n    }\n    if (conj[k].superlative) {\n      if (m.toSuperlative) {\n        m.toSuperlative.ex[k] = conj[k].superlative\n      }\n      if (m.fromSuperlative) {\n        m.fromSuperlative.ex[conj[k].superlative] = k\n      }\n    }\n  })\n}\n\nconst extend = function (plugin, world, View, nlp) {\n  const { methods, model, compute, hooks } = world\n  if (plugin.methods) {\n    mergeQuick(methods, plugin.methods)\n  }\n  if (plugin.model) {\n    mergeDeep(model, plugin.model)\n  }\n  if (plugin.irregulars) {\n    addIrregulars(model, plugin.irregulars)\n  }\n  // shallow-merge compute\n  if (plugin.compute) {\n    Object.assign(compute, plugin.compute)\n  }\n  // append new hooks\n  if (hooks) {\n    world.hooks = hooks.concat(plugin.hooks || [])\n  }\n  // assign new class methods\n  if (plugin.api) {\n    plugin.api(View)\n  }\n  if (plugin.lib) {\n    Object.keys(plugin.lib).forEach(k => (nlp[k] = plugin.lib[k]))\n  }\n  if (plugin.tags) {\n    nlp.addTags(plugin.tags)\n  }\n  if (plugin.words) {\n    nlp.addWords(plugin.words)\n  }\n  if (plugin.frozen) {\n    nlp.addWords(plugin.frozen, true)\n  }\n  if (plugin.mutate) {\n    plugin.mutate(world, nlp)\n  }\n}\nexport default extend\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}