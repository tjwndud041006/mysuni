{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nclass StringDictionary {\n  constructor() {\n    this.dict = {};\n  }\n  add(key, value) {\n    if (!key || !value) {\n      return;\n    }\n    this.dict[key] = value;\n  }\n  get(key) {\n    return this.dict[key];\n  }\n}\nexports.default = StringDictionary;","map":{"version":3,"names":["StringDictionary","constructor","dict","add","key","value","get","exports","default"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/rake-js/src/lib/data_structures/string_dictionary.ts"],"sourcesContent":["/**\n * Helper Class to keep references between strings\n */\nexport default class StringDictionary {\n  // the actual data store implemented with a plain object\n  private dict: { [word: string]: string } = {}\n\n  // increase the counter for a given string\n  public add(key: string, value: string): void {\n    if (!key || !value) {\n      return\n    }\n    this.dict[key] = value\n  }\n\n  // return a list of all strings counted yet\n  public get(key: string): string {\n    return this.dict[key]\n  }\n}\n"],"mappings":";;;;;AAGA,MAAAA,gBAAA;EAAAC,YAAA;IAEU,KAAAC,IAAI,GAA+B,EAAE;EAc/C;EAXSC,GAAGA,CAACC,GAAW,EAAEC,KAAa;IACnC,IAAI,CAACD,GAAG,IAAI,CAACC,KAAK,EAAE;MAClB;IACF;IACA,IAAI,CAACH,IAAI,CAACE,GAAG,CAAC,GAAGC,KAAK;EACxB;EAGOC,GAAGA,CAACF,GAAW;IACpB,OAAO,IAAI,CAACF,IAAI,CAACE,GAAG,CAAC;EACvB;;AAfFG,OAAA,CAAAC,OAAA,GAAAR,gBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}