{"ast":null,"code":"const BASE = 36;\nconst seq = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst cache = seq.split('').reduce(function (h, c, i) {\n  h[c] = i;\n  return h;\n}, {});\n\n// 0, 1, 2, ..., A, B, C, ..., 00, 01, ... AA, AB, AC, ..., AAA, AAB, ...\nconst toAlphaCode = function (n) {\n  if (seq[n] !== undefined) {\n    return seq[n];\n  }\n  let places = 1;\n  let range = BASE;\n  let s = '';\n  for (; n >= range; n -= range, places++, range *= BASE) {}\n  while (places--) {\n    const d = n % BASE;\n    s = String.fromCharCode((d < 10 ? 48 : 55) + d) + s;\n    n = (n - d) / BASE;\n  }\n  return s;\n};\nconst fromAlphaCode = function (s) {\n  if (cache[s] !== undefined) {\n    return cache[s];\n  }\n  let n = 0;\n  let places = 1;\n  let range = BASE;\n  let pow = 1;\n  for (; places < s.length; n += range, places++, range *= BASE) {}\n  for (let i = s.length - 1; i >= 0; i--, pow *= BASE) {\n    let d = s.charCodeAt(i) - 48;\n    if (d > 10) {\n      d -= 7;\n    }\n    n += d * pow;\n  }\n  return n;\n};\nexport default {\n  toAlphaCode,\n  fromAlphaCode\n};","map":{"version":3,"names":["BASE","seq","cache","split","reduce","h","c","i","toAlphaCode","n","undefined","places","range","s","d","String","fromCharCode","fromAlphaCode","pow","length","charCodeAt"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/efrt/src/encoding.js"],"sourcesContent":["const BASE = 36\nconst seq = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\nconst cache = seq.split('').reduce(function (h, c, i) {\n  h[c] = i\n  return h\n}, {})\n\n// 0, 1, 2, ..., A, B, C, ..., 00, 01, ... AA, AB, AC, ..., AAA, AAB, ...\nconst toAlphaCode = function (n) {\n  if (seq[n] !== undefined) {\n    return seq[n]\n  }\n  let places = 1\n  let range = BASE\n  let s = ''\n  for (; n >= range; n -= range, places++, range *= BASE) {}\n  while (places--) {\n    const d = n % BASE\n    s = String.fromCharCode((d < 10 ? 48 : 55) + d) + s\n    n = (n - d) / BASE\n  }\n  return s\n}\n\nconst fromAlphaCode = function (s) {\n  if (cache[s] !== undefined) {\n    return cache[s]\n  }\n  let n = 0\n  let places = 1\n  let range = BASE\n  let pow = 1\n  for (; places < s.length; n += range, places++, range *= BASE) {}\n  for (let i = s.length - 1; i >= 0; i--, pow *= BASE) {\n    let d = s.charCodeAt(i) - 48\n    if (d > 10) {\n      d -= 7\n    }\n    n += d * pow\n  }\n  return n\n}\n\nexport default {\n  toAlphaCode,\n  fromAlphaCode\n}\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG,EAAE;AACf,MAAMC,GAAG,GAAG,sCAAsC;AAElD,MAAMC,KAAK,GAAGD,GAAG,CAACE,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACpDF,CAAC,CAACC,CAAC,CAAC,GAAGC,CAAC;EACR,OAAOF,CAAC;AACV,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEN;AACA,MAAMG,WAAW,GAAG,SAAAA,CAAUC,CAAC,EAAE;EAC/B,IAAIR,GAAG,CAACQ,CAAC,CAAC,KAAKC,SAAS,EAAE;IACxB,OAAOT,GAAG,CAACQ,CAAC,CAAC;EACf;EACA,IAAIE,MAAM,GAAG,CAAC;EACd,IAAIC,KAAK,GAAGZ,IAAI;EAChB,IAAIa,CAAC,GAAG,EAAE;EACV,OAAOJ,CAAC,IAAIG,KAAK,EAAEH,CAAC,IAAIG,KAAK,EAAED,MAAM,EAAE,EAAEC,KAAK,IAAIZ,IAAI,EAAE,CAAC;EACzD,OAAOW,MAAM,EAAE,EAAE;IACf,MAAMG,CAAC,GAAGL,CAAC,GAAGT,IAAI;IAClBa,CAAC,GAAGE,MAAM,CAACC,YAAY,CAAC,CAACF,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAIA,CAAC,CAAC,GAAGD,CAAC;IACnDJ,CAAC,GAAG,CAACA,CAAC,GAAGK,CAAC,IAAId,IAAI;EACpB;EACA,OAAOa,CAAC;AACV,CAAC;AAED,MAAMI,aAAa,GAAG,SAAAA,CAAUJ,CAAC,EAAE;EACjC,IAAIX,KAAK,CAACW,CAAC,CAAC,KAAKH,SAAS,EAAE;IAC1B,OAAOR,KAAK,CAACW,CAAC,CAAC;EACjB;EACA,IAAIJ,CAAC,GAAG,CAAC;EACT,IAAIE,MAAM,GAAG,CAAC;EACd,IAAIC,KAAK,GAAGZ,IAAI;EAChB,IAAIkB,GAAG,GAAG,CAAC;EACX,OAAOP,MAAM,GAAGE,CAAC,CAACM,MAAM,EAAEV,CAAC,IAAIG,KAAK,EAAED,MAAM,EAAE,EAAEC,KAAK,IAAIZ,IAAI,EAAE,CAAC;EAChE,KAAK,IAAIO,CAAC,GAAGM,CAAC,CAACM,MAAM,GAAG,CAAC,EAAEZ,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAEW,GAAG,IAAIlB,IAAI,EAAE;IACnD,IAAIc,CAAC,GAAGD,CAAC,CAACO,UAAU,CAACb,CAAC,CAAC,GAAG,EAAE;IAC5B,IAAIO,CAAC,GAAG,EAAE,EAAE;MACVA,CAAC,IAAI,CAAC;IACR;IACAL,CAAC,IAAIK,CAAC,GAAGI,GAAG;EACd;EACA,OAAOT,CAAC;AACV,CAAC;AAED,eAAe;EACbD,WAAW;EACXS;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}