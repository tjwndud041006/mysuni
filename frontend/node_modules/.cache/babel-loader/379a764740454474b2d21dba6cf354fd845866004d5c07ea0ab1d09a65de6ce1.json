{"ast":null,"code":"const numUnit = /^([+-]?[0-9][.,0-9]*)([a-z°²³µ/]+)$/; //(must be lowercase)\n\nconst numberUnit = function (terms, i, world) {\n  const notUnit = world.model.one.numberSuffixes || {};\n  let term = terms[i];\n  let parts = term.text.match(numUnit);\n  if (parts !== null) {\n    // is it a recognized unit, like 'km'?\n    let unit = parts[2].toLowerCase().trim();\n    // don't split '3rd'\n    if (notUnit.hasOwnProperty(unit)) {\n      return null;\n    }\n    return [parts[1], unit]; //split it\n  }\n  return null;\n};\nexport default numberUnit;","map":{"version":3,"names":["numUnit","numberUnit","terms","i","world","notUnit","model","one","numberSuffixes","term","parts","text","match","unit","toLowerCase","trim","hasOwnProperty"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/contraction-one/compute/contractions/number-unit.js"],"sourcesContent":["const numUnit = /^([+-]?[0-9][.,0-9]*)([a-z°²³µ/]+)$/ //(must be lowercase)\n\nconst numberUnit = function (terms, i, world) {\n  const notUnit = world.model.one.numberSuffixes || {}\n  let term = terms[i]\n  let parts = term.text.match(numUnit)\n  if (parts !== null) {\n    // is it a recognized unit, like 'km'?\n    let unit = parts[2].toLowerCase().trim()\n    // don't split '3rd'\n    if (notUnit.hasOwnProperty(unit)) {\n      return null\n    }\n    return [parts[1], unit] //split it\n  }\n  return null\n}\nexport default numberUnit\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,qCAAqC,EAAC;;AAEtD,MAAMC,UAAU,GAAG,SAAAA,CAAUC,KAAK,EAAEC,CAAC,EAAEC,KAAK,EAAE;EAC5C,MAAMC,OAAO,GAAGD,KAAK,CAACE,KAAK,CAACC,GAAG,CAACC,cAAc,IAAI,CAAC,CAAC;EACpD,IAAIC,IAAI,GAAGP,KAAK,CAACC,CAAC,CAAC;EACnB,IAAIO,KAAK,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAK,CAACZ,OAAO,CAAC;EACpC,IAAIU,KAAK,KAAK,IAAI,EAAE;IAClB;IACA,IAAIG,IAAI,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IACxC;IACA,IAAIV,OAAO,CAACW,cAAc,CAACH,IAAI,CAAC,EAAE;MAChC,OAAO,IAAI;IACb;IACA,OAAO,CAACH,KAAK,CAAC,CAAC,CAAC,EAAEG,IAAI,CAAC,EAAC;EAC1B;EACA,OAAO,IAAI;AACb,CAAC;AACD,eAAeZ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}