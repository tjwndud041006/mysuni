{"ast":null,"code":"const isTitleCase = /^[A-Z][a-z]/;\nconst isCapital = (terms, i) => {\n  if (terms[i].tags.has('ProperNoun') && isTitleCase.test(terms[i].text)) {\n    // 'Comfort Inn'\n    return 'Noun';\n  }\n  return null;\n};\nconst isAlone = (terms, i, tag) => {\n  if (i === 0 && !terms[1]) {\n    // 'Help'\n    return tag;\n  }\n  return null;\n};\n\n// 'a rental'\nconst isEndNoun = function (terms, i) {\n  if (!terms[i + 1] && terms[i - 1] && terms[i - 1].tags.has('Determiner')) {\n    return 'Noun';\n  }\n  return null;\n};\n\n// the first word in the sentence\nconst isStart = function (terms, i, tag) {\n  if (i === 0 && terms.length > 3) {\n    return tag;\n  }\n  return null;\n};\nconst adhoc = {\n  'Adj|Gerund': (terms, i) => {\n    return isCapital(terms, i);\n  },\n  'Adj|Noun': (terms, i) => {\n    return isCapital(terms, i) || isEndNoun(terms, i);\n  },\n  'Actor|Verb': (terms, i) => {\n    return isCapital(terms, i);\n  },\n  'Adj|Past': (terms, i) => {\n    return isCapital(terms, i);\n  },\n  'Adj|Present': (terms, i) => {\n    return isCapital(terms, i);\n  },\n  'Noun|Gerund': (terms, i) => {\n    return isCapital(terms, i);\n  },\n  'Noun|Verb': (terms, i) => {\n    return i > 0 && isCapital(terms, i) || isAlone(terms, i, 'Infinitive');\n  },\n  'Plural|Verb': (terms, i) => {\n    return isCapital(terms, i) || isAlone(terms, i, 'PresentTense') || isStart(terms, i, 'Plural');\n  },\n  'Person|Noun': (terms, i) => {\n    return isCapital(terms, i);\n  },\n  'Person|Verb': (terms, i) => {\n    if (i !== 0) {\n      return isCapital(terms, i);\n    }\n    return null;\n  },\n  'Person|Adj': (terms, i) => {\n    if (i === 0 && terms.length > 1) {\n      return 'Person';\n    }\n    return isCapital(terms, i) ? 'Person' : null;\n  }\n};\nexport default adhoc;","map":{"version":3,"names":["isTitleCase","isCapital","terms","i","tags","has","test","text","isAlone","tag","isEndNoun","isStart","length","adhoc","Adj|Gerund","Adj|Noun","Actor|Verb","Adj|Past","Adj|Present","Noun|Gerund","Noun|Verb","Plural|Verb","Person|Noun","Person|Verb","Person|Adj"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/compute/tagger/3rd-pass/_adhoc.js"],"sourcesContent":["const isTitleCase = /^[A-Z][a-z]/\n\nconst isCapital = (terms, i) => {\n  if (terms[i].tags.has('ProperNoun') && isTitleCase.test(terms[i].text)) {// 'Comfort Inn'\n    return 'Noun'\n  }\n  return null\n}\n\nconst isAlone = (terms, i, tag) => {\n  if (i === 0 && !terms[1]) {// 'Help'\n    return tag\n  }\n  return null\n}\n\n// 'a rental'\nconst isEndNoun = function (terms, i) {\n  if (!terms[i + 1] && terms[i - 1] && terms[i - 1].tags.has('Determiner')) {\n    return 'Noun'\n  }\n  return null\n}\n\n// the first word in the sentence\nconst isStart = function (terms, i, tag) {\n  if (i === 0 && terms.length > 3) {\n    return tag\n  }\n  return null\n}\n\nconst adhoc = {\n  'Adj|Gerund': (terms, i) => {\n    return isCapital(terms, i)\n  },\n  'Adj|Noun': (terms, i) => {\n    return isCapital(terms, i) || isEndNoun(terms, i)\n  },\n  'Actor|Verb': (terms, i) => {\n    return isCapital(terms, i)\n  },\n  'Adj|Past': (terms, i) => {\n    return isCapital(terms, i)\n  },\n  'Adj|Present': (terms, i) => {\n    return isCapital(terms, i)\n  },\n  'Noun|Gerund': (terms, i) => {\n    return isCapital(terms, i)\n  },\n  'Noun|Verb': (terms, i) => {\n    return (i > 0 && isCapital(terms, i)) || isAlone(terms, i, 'Infinitive')\n  },\n  'Plural|Verb': (terms, i) => {\n    return isCapital(terms, i) || isAlone(terms, i, 'PresentTense') || isStart(terms, i, 'Plural')\n  },\n  'Person|Noun': (terms, i) => {\n    return isCapital(terms, i)\n  },\n  'Person|Verb': (terms, i) => {\n    if (i !== 0) {\n      return isCapital(terms, i)\n    }\n    return null\n  },\n  'Person|Adj': (terms, i) => {\n    if (i === 0 && terms.length > 1) {\n      return 'Person'\n    }\n    return isCapital(terms, i) ? 'Person' : null\n  },\n}\nexport default adhoc"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAAa;AAEjC,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,CAAC,KAAK;EAC9B,IAAID,KAAK,CAACC,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,CAAC,YAAY,CAAC,IAAIL,WAAW,CAACM,IAAI,CAACJ,KAAK,CAACC,CAAC,CAAC,CAACI,IAAI,CAAC,EAAE;IAAC;IACvE,OAAO,MAAM;EACf;EACA,OAAO,IAAI;AACb,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACN,KAAK,EAAEC,CAAC,EAAEM,GAAG,KAAK;EACjC,IAAIN,CAAC,KAAK,CAAC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE;IAAC;IACzB,OAAOO,GAAG;EACZ;EACA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,MAAMC,SAAS,GAAG,SAAAA,CAAUR,KAAK,EAAEC,CAAC,EAAE;EACpC,IAAI,CAACD,KAAK,CAACC,CAAC,GAAG,CAAC,CAAC,IAAID,KAAK,CAACC,CAAC,GAAG,CAAC,CAAC,IAAID,KAAK,CAACC,CAAC,GAAG,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,CAAC,YAAY,CAAC,EAAE;IACxE,OAAO,MAAM;EACf;EACA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,MAAMM,OAAO,GAAG,SAAAA,CAAUT,KAAK,EAAEC,CAAC,EAAEM,GAAG,EAAE;EACvC,IAAIN,CAAC,KAAK,CAAC,IAAID,KAAK,CAACU,MAAM,GAAG,CAAC,EAAE;IAC/B,OAAOH,GAAG;EACZ;EACA,OAAO,IAAI;AACb,CAAC;AAED,MAAMI,KAAK,GAAG;EACZ,YAAY,EAAEC,CAACZ,KAAK,EAAEC,CAAC,KAAK;IAC1B,OAAOF,SAAS,CAACC,KAAK,EAAEC,CAAC,CAAC;EAC5B,CAAC;EACD,UAAU,EAAEY,CAACb,KAAK,EAAEC,CAAC,KAAK;IACxB,OAAOF,SAAS,CAACC,KAAK,EAAEC,CAAC,CAAC,IAAIO,SAAS,CAACR,KAAK,EAAEC,CAAC,CAAC;EACnD,CAAC;EACD,YAAY,EAAEa,CAACd,KAAK,EAAEC,CAAC,KAAK;IAC1B,OAAOF,SAAS,CAACC,KAAK,EAAEC,CAAC,CAAC;EAC5B,CAAC;EACD,UAAU,EAAEc,CAACf,KAAK,EAAEC,CAAC,KAAK;IACxB,OAAOF,SAAS,CAACC,KAAK,EAAEC,CAAC,CAAC;EAC5B,CAAC;EACD,aAAa,EAAEe,CAAChB,KAAK,EAAEC,CAAC,KAAK;IAC3B,OAAOF,SAAS,CAACC,KAAK,EAAEC,CAAC,CAAC;EAC5B,CAAC;EACD,aAAa,EAAEgB,CAACjB,KAAK,EAAEC,CAAC,KAAK;IAC3B,OAAOF,SAAS,CAACC,KAAK,EAAEC,CAAC,CAAC;EAC5B,CAAC;EACD,WAAW,EAAEiB,CAAClB,KAAK,EAAEC,CAAC,KAAK;IACzB,OAAQA,CAAC,GAAG,CAAC,IAAIF,SAAS,CAACC,KAAK,EAAEC,CAAC,CAAC,IAAKK,OAAO,CAACN,KAAK,EAAEC,CAAC,EAAE,YAAY,CAAC;EAC1E,CAAC;EACD,aAAa,EAAEkB,CAACnB,KAAK,EAAEC,CAAC,KAAK;IAC3B,OAAOF,SAAS,CAACC,KAAK,EAAEC,CAAC,CAAC,IAAIK,OAAO,CAACN,KAAK,EAAEC,CAAC,EAAE,cAAc,CAAC,IAAIQ,OAAO,CAACT,KAAK,EAAEC,CAAC,EAAE,QAAQ,CAAC;EAChG,CAAC;EACD,aAAa,EAAEmB,CAACpB,KAAK,EAAEC,CAAC,KAAK;IAC3B,OAAOF,SAAS,CAACC,KAAK,EAAEC,CAAC,CAAC;EAC5B,CAAC;EACD,aAAa,EAAEoB,CAACrB,KAAK,EAAEC,CAAC,KAAK;IAC3B,IAAIA,CAAC,KAAK,CAAC,EAAE;MACX,OAAOF,SAAS,CAACC,KAAK,EAAEC,CAAC,CAAC;IAC5B;IACA,OAAO,IAAI;EACb,CAAC;EACD,YAAY,EAAEqB,CAACtB,KAAK,EAAEC,CAAC,KAAK;IAC1B,IAAIA,CAAC,KAAK,CAAC,IAAID,KAAK,CAACU,MAAM,GAAG,CAAC,EAAE;MAC/B,OAAO,QAAQ;IACjB;IACA,OAAOX,SAAS,CAACC,KAAK,EAAEC,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI;EAC9C;AACF,CAAC;AACD,eAAeU,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}