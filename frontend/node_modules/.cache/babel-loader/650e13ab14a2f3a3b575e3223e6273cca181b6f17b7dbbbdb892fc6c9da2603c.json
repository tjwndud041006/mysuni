{"ast":null,"code":"import multiWord from './multi-word.js';\nimport singleWord from './single-word.js';\n\n// tag any words in our lexicon - even if it hasn't been filled-up yet\n// rest of pre-tagger is in ./two/preTagger\nconst lexicon = function (view) {\n  const world = view.world;\n  // loop through our terms\n  view.docs.forEach(terms => {\n    for (let i = 0; i < terms.length; i += 1) {\n      if (terms[i].tags.size === 0) {\n        let found = null;\n        found = found || multiWord(terms, i, world);\n        // lookup known words\n        found = found || singleWord(terms, i, world);\n      }\n    }\n  });\n};\nexport default {\n  lexicon\n};","map":{"version":3,"names":["multiWord","singleWord","lexicon","view","world","docs","forEach","terms","i","length","tags","size","found"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/lexicon/compute/index.js"],"sourcesContent":["import multiWord from './multi-word.js'\nimport singleWord from './single-word.js'\n\n// tag any words in our lexicon - even if it hasn't been filled-up yet\n// rest of pre-tagger is in ./two/preTagger\nconst lexicon = function (view) {\n  const world = view.world\n  // loop through our terms\n  view.docs.forEach(terms => {\n    for (let i = 0; i < terms.length; i += 1) {\n      if (terms[i].tags.size === 0) {\n        let found = null\n        found = found || multiWord(terms, i, world)\n        // lookup known words\n        found = found || singleWord(terms, i, world)\n      }\n    }\n  })\n}\n\nexport default {\n  lexicon,\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,iBAAiB;AACvC,OAAOC,UAAU,MAAM,kBAAkB;;AAEzC;AACA;AACA,MAAMC,OAAO,GAAG,SAAAA,CAAUC,IAAI,EAAE;EAC9B,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK;EACxB;EACAD,IAAI,CAACE,IAAI,CAACC,OAAO,CAACC,KAAK,IAAI;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACxC,IAAID,KAAK,CAACC,CAAC,CAAC,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,EAAE;QAC5B,IAAIC,KAAK,GAAG,IAAI;QAChBA,KAAK,GAAGA,KAAK,IAAIZ,SAAS,CAACO,KAAK,EAAEC,CAAC,EAAEJ,KAAK,CAAC;QAC3C;QACAQ,KAAK,GAAGA,KAAK,IAAIX,UAAU,CAACM,KAAK,EAAEC,CAAC,EAAEJ,KAAK,CAAC;MAC9C;IACF;EACF,CAAC,CAAC;AACJ,CAAC;AAED,eAAe;EACbF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}