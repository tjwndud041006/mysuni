{"ast":null,"code":"// split terms into Nounphrase, verbphrase, etc groups\nconst chunks = function (doc) {\n  let all = [];\n  let lastOne = null;\n  // first, split by comma, etc\n  let m = doc.clauses();\n  // loop through each clause\n  m.docs.forEach(terms => {\n    terms.forEach(term => {\n      // new chunk\n      if (!term.chunk || term.chunk !== lastOne) {\n        lastOne = term.chunk;\n        all.push([term.index[0], term.index[1], term.index[1] + 1]);\n      } else {\n        // keep the chunk going\n        all[all.length - 1][2] = term.index[1] + 1;\n      }\n    });\n    lastOne = null;\n  });\n  let parts = doc.update(all);\n  return parts;\n};\nexport default chunks;","map":{"version":3,"names":["chunks","doc","all","lastOne","m","clauses","docs","forEach","terms","term","chunk","push","index","length","parts","update"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/3-three/chunker/api/chunks.js"],"sourcesContent":["// split terms into Nounphrase, verbphrase, etc groups\nconst chunks = function (doc) {\n  let all = []\n  let lastOne = null\n  // first, split by comma, etc\n  let m = doc.clauses()\n  // loop through each clause\n  m.docs.forEach(terms => {\n    terms.forEach(term => {\n      // new chunk\n      if (!term.chunk || term.chunk !== lastOne) {\n        lastOne = term.chunk\n        all.push([term.index[0], term.index[1], term.index[1] + 1])\n      } else {\n        // keep the chunk going\n        all[all.length - 1][2] = term.index[1] + 1\n      }\n    })\n    lastOne = null\n  })\n  let parts = doc.update(all)\n  return parts\n}\nexport default chunks\n"],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAG,SAAAA,CAAUC,GAAG,EAAE;EAC5B,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAIC,OAAO,GAAG,IAAI;EAClB;EACA,IAAIC,CAAC,GAAGH,GAAG,CAACI,OAAO,CAAC,CAAC;EACrB;EACAD,CAAC,CAACE,IAAI,CAACC,OAAO,CAACC,KAAK,IAAI;IACtBA,KAAK,CAACD,OAAO,CAACE,IAAI,IAAI;MACpB;MACA,IAAI,CAACA,IAAI,CAACC,KAAK,IAAID,IAAI,CAACC,KAAK,KAAKP,OAAO,EAAE;QACzCA,OAAO,GAAGM,IAAI,CAACC,KAAK;QACpBR,GAAG,CAACS,IAAI,CAAC,CAACF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,EAAEH,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,EAAEH,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7D,CAAC,MAAM;QACL;QACAV,GAAG,CAACA,GAAG,CAACW,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGJ,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;MAC5C;IACF,CAAC,CAAC;IACFT,OAAO,GAAG,IAAI;EAChB,CAAC,CAAC;EACF,IAAIW,KAAK,GAAGb,GAAG,CAACc,MAAM,CAACb,GAAG,CAAC;EAC3B,OAAOY,KAAK;AACd,CAAC;AACD,eAAed,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}