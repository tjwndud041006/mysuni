{"ast":null,"code":"const byPunctuation = function (terms, i, model, world) {\n  const setTag = world.methods.one.setTag;\n  // colon following first word\n  // edit: foo\n  // breaking: foobar\n  if (i === 0 && terms.length >= 3) {\n    const hasColon = /:/;\n    let post = terms[0].post;\n    if (post.match(hasColon)) {\n      // phone: 555-2938\n      let nextTerm = terms[1];\n      if (nextTerm.tags.has('Value') || nextTerm.tags.has('Email') || nextTerm.tags.has('PhoneNumber')) {\n        return;\n      }\n      //\n      setTag([terms[0]], 'Expression', world, null, `2-punct-colon''`);\n    }\n  }\n};\nexport default byPunctuation;","map":{"version":3,"names":["byPunctuation","terms","i","model","world","setTag","methods","one","length","hasColon","post","match","nextTerm","tags","has"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/compute/tagger/1st-pass/01-colons.js"],"sourcesContent":["const byPunctuation = function (terms, i, model, world) {\n  const setTag = world.methods.one.setTag\n  // colon following first word\n  // edit: foo\n  // breaking: foobar\n  if (i === 0 && terms.length >= 3) {\n    const hasColon = /:/\n    let post = terms[0].post\n    if (post.match(hasColon)) {\n      // phone: 555-2938\n      let nextTerm = terms[1]\n      if (nextTerm.tags.has('Value') || nextTerm.tags.has('Email') || nextTerm.tags.has('PhoneNumber')) {\n        return\n      }\n      //\n      setTag([terms[0]], 'Expression', world, null, `2-punct-colon''`)\n    }\n  }\n}\nexport default byPunctuation\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,SAAAA,CAAUC,KAAK,EAAEC,CAAC,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACtD,MAAMC,MAAM,GAAGD,KAAK,CAACE,OAAO,CAACC,GAAG,CAACF,MAAM;EACvC;EACA;EACA;EACA,IAAIH,CAAC,KAAK,CAAC,IAAID,KAAK,CAACO,MAAM,IAAI,CAAC,EAAE;IAChC,MAAMC,QAAQ,GAAG,GAAG;IACpB,IAAIC,IAAI,GAAGT,KAAK,CAAC,CAAC,CAAC,CAACS,IAAI;IACxB,IAAIA,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,EAAE;MACxB;MACA,IAAIG,QAAQ,GAAGX,KAAK,CAAC,CAAC,CAAC;MACvB,IAAIW,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,IAAIF,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,IAAIF,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC,aAAa,CAAC,EAAE;QAChG;MACF;MACA;MACAT,MAAM,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,YAAY,EAAEG,KAAK,EAAE,IAAI,EAAE,iBAAiB,CAAC;IAClE;EACF;AACF,CAAC;AACD,eAAeJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}