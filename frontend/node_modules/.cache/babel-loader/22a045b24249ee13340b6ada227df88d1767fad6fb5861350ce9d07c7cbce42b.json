{"ast":null,"code":"/* eslint-disable regexp/no-dupe-characters-character-class */\n\nconst pairs = {\n  '\\u0022': '\\u0022',\n  // 'StraightDoubleQuotes'\n  '\\uFF02': '\\uFF02',\n  // 'StraightDoubleQuotesWide'\n  '\\u0027': '\\u0027',\n  // 'StraightSingleQuotes'\n  '\\u201C': '\\u201D',\n  // 'CommaDoubleQuotes'\n  '\\u2018': '\\u2019',\n  // 'CommaSingleQuotes'\n  '\\u201F': '\\u201D',\n  // 'CurlyDoubleQuotesReversed'\n  '\\u201B': '\\u2019',\n  // 'CurlySingleQuotesReversed'\n  '\\u201E': '\\u201D',\n  // 'LowCurlyDoubleQuotes'\n  '\\u2E42': '\\u201D',\n  // 'LowCurlyDoubleQuotesReversed'\n  '\\u201A': '\\u2019',\n  // 'LowCurlySingleQuotes'\n  '\\u00AB': '\\u00BB',\n  // 'AngleDoubleQuotes' «, »\n  '\\u2039': '\\u203A',\n  // 'AngleSingleQuotes'\n  // Prime 'non quotation'\n  '\\u2035': '\\u2032',\n  // 'PrimeSingleQuotes'\n  '\\u2036': '\\u2033',\n  // 'PrimeDoubleQuotes'\n  '\\u2037': '\\u2034',\n  // 'PrimeTripleQuotes'\n  // Prime 'quotation' variation\n  '\\u301D': '\\u301E',\n  // 'PrimeDoubleQuotes'\n  '\\u0060': '\\u00B4',\n  // 'PrimeSingleQuotes'\n  '\\u301F': '\\u301E' // 'LowPrimeDoubleQuotesReversed'\n};\nconst hasOpen = RegExp('[' + Object.keys(pairs).join('') + ']');\nconst hasClosed = RegExp('[' + Object.values(pairs).join('') + ']');\nconst findEnd = function (terms, i) {\n  const have = terms[i].pre.match(hasOpen)[0] || '';\n  if (!have || !pairs[have]) {\n    return null;\n  }\n  const want = pairs[have];\n  for (; i < terms.length; i += 1) {\n    if (terms[i].post && terms[i].post.match(want)) {\n      return i;\n    }\n  }\n  return null;\n};\nconst find = function (doc) {\n  let ptrs = [];\n  doc.docs.forEach(terms => {\n    let isOpen = false;\n    for (let i = 0; i < terms.length; i += 1) {\n      let term = terms[i];\n      if (!isOpen && term.pre && hasOpen.test(term.pre)) {\n        let end = findEnd(terms, i);\n        if (end !== null) {\n          let [n, start] = terms[i].index;\n          ptrs.push([n, start, end + 1, terms[i].id]);\n          i = end;\n        }\n      }\n    }\n  });\n  return doc.update(ptrs);\n};\nconst strip = function (m) {\n  m.docs.forEach(terms => {\n    terms[0].pre = terms[0].pre.replace(hasOpen, '');\n    let lastTerm = terms[terms.length - 1];\n    lastTerm.post = lastTerm.post.replace(hasClosed, '');\n  });\n};\nexport { find, strip };","map":{"version":3,"names":["pairs","hasOpen","RegExp","Object","keys","join","hasClosed","values","findEnd","terms","i","have","pre","match","want","length","post","find","doc","ptrs","docs","forEach","isOpen","term","test","end","n","start","index","push","id","update","strip","m","replace","lastTerm"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/3-three/misc/quotations/fns.js"],"sourcesContent":["/* eslint-disable regexp/no-dupe-characters-character-class */\n\nconst pairs = {\n  '\\u0022': '\\u0022', // 'StraightDoubleQuotes'\n  '\\uFF02': '\\uFF02', // 'StraightDoubleQuotesWide'\n  '\\u0027': '\\u0027', // 'StraightSingleQuotes'\n  '\\u201C': '\\u201D', // 'CommaDoubleQuotes'\n  '\\u2018': '\\u2019', // 'CommaSingleQuotes'\n  '\\u201F': '\\u201D', // 'CurlyDoubleQuotesReversed'\n  '\\u201B': '\\u2019', // 'CurlySingleQuotesReversed'\n  '\\u201E': '\\u201D', // 'LowCurlyDoubleQuotes'\n  '\\u2E42': '\\u201D', // 'LowCurlyDoubleQuotesReversed'\n  '\\u201A': '\\u2019', // 'LowCurlySingleQuotes'\n  '\\u00AB': '\\u00BB', // 'AngleDoubleQuotes' «, »\n  '\\u2039': '\\u203A', // 'AngleSingleQuotes'\n  // Prime 'non quotation'\n  '\\u2035': '\\u2032', // 'PrimeSingleQuotes'\n  '\\u2036': '\\u2033', // 'PrimeDoubleQuotes'\n  '\\u2037': '\\u2034', // 'PrimeTripleQuotes'\n  // Prime 'quotation' variation\n  '\\u301D': '\\u301E', // 'PrimeDoubleQuotes'\n  '\\u0060': '\\u00B4', // 'PrimeSingleQuotes'\n  '\\u301F': '\\u301E', // 'LowPrimeDoubleQuotesReversed'\n}\n\nconst hasOpen = RegExp('[' + Object.keys(pairs).join('') + ']')\nconst hasClosed = RegExp('[' + Object.values(pairs).join('') + ']')\n\nconst findEnd = function (terms, i) {\n  const have = terms[i].pre.match(hasOpen)[0] || ''\n  if (!have || !pairs[have]) {\n    return null\n  }\n  const want = pairs[have]\n  for (; i < terms.length; i += 1) {\n    if (terms[i].post && terms[i].post.match(want)) {\n      return i\n    }\n  }\n  return null\n}\n\nconst find = function (doc) {\n  let ptrs = []\n  doc.docs.forEach(terms => {\n    let isOpen = false\n    for (let i = 0; i < terms.length; i += 1) {\n      let term = terms[i]\n      if (!isOpen && term.pre && hasOpen.test(term.pre)) {\n        let end = findEnd(terms, i)\n        if (end !== null) {\n          let [n, start] = terms[i].index\n          ptrs.push([n, start, end + 1, terms[i].id])\n          i = end\n        }\n      }\n    }\n  })\n  return doc.update(ptrs)\n}\n\nconst strip = function (m) {\n  m.docs.forEach(terms => {\n    terms[0].pre = terms[0].pre.replace(hasOpen, '')\n    let lastTerm = terms[terms.length - 1]\n    lastTerm.post = lastTerm.post.replace(hasClosed, '')\n  })\n}\nexport { find, strip }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}