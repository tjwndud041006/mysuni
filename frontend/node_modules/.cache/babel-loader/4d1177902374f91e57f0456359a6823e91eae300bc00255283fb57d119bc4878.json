{"ast":null,"code":"import guess from './_guess.js';\n\n/** it helps to know what we're conjugating from */\nconst getTense = function (str) {\n  let three = str.substring(str.length - 3);\n  if (guess.hasOwnProperty(three) === true) {\n    return guess[three];\n  }\n  let two = str.substring(str.length - 2);\n  if (guess.hasOwnProperty(two) === true) {\n    return guess[two];\n  }\n  let one = str.substring(str.length - 1);\n  if (one === 's') {\n    return 'PresentTense';\n  }\n  return null;\n};\nexport default getTense;","map":{"version":3,"names":["guess","getTense","str","three","substring","length","hasOwnProperty","two","one"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/preTagger/methods/transform/verbs/getTense/index.js"],"sourcesContent":["import guess from './_guess.js'\n\n/** it helps to know what we're conjugating from */\nconst getTense = function (str) {\n  let three = str.substring(str.length - 3)\n  if (guess.hasOwnProperty(three) === true) {\n    return guess[three]\n  }\n  let two = str.substring(str.length - 2)\n  if (guess.hasOwnProperty(two) === true) {\n    return guess[two]\n  }\n  let one = str.substring(str.length - 1)\n  if (one === 's') {\n    return 'PresentTense'\n  }\n  return null\n}\nexport default getTense"],"mappings":"AAAA,OAAOA,KAAK,MAAM,aAAa;;AAE/B;AACA,MAAMC,QAAQ,GAAG,SAAAA,CAAUC,GAAG,EAAE;EAC9B,IAAIC,KAAK,GAAGD,GAAG,CAACE,SAAS,CAACF,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC;EACzC,IAAIL,KAAK,CAACM,cAAc,CAACH,KAAK,CAAC,KAAK,IAAI,EAAE;IACxC,OAAOH,KAAK,CAACG,KAAK,CAAC;EACrB;EACA,IAAII,GAAG,GAAGL,GAAG,CAACE,SAAS,CAACF,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC;EACvC,IAAIL,KAAK,CAACM,cAAc,CAACC,GAAG,CAAC,KAAK,IAAI,EAAE;IACtC,OAAOP,KAAK,CAACO,GAAG,CAAC;EACnB;EACA,IAAIC,GAAG,GAAGN,GAAG,CAACE,SAAS,CAACF,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC;EACvC,IAAIG,GAAG,KAAK,GAAG,EAAE;IACf,OAAO,cAAc;EACvB;EACA,OAAO,IAAI;AACb,CAAC;AACD,eAAeP,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}