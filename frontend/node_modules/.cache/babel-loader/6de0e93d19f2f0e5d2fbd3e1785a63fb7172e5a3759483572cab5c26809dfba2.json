{"ast":null,"code":"// for each cached-sentence, find a list of possible matches\nconst getHooks = function (docCaches, hooks) {\n  return docCaches.map((set, i) => {\n    let maybe = [];\n    Object.keys(hooks).forEach(k => {\n      if (docCaches[i].has(k)) {\n        maybe = maybe.concat(hooks[k]);\n      }\n    });\n    // remove duplicates\n    let already = {};\n    maybe = maybe.filter(m => {\n      if (typeof already[m.match] === 'boolean') {\n        return false;\n      }\n      already[m.match] = true;\n      return true;\n    });\n    return maybe;\n  });\n};\nexport default getHooks;","map":{"version":3,"names":["getHooks","docCaches","hooks","map","set","i","maybe","Object","keys","forEach","k","has","concat","already","filter","m","match"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/sweep/methods/sweep/01-getHooks.js"],"sourcesContent":["// for each cached-sentence, find a list of possible matches\nconst getHooks = function (docCaches, hooks) {\n  return docCaches.map((set, i) => {\n    let maybe = []\n    Object.keys(hooks).forEach(k => {\n      if (docCaches[i].has(k)) {\n        maybe = maybe.concat(hooks[k])\n      }\n    })\n    // remove duplicates\n    let already = {}\n    maybe = maybe.filter(m => {\n      if (typeof already[m.match] === 'boolean') {\n        return false\n      }\n      already[m.match] = true\n      return true\n    })\n    return maybe\n  })\n}\n\nexport default getHooks\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,SAAAA,CAAUC,SAAS,EAAEC,KAAK,EAAE;EAC3C,OAAOD,SAAS,CAACE,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;IAC/B,IAAIC,KAAK,GAAG,EAAE;IACdC,MAAM,CAACC,IAAI,CAACN,KAAK,CAAC,CAACO,OAAO,CAACC,CAAC,IAAI;MAC9B,IAAIT,SAAS,CAACI,CAAC,CAAC,CAACM,GAAG,CAACD,CAAC,CAAC,EAAE;QACvBJ,KAAK,GAAGA,KAAK,CAACM,MAAM,CAACV,KAAK,CAACQ,CAAC,CAAC,CAAC;MAChC;IACF,CAAC,CAAC;IACF;IACA,IAAIG,OAAO,GAAG,CAAC,CAAC;IAChBP,KAAK,GAAGA,KAAK,CAACQ,MAAM,CAACC,CAAC,IAAI;MACxB,IAAI,OAAOF,OAAO,CAACE,CAAC,CAACC,KAAK,CAAC,KAAK,SAAS,EAAE;QACzC,OAAO,KAAK;MACd;MACAH,OAAO,CAACE,CAAC,CAACC,KAAK,CAAC,GAAG,IAAI;MACvB,OAAO,IAAI;IACb,CAAC,CAAC;IACF,OAAOV,KAAK;EACd,CAAC,CAAC;AACJ,CAAC;AAED,eAAeN,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}