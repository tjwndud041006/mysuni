{"ast":null,"code":"import clauses from './clauses.js';\nimport getChunks from './chunks.js';\nconst api = function (View) {\n  class Chunks extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups);\n      this.viewType = 'Chunks';\n    }\n    isVerb() {\n      return this.filter(c => c.has('<Verb>'));\n    }\n    isNoun() {\n      return this.filter(c => c.has('<Noun>'));\n    }\n    isAdjective() {\n      return this.filter(c => c.has('<Adjective>'));\n    }\n    isPivot() {\n      return this.filter(c => c.has('<Pivot>'));\n    }\n    // chunk-friendly debug\n    debug() {\n      this.toView().debug('chunks');\n      return this;\n    }\n    // overloaded - keep Sentences class\n    update(pointer) {\n      let m = new Chunks(this.document, pointer);\n      m._cache = this._cache; // share this full thing\n      return m;\n    }\n  }\n  View.prototype.chunks = function (n) {\n    let m = getChunks(this);\n    m = m.getNth(n);\n    return new Chunks(this.document, m.pointer);\n  };\n  View.prototype.clauses = clauses;\n};\nexport default api;","map":{"version":3,"names":["clauses","getChunks","api","View","Chunks","constructor","document","pointer","groups","viewType","isVerb","filter","c","has","isNoun","isAdjective","isPivot","debug","toView","update","m","_cache","prototype","chunks","n","getNth"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/3-three/chunker/api/api.js"],"sourcesContent":["import clauses from './clauses.js'\nimport getChunks from './chunks.js'\n\nconst api = function (View) {\n\n  class Chunks extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Chunks'\n    }\n    isVerb() {\n      return this.filter(c => c.has('<Verb>'))\n    }\n    isNoun() {\n      return this.filter(c => c.has('<Noun>'))\n    }\n    isAdjective() {\n      return this.filter(c => c.has('<Adjective>'))\n    }\n    isPivot() {\n      return this.filter(c => c.has('<Pivot>'))\n    }\n    // chunk-friendly debug\n    debug() {\n      this.toView().debug('chunks')\n      return this\n    }\n    // overloaded - keep Sentences class\n    update(pointer) {\n      let m = new Chunks(this.document, pointer)\n      m._cache = this._cache // share this full thing\n      return m\n    }\n  }\n\n  View.prototype.chunks = function (n) {\n    let m = getChunks(this)\n    m = m.getNth(n)\n    return new Chunks(this.document, m.pointer)\n  }\n  View.prototype.clauses = clauses\n}\nexport default api\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;AAClC,OAAOC,SAAS,MAAM,aAAa;AAEnC,MAAMC,GAAG,GAAG,SAAAA,CAAUC,IAAI,EAAE;EAE1B,MAAMC,MAAM,SAASD,IAAI,CAAC;IACxBE,WAAWA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAE;MACrC,KAAK,CAACF,QAAQ,EAAEC,OAAO,EAAEC,MAAM,CAAC;MAChC,IAAI,CAACC,QAAQ,GAAG,QAAQ;IAC1B;IACAC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC1C;IACAC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACH,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC1C;IACAE,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACJ,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC/C;IACAG,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACL,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC3C;IACA;IACAI,KAAKA,CAAA,EAAG;MACN,IAAI,CAACC,MAAM,CAAC,CAAC,CAACD,KAAK,CAAC,QAAQ,CAAC;MAC7B,OAAO,IAAI;IACb;IACA;IACAE,MAAMA,CAACZ,OAAO,EAAE;MACd,IAAIa,CAAC,GAAG,IAAIhB,MAAM,CAAC,IAAI,CAACE,QAAQ,EAAEC,OAAO,CAAC;MAC1Ca,CAAC,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,EAAC;MACvB,OAAOD,CAAC;IACV;EACF;EAEAjB,IAAI,CAACmB,SAAS,CAACC,MAAM,GAAG,UAAUC,CAAC,EAAE;IACnC,IAAIJ,CAAC,GAAGnB,SAAS,CAAC,IAAI,CAAC;IACvBmB,CAAC,GAAGA,CAAC,CAACK,MAAM,CAACD,CAAC,CAAC;IACf,OAAO,IAAIpB,MAAM,CAAC,IAAI,CAACE,QAAQ,EAAEc,CAAC,CAACb,OAAO,CAAC;EAC7C,CAAC;EACDJ,IAAI,CAACmB,SAAS,CAACtB,OAAO,GAAGA,OAAO;AAClC,CAAC;AACD,eAAeE,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}