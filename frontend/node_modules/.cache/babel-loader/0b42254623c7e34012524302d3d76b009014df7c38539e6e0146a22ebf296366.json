{"ast":null,"code":"import debug from './debug.js';\nimport wrap from './wrap.js';\nimport hash from '../methods/hash.js';\nconst isObject = val => {\n  return Object.prototype.toString.call(val) === '[object Object]';\n};\n\n// sort by frequency\nconst topk = function (arr) {\n  let obj = {};\n  arr.forEach(a => {\n    obj[a] = obj[a] || 0;\n    obj[a] += 1;\n  });\n  let res = Object.keys(obj).map(k => {\n    return {\n      normal: k,\n      count: obj[k]\n    };\n  });\n  return res.sort((a, b) => a.count > b.count ? -1 : 0);\n};\n\n/** some named output formats */\nconst out = function (method) {\n  // support custom outputs\n  if (isObject(method)) {\n    return wrap(this, method);\n  }\n  // text out formats\n  if (method === 'text') {\n    return this.text();\n  }\n  if (method === 'normal') {\n    return this.text('normal');\n  }\n  if (method === 'root') {\n    return this.text('root');\n  }\n  if (method === 'machine' || method === 'reduced') {\n    return this.text('machine');\n  }\n  if (method === 'hash' || method === 'md5') {\n    return hash(this.text());\n  }\n\n  // json data formats\n  if (method === 'json') {\n    return this.json();\n  }\n  if (method === 'offset' || method === 'offsets') {\n    this.compute('offset');\n    return this.json({\n      offset: true\n    });\n  }\n  if (method === 'array') {\n    let arr = this.docs.map(terms => {\n      return terms.reduce((str, t) => {\n        return str + t.pre + t.text + t.post;\n      }, '').trim();\n    });\n    return arr.filter(str => str);\n  }\n  // return terms sorted by frequency\n  if (method === 'freq' || method === 'frequency' || method === 'topk') {\n    return topk(this.json({\n      normal: true\n    }).map(o => o.normal));\n  }\n\n  // some handy ad-hoc outputs\n  if (method === 'terms') {\n    let list = [];\n    this.docs.forEach(terms => {\n      let words = terms.map(t => t.text);\n      words = words.filter(t => t);\n      list = list.concat(words);\n    });\n    return list;\n  }\n  if (method === 'tags') {\n    return this.docs.map(terms => {\n      return terms.reduce((h, t) => {\n        h[t.implicit || t.normal] = Array.from(t.tags);\n        return h;\n      }, {});\n    });\n  }\n  if (method === 'debug') {\n    return this.debug(); //allow\n  }\n  return this.text();\n};\nconst methods = {\n  /** */\n  debug: debug,\n  /** */\n  out,\n  /** */\n  wrap: function (obj) {\n    return wrap(this, obj);\n  }\n};\nexport default methods;","map":{"version":3,"names":["debug","wrap","hash","isObject","val","Object","prototype","toString","call","topk","arr","obj","forEach","a","res","keys","map","k","normal","count","sort","b","out","method","text","json","compute","offset","docs","terms","reduce","str","t","pre","post","trim","filter","o","list","words","concat","h","implicit","Array","from","tags","methods"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/output/api/out.js"],"sourcesContent":["import debug from './debug.js'\nimport wrap from './wrap.js'\nimport hash from '../methods/hash.js'\n\nconst isObject = val => {\n  return Object.prototype.toString.call(val) === '[object Object]'\n}\n\n// sort by frequency\nconst topk = function (arr) {\n  let obj = {}\n  arr.forEach(a => {\n    obj[a] = obj[a] || 0\n    obj[a] += 1\n  })\n  let res = Object.keys(obj).map(k => {\n    return { normal: k, count: obj[k] }\n  })\n  return res.sort((a, b) => (a.count > b.count ? -1 : 0))\n}\n\n/** some named output formats */\nconst out = function (method) {\n  // support custom outputs\n  if (isObject(method)) {\n    return wrap(this, method)\n  }\n  // text out formats\n  if (method === 'text') {\n    return this.text()\n  }\n  if (method === 'normal') {\n    return this.text('normal')\n  }\n  if (method === 'root') {\n    return this.text('root')\n  }\n  if (method === 'machine' || method === 'reduced') {\n    return this.text('machine')\n  }\n  if (method === 'hash' || method === 'md5') {\n    return hash(this.text())\n  }\n\n  // json data formats\n  if (method === 'json') {\n    return this.json()\n  }\n  if (method === 'offset' || method === 'offsets') {\n    this.compute('offset')\n    return this.json({ offset: true })\n  }\n  if (method === 'array') {\n    let arr = this.docs.map(terms => {\n      return terms\n        .reduce((str, t) => {\n          return str + t.pre + t.text + t.post\n        }, '')\n        .trim()\n    })\n    return arr.filter(str => str)\n  }\n  // return terms sorted by frequency\n  if (method === 'freq' || method === 'frequency' || method === 'topk') {\n    return topk(this.json({ normal: true }).map(o => o.normal))\n  }\n\n  // some handy ad-hoc outputs\n  if (method === 'terms') {\n    let list = []\n    this.docs.forEach(terms => {\n      let words = terms.map(t => t.text)\n      words = words.filter(t => t)\n      list = list.concat(words)\n    })\n    return list\n  }\n  if (method === 'tags') {\n    return this.docs.map(terms => {\n      return terms.reduce((h, t) => {\n        h[t.implicit || t.normal] = Array.from(t.tags)\n        return h\n      }, {})\n    })\n  }\n  if (method === 'debug') {\n    return this.debug() //allow\n  }\n  return this.text()\n}\n\nconst methods = {\n  /** */\n  debug: debug,\n  /** */\n  out,\n  /** */\n  wrap: function (obj) {\n    return wrap(this, obj)\n  },\n}\n\nexport default methods\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}