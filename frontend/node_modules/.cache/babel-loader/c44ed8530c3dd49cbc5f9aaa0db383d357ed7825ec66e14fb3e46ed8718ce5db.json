{"ast":null,"code":"import Trie from './trie.js';\nconst isArray = function (input) {\n  return Object.prototype.toString.call(input) === '[object Array]';\n};\nconst handleFormats = function (input) {\n  //null\n  if (input === null || input === undefined) {\n    return {};\n  }\n  //string\n  if (typeof input === 'string') {\n    return input.split(/ +/g).reduce(function (h, str) {\n      h[str] = true;\n      return h;\n    }, {});\n  }\n  //array\n  if (isArray(input)) {\n    return input.reduce(function (h, str) {\n      h[str] = true;\n      return h;\n    }, {});\n  }\n  //object\n  return input;\n};\n\n//turn an array into a compressed string\nconst pack = function (obj) {\n  obj = handleFormats(obj);\n  //pivot into categories:\n  const flat = Object.keys(obj).reduce(function (h, k) {\n    const val = obj[k];\n    //array version-\n    //put it in several buckets\n    if (isArray(val)) {\n      for (let i = 0; i < val.length; i++) {\n        h[val[i]] = h[val[i]] || [];\n        h[val[i]].push(k);\n      }\n      return h;\n    }\n    //normal string/boolean version\n    if (h.hasOwnProperty(val) === false) {\n      //basically h[val]=[]  - support reserved words\n      Object.defineProperty(h, val, {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: []\n      });\n    }\n    h[val].push(k);\n    return h;\n  }, {});\n  //pack each into a compressed string\n  Object.keys(flat).forEach(function (k) {\n    const t = new Trie(flat[k]);\n    flat[k] = t.pack();\n  });\n  return Object.keys(flat).map(k => {\n    return k + '¦' + flat[k];\n  }).join('|');\n};\nexport default pack;","map":{"version":3,"names":["Trie","isArray","input","Object","prototype","toString","call","handleFormats","undefined","split","reduce","h","str","pack","obj","flat","keys","k","val","i","length","push","hasOwnProperty","defineProperty","writable","enumerable","configurable","value","forEach","t","map","join"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/efrt/src/pack/index.js"],"sourcesContent":["import Trie from './trie.js'\n\nconst isArray = function (input) {\n  return Object.prototype.toString.call(input) === '[object Array]'\n}\n\nconst handleFormats = function (input) {\n  //null\n  if (input === null || input === undefined) {\n    return {}\n  }\n  //string\n  if (typeof input === 'string') {\n    return input.split(/ +/g).reduce(function (h, str) {\n      h[str] = true\n      return h\n    }, {})\n  }\n  //array\n  if (isArray(input)) {\n    return input.reduce(function (h, str) {\n      h[str] = true\n      return h\n    }, {})\n  }\n  //object\n  return input\n}\n\n//turn an array into a compressed string\nconst pack = function (obj) {\n  obj = handleFormats(obj)\n  //pivot into categories:\n  const flat = Object.keys(obj).reduce(function (h, k) {\n    const val = obj[k]\n    //array version-\n    //put it in several buckets\n    if (isArray(val)) {\n      for (let i = 0; i < val.length; i++) {\n        h[val[i]] = h[val[i]] || []\n        h[val[i]].push(k)\n      }\n      return h\n    }\n    //normal string/boolean version\n    if (h.hasOwnProperty(val) === false) {\n      //basically h[val]=[]  - support reserved words\n      Object.defineProperty(h, val, {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: []\n      })\n    }\n    h[val].push(k)\n    return h\n  }, {})\n  //pack each into a compressed string\n  Object.keys(flat).forEach(function (k) {\n    const t = new Trie(flat[k])\n    flat[k] = t.pack()\n  })\n  return Object.keys(flat)\n    .map((k) => {\n      return k + '¦' + flat[k]\n    })\n    .join('|')\n}\nexport default pack\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}