{"ast":null,"code":"'use strict';\n\nconst Stemmer = require('./stemmer_uk');\nconst PorterStemmer = new Stemmer();\nmodule.exports = PorterStemmer;\nfunction attemptReplacePatterns(token, patterns) {\n  let replacement = null;\n  let i = 0;\n  let isReplaced = false;\n  while (i < patterns.length && !isReplaced) {\n    if (patterns[i][0].test(token)) {\n      replacement = token.replace(patterns[i][0], patterns[i][1]);\n      isReplaced = true;\n    }\n    i++;\n  }\n  return replacement;\n}\nfunction perfectiveGerund(token) {\n  const result = attemptReplacePatterns(token, [[/[ая]в(ши|шись)$/g, ''], [/(ив|ивши|ившись)$/g, '']]);\n  return result;\n}\nfunction adjectival(token) {\n  let result = adjective(token);\n  if (result != null) {\n    const pariticipleResult = participle(result);\n    result = pariticipleResult || result;\n  }\n  return result;\n}\nfunction adjective(token) {\n  const result = attemptReplacePatterns(token, [[/(ими|ій|ий|а|е|ова|ове|ів|є|їй|єє|еє|я|ім|ем|им|ім|их|іх|ою|йми|іми|у|ю|ого|ому|ої)$/g, '']]);\n  return result;\n}\nfunction participle(token) {\n  // edit\n  const result = attemptReplacePatterns(token, [[/(ий|ого|ому|им|ім|а|ій|у|ою|ій|і|их|йми|их)$/g, '']]);\n  return result;\n}\nfunction reflexive(token) {\n  const result = attemptReplacePatterns(token, [[/(с[яьи])$/g, '']]);\n  return result;\n}\nfunction verb(token) {\n  const result = attemptReplacePatterns(token, [[/(сь|ся|ив|ать|ять|у|ю|ав|али|учи|ячи|вши|ши|е|ме|ати|яти|є)$/g, '']]);\n  return result;\n}\nfunction noun(token) {\n  const result = attemptReplacePatterns(token, [[/(а|ев|ов|е|ями|ами|еи|и|ей|ой|ий|й|иям|ям|ием|ем|ам|ом|о|у|ах|иях|ях|ы|ь|ию|ью|ю|ия|ья|я|і|ові|ї|ею|єю|ою|є|еві|ем|єм|ів|їв|ю)$/g, '']]);\n  return result;\n}\nfunction superlative(token) {\n  const result = attemptReplacePatterns(token, [[/(ейш|ейше)$/g, '']]);\n  return result;\n}\nfunction derivational(token) {\n  const result = attemptReplacePatterns(token, [[/[^аеиоуюяіїє][аеиоуюяіїє]+[^аеиоуюяіїє]+[аеиоуюяіїє].*(?<=о)сть?$/g, '']]);\n  return result;\n}\n\n// perform full stemming algorithm on a single word\nPorterStemmer.stem = function (token) {\n  token = token.toLowerCase();\n  const volwesRegexp = /^(.*?[аеиоуюяіїє])(.*)$/g;\n  let RV = volwesRegexp.exec(token);\n  if (!RV || RV.length < 3) {\n    return token;\n  }\n  const head = RV[1];\n  RV = RV[2];\n  volwesRegexp.lastIndex = 0;\n  const R2 = volwesRegexp.exec(RV);\n  let result = perfectiveGerund(RV);\n  if (result === null) {\n    const resultReflexive = reflexive(RV) || RV;\n    result = adjectival(resultReflexive);\n    if (result === null) {\n      result = verb(resultReflexive);\n      if (result === null) {\n        result = noun(resultReflexive);\n        if (result === null) {\n          result = resultReflexive;\n        }\n      }\n    }\n  }\n  result = result.replace(/и$/g, '');\n  let derivationalResult = result;\n  if (R2 && R2[2]) {\n    derivationalResult = derivational(R2[2]);\n    if (derivationalResult != null) {\n      derivationalResult = derivational(result);\n    } else {\n      derivationalResult = result;\n    }\n  }\n  let superlativeResult = superlative(derivationalResult) || derivationalResult;\n  superlativeResult = superlativeResult.replace(/(н)н/g, '$1');\n  superlativeResult = superlativeResult.replace(/ь$/g, '');\n  return head + superlativeResult;\n};","map":{"version":3,"names":["Stemmer","require","PorterStemmer","module","exports","attemptReplacePatterns","token","patterns","replacement","i","isReplaced","length","test","replace","perfectiveGerund","result","adjectival","adjective","pariticipleResult","participle","reflexive","verb","noun","superlative","derivational","stem","toLowerCase","volwesRegexp","RV","exec","head","lastIndex","R2","resultReflexive","derivationalResult","superlativeResult"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/natural/lib/natural/stemmers/porter_stemmer_uk.js"],"sourcesContent":["'use strict'\n\nconst Stemmer = require('./stemmer_uk')\n\nconst PorterStemmer = new Stemmer()\nmodule.exports = PorterStemmer\n\nfunction attemptReplacePatterns (token, patterns) {\n  let replacement = null\n  let i = 0; let isReplaced = false\n  while ((i < patterns.length) && !isReplaced) {\n    if (patterns[i][0].test(token)) {\n      replacement = token.replace(patterns[i][0], patterns[i][1])\n      isReplaced = true\n    }\n    i++\n  }\n  return replacement\n}\n\nfunction perfectiveGerund (token) {\n  const result = attemptReplacePatterns(token, [\n    [/[ая]в(ши|шись)$/g, ''],\n    [/(ив|ивши|ившись)$/g, '']\n  ])\n  return result\n}\n\nfunction adjectival (token) {\n  let result = adjective(token)\n  if (result != null) {\n    const pariticipleResult = participle(result)\n    result = pariticipleResult || result\n  }\n  return result\n}\n\nfunction adjective (token) {\n  const result = attemptReplacePatterns(token, [\n    [/(ими|ій|ий|а|е|ова|ове|ів|є|їй|єє|еє|я|ім|ем|им|ім|их|іх|ою|йми|іми|у|ю|ого|ому|ої)$/g, '']\n  ])\n  return result\n}\n\nfunction participle (token) { // edit\n  const result = attemptReplacePatterns(token, [\n    [/(ий|ого|ому|им|ім|а|ій|у|ою|ій|і|их|йми|их)$/g, '']\n  ])\n  return result\n}\n\nfunction reflexive (token) {\n  const result = attemptReplacePatterns(token, [\n    [/(с[яьи])$/g, '']\n  ])\n  return result\n}\n\nfunction verb (token) {\n  const result = attemptReplacePatterns(token, [\n    [/(сь|ся|ив|ать|ять|у|ю|ав|али|учи|ячи|вши|ши|е|ме|ати|яти|є)$/g, '']\n  ])\n  return result\n}\n\nfunction noun (token) {\n  const result = attemptReplacePatterns(token, [\n    [/(а|ев|ов|е|ями|ами|еи|и|ей|ой|ий|й|иям|ям|ием|ем|ам|ом|о|у|ах|иях|ях|ы|ь|ию|ью|ю|ия|ья|я|і|ові|ї|ею|єю|ою|є|еві|ем|єм|ів|їв|ю)$/g, '']\n  ])\n  return result\n}\n\nfunction superlative (token) {\n  const result = attemptReplacePatterns(token, [\n    [/(ейш|ейше)$/g, '']\n  ])\n  return result\n}\n\nfunction derivational (token) {\n  const result = attemptReplacePatterns(token, [\n    [/[^аеиоуюяіїє][аеиоуюяіїє]+[^аеиоуюяіїє]+[аеиоуюяіїє].*(?<=о)сть?$/g, '']\n  ])\n  return result\n}\n\n// perform full stemming algorithm on a single word\nPorterStemmer.stem = function (token) {\n  token = token.toLowerCase()\n  const volwesRegexp = /^(.*?[аеиоуюяіїє])(.*)$/g\n  let RV = volwesRegexp.exec(token)\n  if (!RV || RV.length < 3) {\n    return token\n  }\n  const head = RV[1]\n  RV = RV[2]\n  volwesRegexp.lastIndex = 0\n  const R2 = volwesRegexp.exec(RV)\n  let result = perfectiveGerund(RV)\n  if (result === null) {\n    const resultReflexive = reflexive(RV) || RV\n    result = adjectival(resultReflexive)\n    if (result === null) {\n      result = verb(resultReflexive)\n      if (result === null) {\n        result = noun(resultReflexive)\n        if (result === null) {\n          result = resultReflexive\n        }\n      }\n    }\n  }\n  result = result.replace(/и$/g, '')\n  let derivationalResult = result\n  if (R2 && R2[2]) {\n    derivationalResult = derivational(R2[2])\n    if (derivationalResult != null) {\n      derivationalResult = derivational(result)\n    } else {\n      derivationalResult = result\n    }\n  }\n\n  let superlativeResult = superlative(derivationalResult) || derivationalResult\n\n  superlativeResult = superlativeResult.replace(/(н)н/g, '$1')\n  superlativeResult = superlativeResult.replace(/ь$/g, '')\n  return head + superlativeResult\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}