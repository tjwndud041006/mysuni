{"ast":null,"code":"import { doesOverlap, getExtent, indexN, uniquePtrs } from './_lib.js';\n\n// a union is a + b, minus duplicates\nconst getUnion = function (a, b) {\n  let both = a.concat(b);\n  let byN = indexN(both);\n  let res = [];\n  both.forEach(ptr => {\n    let [n] = ptr;\n    if (byN[n].length === 1) {\n      // we're alone on this sentence, so we're good\n      res.push(ptr);\n      return;\n    }\n    // there may be overlaps\n    let hmm = byN[n].filter(m => doesOverlap(ptr, m));\n    hmm.push(ptr);\n    let range = getExtent(hmm);\n    res.push(range);\n  });\n  res = uniquePtrs(res);\n  return res;\n};\nexport default getUnion;\n\n// two disjoint\n// console.log(getUnion([[1, 3, 4]], [[0, 1, 2]]))\n// two disjoint\n// console.log(getUnion([[0, 3, 4]], [[0, 1, 2]]))\n// overlap-plus\n// console.log(getUnion([[0, 1, 4]], [[0, 2, 6]]))\n// overlap\n// console.log(getUnion([[0, 1, 4]], [[0, 2, 3]]))\n// neighbours\n// console.log(getUnion([[0, 1, 3]], [[0, 3, 5]]))","map":{"version":3,"names":["doesOverlap","getExtent","indexN","uniquePtrs","getUnion","a","b","both","concat","byN","res","forEach","ptr","n","length","push","hmm","filter","m","range"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/1-one/pointers/api/lib/union.js"],"sourcesContent":["import { doesOverlap, getExtent, indexN, uniquePtrs } from './_lib.js'\n\n// a union is a + b, minus duplicates\nconst getUnion = function (a, b) {\n  let both = a.concat(b)\n  let byN = indexN(both)\n  let res = []\n  both.forEach(ptr => {\n    let [n] = ptr\n    if (byN[n].length === 1) {\n      // we're alone on this sentence, so we're good\n      res.push(ptr)\n      return\n    }\n    // there may be overlaps\n    let hmm = byN[n].filter(m => doesOverlap(ptr, m))\n    hmm.push(ptr)\n    let range = getExtent(hmm)\n    res.push(range)\n  })\n  res = uniquePtrs(res)\n  return res\n}\nexport default getUnion\n\n// two disjoint\n// console.log(getUnion([[1, 3, 4]], [[0, 1, 2]]))\n// two disjoint\n// console.log(getUnion([[0, 3, 4]], [[0, 1, 2]]))\n// overlap-plus\n// console.log(getUnion([[0, 1, 4]], [[0, 2, 6]]))\n// overlap\n// console.log(getUnion([[0, 1, 4]], [[0, 2, 3]]))\n// neighbours\n// console.log(getUnion([[0, 1, 3]], [[0, 3, 5]]))\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,WAAW;;AAEtE;AACA,MAAMC,QAAQ,GAAG,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAE;EAC/B,IAAIC,IAAI,GAAGF,CAAC,CAACG,MAAM,CAACF,CAAC,CAAC;EACtB,IAAIG,GAAG,GAAGP,MAAM,CAACK,IAAI,CAAC;EACtB,IAAIG,GAAG,GAAG,EAAE;EACZH,IAAI,CAACI,OAAO,CAACC,GAAG,IAAI;IAClB,IAAI,CAACC,CAAC,CAAC,GAAGD,GAAG;IACb,IAAIH,GAAG,CAACI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;MACvB;MACAJ,GAAG,CAACK,IAAI,CAACH,GAAG,CAAC;MACb;IACF;IACA;IACA,IAAII,GAAG,GAAGP,GAAG,CAACI,CAAC,CAAC,CAACI,MAAM,CAACC,CAAC,IAAIlB,WAAW,CAACY,GAAG,EAAEM,CAAC,CAAC,CAAC;IACjDF,GAAG,CAACD,IAAI,CAACH,GAAG,CAAC;IACb,IAAIO,KAAK,GAAGlB,SAAS,CAACe,GAAG,CAAC;IAC1BN,GAAG,CAACK,IAAI,CAACI,KAAK,CAAC;EACjB,CAAC,CAAC;EACFT,GAAG,GAAGP,UAAU,CAACO,GAAG,CAAC;EACrB,OAAOA,GAAG;AACZ,CAAC;AACD,eAAeN,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}