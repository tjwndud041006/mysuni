{"ast":null,"code":"// wrappers for loops in javascript arrays\n\nconst forEach = function (cb) {\n  let ptrs = this.fullPointer;\n  ptrs.forEach((ptr, i) => {\n    let view = this.update([ptr]);\n    cb(view, i);\n  });\n  return this;\n};\nconst map = function (cb, empty) {\n  let ptrs = this.fullPointer;\n  let res = ptrs.map((ptr, i) => {\n    let view = this.update([ptr]);\n    let out = cb(view, i);\n    // if we returned nothing, return a view\n    if (out === undefined) {\n      return this.none();\n    }\n    return out;\n  });\n  if (res.length === 0) {\n    return empty || this.update([]);\n  }\n  // return an array of values, or View objects?\n  // user can return either from their callback\n  if (res[0] !== undefined) {\n    // array of strings\n    if (typeof res[0] === 'string') {\n      return res;\n    }\n    // array of objects\n    if (typeof res[0] === 'object' && (res[0] === null || !res[0].isView)) {\n      return res;\n    }\n  }\n  // return a View object\n  let all = [];\n  res.forEach(ptr => {\n    all = all.concat(ptr.fullPointer);\n  });\n  return this.toView(all);\n};\nconst filter = function (cb) {\n  let ptrs = this.fullPointer;\n  ptrs = ptrs.filter((ptr, i) => {\n    let view = this.update([ptr]);\n    return cb(view, i);\n  });\n  let res = this.update(ptrs);\n  return res;\n};\nconst find = function (cb) {\n  let ptrs = this.fullPointer;\n  let found = ptrs.find((ptr, i) => {\n    let view = this.update([ptr]);\n    return cb(view, i);\n  });\n  return this.update([found]);\n};\nconst some = function (cb) {\n  let ptrs = this.fullPointer;\n  return ptrs.some((ptr, i) => {\n    let view = this.update([ptr]);\n    return cb(view, i);\n  });\n};\nconst random = function (n = 1) {\n  let ptrs = this.fullPointer;\n  let r = Math.floor(Math.random() * ptrs.length);\n  //prevent it from going over the end\n  if (r + n > this.length) {\n    r = this.length - n;\n    r = r < 0 ? 0 : r;\n  }\n  ptrs = ptrs.slice(r, r + n);\n  return this.update(ptrs);\n};\nexport default {\n  forEach,\n  map,\n  filter,\n  find,\n  some,\n  random\n};","map":{"version":3,"names":["forEach","cb","ptrs","fullPointer","ptr","i","view","update","map","empty","res","out","undefined","none","length","isView","all","concat","toView","filter","find","found","some","random","n","r","Math","floor","slice"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/API/methods/loops.js"],"sourcesContent":["// wrappers for loops in javascript arrays\n\nconst forEach = function (cb) {\n  let ptrs = this.fullPointer\n  ptrs.forEach((ptr, i) => {\n    let view = this.update([ptr])\n    cb(view, i)\n  })\n  return this\n}\n\nconst map = function (cb, empty) {\n  let ptrs = this.fullPointer\n  let res = ptrs.map((ptr, i) => {\n    let view = this.update([ptr])\n    let out = cb(view, i)\n    // if we returned nothing, return a view\n    if (out === undefined) {\n      return this.none()\n    }\n    return out\n  })\n  if (res.length === 0) {\n    return empty || this.update([])\n  }\n  // return an array of values, or View objects?\n  // user can return either from their callback\n  if (res[0] !== undefined) {\n    // array of strings\n    if (typeof res[0] === 'string') {\n      return res\n    }\n    // array of objects\n    if (typeof res[0] === 'object' && (res[0] === null || !res[0].isView)) {\n      return res\n    }\n  }\n  // return a View object\n  let all = []\n  res.forEach(ptr => {\n    all = all.concat(ptr.fullPointer)\n  })\n  return this.toView(all)\n}\n\nconst filter = function (cb) {\n  let ptrs = this.fullPointer\n  ptrs = ptrs.filter((ptr, i) => {\n    let view = this.update([ptr])\n    return cb(view, i)\n  })\n  let res = this.update(ptrs)\n  return res\n}\n\nconst find = function (cb) {\n  let ptrs = this.fullPointer\n  let found = ptrs.find((ptr, i) => {\n    let view = this.update([ptr])\n    return cb(view, i)\n  })\n  return this.update([found])\n}\n\nconst some = function (cb) {\n  let ptrs = this.fullPointer\n  return ptrs.some((ptr, i) => {\n    let view = this.update([ptr])\n    return cb(view, i)\n  })\n}\n\nconst random = function (n = 1) {\n  let ptrs = this.fullPointer\n  let r = Math.floor(Math.random() * ptrs.length)\n  //prevent it from going over the end\n  if (r + n > this.length) {\n    r = this.length - n\n    r = r < 0 ? 0 : r\n  }\n  ptrs = ptrs.slice(r, r + n)\n  return this.update(ptrs)\n}\nexport default { forEach, map, filter, find, some, random }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}