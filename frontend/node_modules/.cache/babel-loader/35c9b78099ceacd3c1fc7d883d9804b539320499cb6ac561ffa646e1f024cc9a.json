{"ast":null,"code":"export default [\n// ==== Ambiguous numbers ====\n// 'second'\n{\n  match: `#Cardinal [second]`,\n  tag: 'Unit',\n  reason: 'one-second'\n},\n//'a/an' can mean 1 - \"a hour\"\n{\n  match: '!once? [(a|an)] (#Duration|hundred|thousand|million|billion|trillion)',\n  group: 0,\n  tag: 'Value',\n  reason: 'a-is-one'\n},\n// ==== PhoneNumber ====\n//1 800 ...\n{\n  match: '1 #Value #PhoneNumber',\n  tag: 'PhoneNumber',\n  reason: '1-800-Value'\n},\n//(454) 232-9873\n{\n  match: '#NumericValue #PhoneNumber',\n  tag: 'PhoneNumber',\n  reason: '(800) PhoneNumber'\n},\n// ==== Currency ====\n// chinese yuan\n{\n  match: '#Demonym #Currency',\n  tag: 'Currency',\n  reason: 'demonym-currency'\n},\n// ten bucks\n{\n  match: '#Value [(buck|bucks|grand)]',\n  group: 0,\n  tag: 'Currency',\n  reason: 'value-bucks'\n},\n// ==== Money ====\n{\n  match: '[#Value+] #Currency',\n  group: 0,\n  tag: 'Money',\n  reason: '15 usd'\n},\n// ==== Ordinal ====\n{\n  match: '[second] #Noun',\n  group: 0,\n  tag: 'Ordinal',\n  reason: 'second-noun'\n},\n// ==== Units ====\n//5 yan\n{\n  match: '#Value+ [#Currency]',\n  group: 0,\n  tag: 'Unit',\n  reason: '5-yan'\n}, {\n  match: '#Value [(foot|feet)]',\n  group: 0,\n  tag: 'Unit',\n  reason: 'foot-unit'\n},\n//5 kg.\n{\n  match: '#Value [#Abbreviation]',\n  group: 0,\n  tag: 'Unit',\n  reason: 'value-abbr'\n}, {\n  match: '#Value [k]',\n  group: 0,\n  tag: 'Unit',\n  reason: 'value-k'\n}, {\n  match: '#Unit an hour',\n  tag: 'Unit',\n  reason: 'unit-an-hour'\n},\n// ==== Magnitudes ====\n//minus 7\n{\n  match: '(minus|negative) #Value',\n  tag: 'Value',\n  reason: 'minus-value'\n},\n//seven point five\n{\n  match: '#Value (point|decimal) #Value',\n  tag: 'Value',\n  reason: 'value-point-value'\n},\n//quarter million\n{\n  match: '#Determiner [(half|quarter)] #Ordinal',\n  group: 0,\n  tag: 'Value',\n  reason: 'half-ordinal'\n},\n// thousand and two\n{\n  match: `#Multiple+ and #Value`,\n  tag: 'Value',\n  reason: 'magnitude-and-value'\n},\n// ambiguous units like 'gb'\n// { match: '#Value square? [(kb|mb|gb|tb|ml|pt|qt|tbl|tbsp|km|cm|mm|mi|ft|yd|kg|hg|mg|oz|lb|mph|pa|miles|yard|yards|pound|pounds)]', group: 0, tag: 'Unit', reason: '12-gb' },\n// 5 miles per hour\n{\n  match: '#Value #Unit [(per|an) (hr|hour|sec|second|min|minute)]',\n  group: 0,\n  tag: 'Unit',\n  reason: '12-miles-per-second'\n},\n// 5 square miles\n{\n  match: '#Value [(square|cubic)] #Unit',\n  group: 0,\n  tag: 'Unit',\n  reason: 'square-miles'\n}\n// 5) The expenses\n// { match: '^[#Value] (#Determiner|#Gerund)', group: 0, tag: 'Expression', unTag: 'Value', reason: 'numbered-list' },\n];","map":{"version":3,"names":["match","tag","reason","group"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/postTagger/model/numbers/numbers.js"],"sourcesContent":["export default [\n  // ==== Ambiguous numbers ====\n  // 'second'\n  { match: `#Cardinal [second]`, tag: 'Unit', reason: 'one-second' },\n  //'a/an' can mean 1 - \"a hour\"\n  {\n    match: '!once? [(a|an)] (#Duration|hundred|thousand|million|billion|trillion)',\n    group: 0,\n    tag: 'Value',\n    reason: 'a-is-one',\n  },\n  // ==== PhoneNumber ====\n  //1 800 ...\n  { match: '1 #Value #PhoneNumber', tag: 'PhoneNumber', reason: '1-800-Value' },\n  //(454) 232-9873\n  { match: '#NumericValue #PhoneNumber', tag: 'PhoneNumber', reason: '(800) PhoneNumber' },\n\n  // ==== Currency ====\n  // chinese yuan\n  { match: '#Demonym #Currency', tag: 'Currency', reason: 'demonym-currency' },\n  // ten bucks\n  { match: '#Value [(buck|bucks|grand)]', group: 0, tag: 'Currency', reason: 'value-bucks' },\n  // ==== Money ====\n  { match: '[#Value+] #Currency', group: 0, tag: 'Money', reason: '15 usd' },\n\n  // ==== Ordinal ====\n  { match: '[second] #Noun', group: 0, tag: 'Ordinal', reason: 'second-noun' },\n\n  // ==== Units ====\n  //5 yan\n  { match: '#Value+ [#Currency]', group: 0, tag: 'Unit', reason: '5-yan' },\n  { match: '#Value [(foot|feet)]', group: 0, tag: 'Unit', reason: 'foot-unit' },\n  //5 kg.\n  { match: '#Value [#Abbreviation]', group: 0, tag: 'Unit', reason: 'value-abbr' },\n  { match: '#Value [k]', group: 0, tag: 'Unit', reason: 'value-k' },\n  { match: '#Unit an hour', tag: 'Unit', reason: 'unit-an-hour' },\n\n  // ==== Magnitudes ====\n  //minus 7\n  { match: '(minus|negative) #Value', tag: 'Value', reason: 'minus-value' },\n  //seven point five\n  { match: '#Value (point|decimal) #Value', tag: 'Value', reason: 'value-point-value' },\n  //quarter million\n  { match: '#Determiner [(half|quarter)] #Ordinal', group: 0, tag: 'Value', reason: 'half-ordinal' },\n  // thousand and two\n  { match: `#Multiple+ and #Value`, tag: 'Value', reason: 'magnitude-and-value' },\n  // ambiguous units like 'gb'\n  // { match: '#Value square? [(kb|mb|gb|tb|ml|pt|qt|tbl|tbsp|km|cm|mm|mi|ft|yd|kg|hg|mg|oz|lb|mph|pa|miles|yard|yards|pound|pounds)]', group: 0, tag: 'Unit', reason: '12-gb' },\n  // 5 miles per hour\n  { match: '#Value #Unit [(per|an) (hr|hour|sec|second|min|minute)]', group: 0, tag: 'Unit', reason: '12-miles-per-second' },\n  // 5 square miles\n  { match: '#Value [(square|cubic)] #Unit', group: 0, tag: 'Unit', reason: 'square-miles' },\n  // 5) The expenses\n  // { match: '^[#Value] (#Determiner|#Gerund)', group: 0, tag: 'Expression', unTag: 'Value', reason: 'numbered-list' },\n]\n"],"mappings":"AAAA,eAAe;AACb;AACA;AACA;EAAEA,KAAK,EAAE,oBAAoB;EAAEC,GAAG,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAa,CAAC;AAClE;AACA;EACEF,KAAK,EAAE,uEAAuE;EAC9EG,KAAK,EAAE,CAAC;EACRF,GAAG,EAAE,OAAO;EACZC,MAAM,EAAE;AACV,CAAC;AACD;AACA;AACA;EAAEF,KAAK,EAAE,uBAAuB;EAAEC,GAAG,EAAE,aAAa;EAAEC,MAAM,EAAE;AAAc,CAAC;AAC7E;AACA;EAAEF,KAAK,EAAE,4BAA4B;EAAEC,GAAG,EAAE,aAAa;EAAEC,MAAM,EAAE;AAAoB,CAAC;AAExF;AACA;AACA;EAAEF,KAAK,EAAE,oBAAoB;EAAEC,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAmB,CAAC;AAC5E;AACA;EAAEF,KAAK,EAAE,6BAA6B;EAAEG,KAAK,EAAE,CAAC;EAAEF,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAc,CAAC;AAC1F;AACA;EAAEF,KAAK,EAAE,qBAAqB;EAAEG,KAAK,EAAE,CAAC;EAAEF,GAAG,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAS,CAAC;AAE1E;AACA;EAAEF,KAAK,EAAE,gBAAgB;EAAEG,KAAK,EAAE,CAAC;EAAEF,GAAG,EAAE,SAAS;EAAEC,MAAM,EAAE;AAAc,CAAC;AAE5E;AACA;AACA;EAAEF,KAAK,EAAE,qBAAqB;EAAEG,KAAK,EAAE,CAAC;EAAEF,GAAG,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAQ,CAAC,EACxE;EAAEF,KAAK,EAAE,sBAAsB;EAAEG,KAAK,EAAE,CAAC;EAAEF,GAAG,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAY,CAAC;AAC7E;AACA;EAAEF,KAAK,EAAE,wBAAwB;EAAEG,KAAK,EAAE,CAAC;EAAEF,GAAG,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAa,CAAC,EAChF;EAAEF,KAAK,EAAE,YAAY;EAAEG,KAAK,EAAE,CAAC;EAAEF,GAAG,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAU,CAAC,EACjE;EAAEF,KAAK,EAAE,eAAe;EAAEC,GAAG,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAe,CAAC;AAE/D;AACA;AACA;EAAEF,KAAK,EAAE,yBAAyB;EAAEC,GAAG,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAc,CAAC;AACzE;AACA;EAAEF,KAAK,EAAE,+BAA+B;EAAEC,GAAG,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAoB,CAAC;AACrF;AACA;EAAEF,KAAK,EAAE,uCAAuC;EAAEG,KAAK,EAAE,CAAC;EAAEF,GAAG,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAe,CAAC;AAClG;AACA;EAAEF,KAAK,EAAE,uBAAuB;EAAEC,GAAG,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAsB,CAAC;AAC/E;AACA;AACA;AACA;EAAEF,KAAK,EAAE,yDAAyD;EAAEG,KAAK,EAAE,CAAC;EAAEF,GAAG,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAsB,CAAC;AAC1H;AACA;EAAEF,KAAK,EAAE,+BAA+B;EAAEG,KAAK,EAAE,CAAC;EAAEF,GAAG,EAAE,MAAM;EAAEC,MAAM,EAAE;AAAe;AACxF;AACA;AAAA,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}