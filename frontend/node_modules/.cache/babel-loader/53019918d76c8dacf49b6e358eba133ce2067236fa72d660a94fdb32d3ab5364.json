{"ast":null,"code":"'use strict';\n\nvar trigram = require('n-gram').trigram;\nvar collapse = require('collapse-white-space');\nvar trim = require('trim');\nvar has = {}.hasOwnProperty;\nexports.clean = clean;\nexports.trigrams = getCleanTrigrams;\nexports.asDictionary = getCleanTrigramsAsDictionary;\nexports.asTuples = getCleanTrigramsAsTuples;\nexports.tuplesAsDictionary = getCleanTrigramTuplesAsDictionary;\n\n// Clean `value`/\n// Removed general non-important (as in, for language detection) punctuation\n// marks, symbols, and numbers.\nfunction clean(value) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  return trim(collapse(String(value).replace(/[\\u0021-\\u0040]+/g, ' '))).toLowerCase();\n}\n\n// Get clean, padded, trigrams.\nfunction getCleanTrigrams(value) {\n  return trigram(' ' + clean(value) + ' ');\n}\n\n// Get an `Object` with trigrams as its attributes, and their occurence count as\n// their values.\nfunction getCleanTrigramsAsDictionary(value) {\n  var trigrams = getCleanTrigrams(value);\n  var index = trigrams.length;\n  var dictionary = {};\n  var trigram;\n  while (index--) {\n    trigram = trigrams[index];\n    if (has.call(dictionary, trigram)) {\n      dictionary[trigram]++;\n    } else {\n      dictionary[trigram] = 1;\n    }\n  }\n  return dictionary;\n}\n\n// Get an `Array` containing trigram--count tuples from a given value.\nfunction getCleanTrigramsAsTuples(value) {\n  var dictionary = getCleanTrigramsAsDictionary(value);\n  var tuples = [];\n  var trigram;\n  for (trigram in dictionary) {\n    tuples.push([trigram, dictionary[trigram]]);\n  }\n  tuples.sort(sort);\n  return tuples;\n}\n\n// Get an `Array` containing trigram--count tuples from a given value.\nfunction getCleanTrigramTuplesAsDictionary(tuples) {\n  var index = tuples.length;\n  var dictionary = {};\n  var tuple;\n  while (index--) {\n    tuple = tuples[index];\n    dictionary[tuple[0]] = tuple[1];\n  }\n  return dictionary;\n}\n\n// Deep regular sort on item at `1` in both `Object`s.\nfunction sort(a, b) {\n  return a[1] - b[1];\n}","map":{"version":3,"names":["trigram","require","collapse","trim","has","hasOwnProperty","exports","clean","trigrams","getCleanTrigrams","asDictionary","getCleanTrigramsAsDictionary","asTuples","getCleanTrigramsAsTuples","tuplesAsDictionary","getCleanTrigramTuplesAsDictionary","value","undefined","String","replace","toLowerCase","index","length","dictionary","call","tuples","push","sort","tuple","a","b"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/trigram-utils/index.js"],"sourcesContent":["'use strict'\n\nvar trigram = require('n-gram').trigram\nvar collapse = require('collapse-white-space')\nvar trim = require('trim')\n\nvar has = {}.hasOwnProperty\n\nexports.clean = clean\nexports.trigrams = getCleanTrigrams\nexports.asDictionary = getCleanTrigramsAsDictionary\nexports.asTuples = getCleanTrigramsAsTuples\nexports.tuplesAsDictionary = getCleanTrigramTuplesAsDictionary\n\n// Clean `value`/\n// Removed general non-important (as in, for language detection) punctuation\n// marks, symbols, and numbers.\nfunction clean(value) {\n  if (value === null || value === undefined) {\n    return ''\n  }\n\n  return trim(\n    collapse(String(value).replace(/[\\u0021-\\u0040]+/g, ' '))\n  ).toLowerCase()\n}\n\n// Get clean, padded, trigrams.\nfunction getCleanTrigrams(value) {\n  return trigram(' ' + clean(value) + ' ')\n}\n\n// Get an `Object` with trigrams as its attributes, and their occurence count as\n// their values.\nfunction getCleanTrigramsAsDictionary(value) {\n  var trigrams = getCleanTrigrams(value)\n  var index = trigrams.length\n  var dictionary = {}\n  var trigram\n\n  while (index--) {\n    trigram = trigrams[index]\n\n    if (has.call(dictionary, trigram)) {\n      dictionary[trigram]++\n    } else {\n      dictionary[trigram] = 1\n    }\n  }\n\n  return dictionary\n}\n\n// Get an `Array` containing trigram--count tuples from a given value.\nfunction getCleanTrigramsAsTuples(value) {\n  var dictionary = getCleanTrigramsAsDictionary(value)\n  var tuples = []\n  var trigram\n\n  for (trigram in dictionary) {\n    tuples.push([trigram, dictionary[trigram]])\n  }\n\n  tuples.sort(sort)\n\n  return tuples\n}\n\n// Get an `Array` containing trigram--count tuples from a given value.\nfunction getCleanTrigramTuplesAsDictionary(tuples) {\n  var index = tuples.length\n  var dictionary = {}\n  var tuple\n\n  while (index--) {\n    tuple = tuples[index]\n    dictionary[tuple[0]] = tuple[1]\n  }\n\n  return dictionary\n}\n\n// Deep regular sort on item at `1` in both `Object`s.\nfunction sort(a, b) {\n  return a[1] - b[1]\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,OAAO;AACvC,IAAIE,QAAQ,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAC9C,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAIG,GAAG,GAAG,CAAC,CAAC,CAACC,cAAc;AAE3BC,OAAO,CAACC,KAAK,GAAGA,KAAK;AACrBD,OAAO,CAACE,QAAQ,GAAGC,gBAAgB;AACnCH,OAAO,CAACI,YAAY,GAAGC,4BAA4B;AACnDL,OAAO,CAACM,QAAQ,GAAGC,wBAAwB;AAC3CP,OAAO,CAACQ,kBAAkB,GAAGC,iCAAiC;;AAE9D;AACA;AACA;AACA,SAASR,KAAKA,CAACS,KAAK,EAAE;EACpB,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS,EAAE;IACzC,OAAO,EAAE;EACX;EAEA,OAAOd,IAAI,CACTD,QAAQ,CAACgB,MAAM,CAACF,KAAK,CAAC,CAACG,OAAO,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAC1D,CAAC,CAACC,WAAW,CAAC,CAAC;AACjB;;AAEA;AACA,SAASX,gBAAgBA,CAACO,KAAK,EAAE;EAC/B,OAAOhB,OAAO,CAAC,GAAG,GAAGO,KAAK,CAACS,KAAK,CAAC,GAAG,GAAG,CAAC;AAC1C;;AAEA;AACA;AACA,SAASL,4BAA4BA,CAACK,KAAK,EAAE;EAC3C,IAAIR,QAAQ,GAAGC,gBAAgB,CAACO,KAAK,CAAC;EACtC,IAAIK,KAAK,GAAGb,QAAQ,CAACc,MAAM;EAC3B,IAAIC,UAAU,GAAG,CAAC,CAAC;EACnB,IAAIvB,OAAO;EAEX,OAAOqB,KAAK,EAAE,EAAE;IACdrB,OAAO,GAAGQ,QAAQ,CAACa,KAAK,CAAC;IAEzB,IAAIjB,GAAG,CAACoB,IAAI,CAACD,UAAU,EAAEvB,OAAO,CAAC,EAAE;MACjCuB,UAAU,CAACvB,OAAO,CAAC,EAAE;IACvB,CAAC,MAAM;MACLuB,UAAU,CAACvB,OAAO,CAAC,GAAG,CAAC;IACzB;EACF;EAEA,OAAOuB,UAAU;AACnB;;AAEA;AACA,SAASV,wBAAwBA,CAACG,KAAK,EAAE;EACvC,IAAIO,UAAU,GAAGZ,4BAA4B,CAACK,KAAK,CAAC;EACpD,IAAIS,MAAM,GAAG,EAAE;EACf,IAAIzB,OAAO;EAEX,KAAKA,OAAO,IAAIuB,UAAU,EAAE;IAC1BE,MAAM,CAACC,IAAI,CAAC,CAAC1B,OAAO,EAAEuB,UAAU,CAACvB,OAAO,CAAC,CAAC,CAAC;EAC7C;EAEAyB,MAAM,CAACE,IAAI,CAACA,IAAI,CAAC;EAEjB,OAAOF,MAAM;AACf;;AAEA;AACA,SAASV,iCAAiCA,CAACU,MAAM,EAAE;EACjD,IAAIJ,KAAK,GAAGI,MAAM,CAACH,MAAM;EACzB,IAAIC,UAAU,GAAG,CAAC,CAAC;EACnB,IAAIK,KAAK;EAET,OAAOP,KAAK,EAAE,EAAE;IACdO,KAAK,GAAGH,MAAM,CAACJ,KAAK,CAAC;IACrBE,UAAU,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC;EACjC;EAEA,OAAOL,UAAU;AACnB;;AAEA;AACA,SAASI,IAAIA,CAACE,CAAC,EAAEC,CAAC,EAAE;EAClB,OAAOD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}