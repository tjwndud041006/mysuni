{"ast":null,"code":"// check a rule\nconst convert = function (str, rule) {\n  if (rule.from.length >= str.length) {\n    return null;\n  }\n  if (str.endsWith(rule.from)) {\n    let len = str.length - rule.from.length;\n    let pre = str.slice(0, len);\n    // if (str === 'agenouiller') {\n    //   console.log(str, rule, pre + rule.to)\n    // }\n    return pre + rule.to;\n  }\n  return null;\n};\nexport default convert;\n// console.log(convert('asdfoo', { from: 'foo', to: 'dog' }))","map":{"version":3,"names":["convert","str","rule","from","length","endsWith","len","pre","slice","to"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/suffix-thumb/src/learn/find/_convert.js"],"sourcesContent":["// check a rule\nconst convert = function (str, rule) {\n  if (rule.from.length >= str.length) {\n    return null\n  }\n  if (str.endsWith(rule.from)) {\n    let len = str.length - rule.from.length\n    let pre = str.slice(0, len)\n    // if (str === 'agenouiller') {\n    //   console.log(str, rule, pre + rule.to)\n    // }\n    return pre + rule.to\n  }\n  return null\n}\nexport default convert\n// console.log(convert('asdfoo', { from: 'foo', to: 'dog' }))"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,SAAAA,CAAUC,GAAG,EAAEC,IAAI,EAAE;EACnC,IAAIA,IAAI,CAACC,IAAI,CAACC,MAAM,IAAIH,GAAG,CAACG,MAAM,EAAE;IAClC,OAAO,IAAI;EACb;EACA,IAAIH,GAAG,CAACI,QAAQ,CAACH,IAAI,CAACC,IAAI,CAAC,EAAE;IAC3B,IAAIG,GAAG,GAAGL,GAAG,CAACG,MAAM,GAAGF,IAAI,CAACC,IAAI,CAACC,MAAM;IACvC,IAAIG,GAAG,GAAGN,GAAG,CAACO,KAAK,CAAC,CAAC,EAAEF,GAAG,CAAC;IAC3B;IACA;IACA;IACA,OAAOC,GAAG,GAAGL,IAAI,CAACO,EAAE;EACtB;EACA,OAAO,IAAI;AACb,CAAC;AACD,eAAeT,OAAO;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}