{"ast":null,"code":"export default [\n// half a penny\n{\n  match: '[(half|quarter)] of? (a|an)',\n  group: 0,\n  tag: 'Fraction',\n  reason: 'millionth'\n},\n// nearly half\n{\n  match: '#Adverb [half]',\n  group: 0,\n  tag: 'Fraction',\n  reason: 'nearly-half'\n},\n// half the\n{\n  match: '[half] the',\n  group: 0,\n  tag: 'Fraction',\n  reason: 'half-the'\n},\n// and a half\n{\n  match: '#Cardinal and a half',\n  tag: 'Fraction',\n  reason: 'and-a-half'\n},\n// two-halves\n{\n  match: '#Value (halves|halfs|quarters)',\n  tag: 'Fraction',\n  reason: 'two-halves'\n},\n// ---ordinals as fractions---\n// a fifth\n{\n  match: 'a #Ordinal',\n  tag: 'Fraction',\n  reason: 'a-quarter'\n},\n// seven fifths\n{\n  match: '[#Cardinal+] (#Fraction && /s$/)',\n  tag: 'Fraction',\n  reason: 'seven-fifths'\n},\n// doc.match('(#Fraction && /s$/)').lookBefore('#Cardinal+$').tag('Fraction')\n// one third of ..\n{\n  match: '[#Cardinal+ #Ordinal] of .',\n  group: 0,\n  tag: 'Fraction',\n  reason: 'ordinal-of'\n},\n// 100th of\n{\n  match: '[(#NumericValue && #Ordinal)] of .',\n  group: 0,\n  tag: 'Fraction',\n  reason: 'num-ordinal-of'\n},\n// a twenty fifth\n{\n  match: '(a|one) #Cardinal?+ #Ordinal',\n  tag: 'Fraction',\n  reason: 'a-ordinal'\n},\n// //  '3 out of 5'\n{\n  match: '#Cardinal+ out? of every? #Cardinal',\n  tag: 'Fraction',\n  reason: 'out-of'\n}];\n\n// {match:'', tag:'',reason:''},","map":{"version":3,"names":["match","group","tag","reason"],"sources":["/Users/seojuyoung/sunic/project/frontend/node_modules/compromise/src/2-two/postTagger/model/numbers/fractions.js"],"sourcesContent":["export default [\n  // half a penny\n  { match: '[(half|quarter)] of? (a|an)', group: 0, tag: 'Fraction', reason: 'millionth' },\n  // nearly half\n  { match: '#Adverb [half]', group: 0, tag: 'Fraction', reason: 'nearly-half' },\n  // half the\n  { match: '[half] the', group: 0, tag: 'Fraction', reason: 'half-the' },\n  // and a half\n  { match: '#Cardinal and a half', tag: 'Fraction', reason: 'and-a-half' },\n  // two-halves\n  { match: '#Value (halves|halfs|quarters)', tag: 'Fraction', reason: 'two-halves' },\n\n  // ---ordinals as fractions---\n  // a fifth\n  { match: 'a #Ordinal', tag: 'Fraction', reason: 'a-quarter' },\n  // seven fifths\n  { match: '[#Cardinal+] (#Fraction && /s$/)', tag: 'Fraction', reason: 'seven-fifths' },\n  // doc.match('(#Fraction && /s$/)').lookBefore('#Cardinal+$').tag('Fraction')\n  // one third of ..\n  { match: '[#Cardinal+ #Ordinal] of .', group: 0, tag: 'Fraction', reason: 'ordinal-of' },\n  // 100th of\n  { match: '[(#NumericValue && #Ordinal)] of .', group: 0, tag: 'Fraction', reason: 'num-ordinal-of' },\n  // a twenty fifth\n  { match: '(a|one) #Cardinal?+ #Ordinal', tag: 'Fraction', reason: 'a-ordinal' },\n\n  // //  '3 out of 5'\n  { match: '#Cardinal+ out? of every? #Cardinal', tag: 'Fraction', reason: 'out-of' },\n]\n\n// {match:'', tag:'',reason:''},\n"],"mappings":"AAAA,eAAe;AACb;AACA;EAAEA,KAAK,EAAE,6BAA6B;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAY,CAAC;AACxF;AACA;EAAEH,KAAK,EAAE,gBAAgB;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAc,CAAC;AAC7E;AACA;EAAEH,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAW,CAAC;AACtE;AACA;EAAEH,KAAK,EAAE,sBAAsB;EAAEE,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAa,CAAC;AACxE;AACA;EAAEH,KAAK,EAAE,gCAAgC;EAAEE,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAa,CAAC;AAElF;AACA;AACA;EAAEH,KAAK,EAAE,YAAY;EAAEE,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAY,CAAC;AAC7D;AACA;EAAEH,KAAK,EAAE,kCAAkC;EAAEE,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAe,CAAC;AACtF;AACA;AACA;EAAEH,KAAK,EAAE,4BAA4B;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAa,CAAC;AACxF;AACA;EAAEH,KAAK,EAAE,oCAAoC;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAiB,CAAC;AACpG;AACA;EAAEH,KAAK,EAAE,8BAA8B;EAAEE,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAY,CAAC;AAE/E;AACA;EAAEH,KAAK,EAAE,qCAAqC;EAAEE,GAAG,EAAE,UAAU;EAAEC,MAAM,EAAE;AAAS,CAAC,CACpF;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}